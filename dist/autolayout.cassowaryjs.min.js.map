{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///autolayout.cassowaryjs.min.js","webpack:///webpack/bootstrap aae7fd529eb99ed245df","webpack:///./src/index.js","webpack:///./src/Attribute.js","webpack:///./src/Relation.js","webpack:///./src/Priority.js","webpack:///./src/VisualFormat.js","webpack:///./src/parser/parser.js","webpack:///./src/parser/parserExt.js","webpack:///./src/View.js","webpack:///./~/cassowary/bin/c.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/SubView.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Attribute","_Attribute2","_Relation","_Relation2","_Priority","_Priority2","_VisualFormat","_VisualFormat2","_View","_View2","_SubView","_SubView2","AutoLayout","Attribute","Relation","Priority","VisualFormat","View","SubView","CONST","NOTANATTRIBUTE","VARIABLE","LEFT","RIGHT","TOP","BOTTOM","WIDTH","HEIGHT","CENTERX","CENTERY","ZINDEX","LEQ","EQU","GEQ","REQUIRED","DEFAULTHIGH","DEFAULTLOW","_classCallCheck","instance","Constructor","TypeError","_processEqualSpacer","context","stackView","equalSpacerIndex","name","lineIndex","constraints","push","view1","attr1","horizontal","relation","view2","attr2","priority","view","multiplier","undefined","constant","i","prevViews","length","prevView","orientation","Orientation","HORIZONTAL","prevAttr","curAttr","VERTICAL","_processProportionalSpacer","proportionalSpacerIndex","_processStackView","subView","viewName","orientations","stack","processedOrientations","type","j","subViews","_getRange","range","match","substring","parseInt","start","res","_processCascade","cascade","parentItem","curViews","item","Array","isArray","hasOwnProperty","items","z","viewRange","r","curView","n","attribute","variable","equalSpacing","err","Error","column","$parserOffset","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_parser","_parser2","_parserExt","_parserExt2","metaInfoCategories","visualFormat","options","extended","indexOf","parse","outFormat","predicates","attr","lineSeperator","parseLine","source","lines","line","parseOptions","strict","split","trim","concat","prefix","metaInfo","k","s","category","prefixedCategory","names","viewport","aspectRatio","height","width","widths","isNaN","heights","spacing","JSON","sIdx","len","peg$subclass","child","parent","ctor","constructor","SyntaxError","message","expected","found","offset","input","peg$reportedPos","peg$computePosDetails","pos","advance","details","startPos","endPos","ch","charAt","seenCR","peg$cachedPos","peg$cachedPosDetails","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","peg$buildException","cleanupExpected","sort","a","b","description","splice","buildMessage","stringEscape","hex","charCodeAt","toString","toUpperCase","replace","expectedDesc","foundDesc","expectedDescs","slice","join","posDetails","peg$parsevisualFormatString","s0","s1","s2","s3","s4","s5","s6","s7","peg$parseorientation","peg$FAILED","peg$c2","peg$silentFails","peg$c3","peg$c0","peg$c1","peg$parsesuperview","peg$parseconnection","peg$parseview","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$parseviewName","peg$parsepredicateListWithParens","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$parsepredicateList","peg$c21","peg$c22","peg$c23","peg$c24","peg$parsesimplePredicate","peg$parsenumber","peg$c25","peg$c26","peg$c27","peg$parsepredicate","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$parserelation","peg$parseobjectOfPredicate","peg$c33","peg$c34","peg$parsepriority","peg$c35","substr","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$parseconstant","peg$c45","test","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","extend","dst","arguments","peg$result","peg$startRuleFunctions","visualFormatString","peg$startRuleFunction","o","superto","views","tosuper","apply","orient","predicateList","ps","map","digits","f","v","decimals","parseFloat","startRule","peg$parsevisualFormatStringExt","peg$parsevisualFormatStringAttributeExpression","peg$parseattributeMark","peg$parseattributeSignifier","peg$parsecomments","peg$c4","peg$parseattribute","peg$parseviewGroup","peg$parseviewNameRange","peg$parsecascadedViews","peg$parseequalSpacingPredicateList","peg$parsepercentage","peg$c58","peg$c59","peg$c60","peg$c61","peg$parseequalSpacingPredicate","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$parseviewPredicate","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$parsemultiplier","peg$parseconstantExpr","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","peg$c110","peg$c111","peg$c112","peg$c113","peg$c114","peg$c115","peg$c116","peg$c117","peg$c118","peg$c119","peg$c120","peg$c121","peg$c122","peg$c123","peg$c124","peg$c125","peg$c126","peg$c127","peg$parserange","peg$c128","peg$c129","peg$c130","peg$c131","peg$c132","peg$c133","peg$c134","peg$c135","peg$c136","visualFormatStringExt","viewAttrLeft","comments","cascadedViews","connection","vn","d","_getConst","vr","_cassowary2","Variable","_solver","addConstraint","StayConstraint","Strength","required","_getSubView","_subViews","solver","_type","_parentSubView","_getSpacing","constraint","index","_spacingVars","_spacingExpr","addEditVar","minus","suggestValue","_spacing","_addConstraint","_getAttr","plus","times","strength","defaultPriorityStrength","Equation","Inequality","_compareSpacing","old","newz","_cassowary","SimplexSolver","setSpacing","setSize","addConstraints","intrinsicWidth","intrinsicHeight","resolve","get","bind","Function","HTMLElement","tagName","e","g","__super__","h","debug","trace","verbose","traceAdded","GC","inherit","initialize","_t","create","l","__proto__","created","decorate","upgrade","document","createElement","own","getOwnPropertyDescriptor","set","getOwnPropertyNames","forEach","traceprint","console","log","fnenterprint","fnexitprint","assert","InternalError","Expression","divide","approx","Math","abs","_inc","parseJSON","load","hashCode","keys","HashTable","size","_store","_keyStrMap","_deleted","clear","_compact","_compactThreshold","_perhapsCompact","_size","delete","each","escapingEach","retval","brk","clone","equals","HashSet","storage","add","values","has","toJSON","data","fromJSON","_description","_name","extends","ConstraintNotFound","NonExpression","NotEnoughStays","RequiredFailure","TooDifficult","SymbolicWeight","symbolicWeight","isRequired","strong","medium","weak","AbstractVariable","isDummy","isExternal","isPivotable","isRestricted","_init","_prefix","_map","DummyVariable","ObjectiveVariable","SlackVariable","Point","_x","_y","x","y","terms","setVariable","initializeFromHash","multiplyMe","isConstant","addExpression","addVariable","noteRemovedVariable","noteAddedVariable","anyPivotableVariable","substituteOut","changeSubject","newSubject","coefficientFor","Plus","Minus","Times","Divide","AbstractConstraint","weight","isEditConstraint","isInequality","isStayConstraint","expression","EditConstraint","Constraint","_cloneOrNewCle","q","t","EditInfo","editPlus","editMinus","prevEditConstant","Tableau","columns","rows","_infeasibleRows","_externalRows","_externalParametricVars","insertColVar","getInternalInfo","addRow","removeColumn","removeRow","columnsHasKey","_stayMinusErrorVars","_stayPlusErrorVars","_errorVars","_markerVars","_objective","_editVarMap","_editVarList","_slackCounter","_artificialCounter","_dummyCounter","autoSolve","_fNeedsSolving","_optimizeCount","_stkCedcns","addLowerBound","addUpperBound","addBounds","newExpression","tryAddingDirectly","addWithArtificialVariable","warn","info","optimize","_setExternalVariables","addConstraintNoException","beginEdit","_resetStayConstants","endEdit","pop","removeEditVarsTo","removeAllEditVars","removeConstraint","addPointStays","addStay","pow","removeConstraintInternal","pivot","reset","resolveArray","resolvePair","dualOptimize","deltaEditConstant","solve","setEditedValue","addVar","getDebugInfo","getConstraintMap","chooseSubject","Number","MAX_VALUE","insertErrorVar","time","timeEnd","onsolved","Timer","isRunning","_elapsedMs","_startReading","Date","stop","elapsedTime","__cassowary_parser","escape","P","u","w","A","C","B","D","E","F","G","H","I","operator","J","K","left","right","L","M","N","O","Q","R","max","Statement","SourceCharacter","IdentifierStart","WhiteSpace","LineTerminator","LineTerminatorSequence","EOS","EOF","Comment","MultiLineComment","MultiLineCommentNoLineTerminator","SingleLineComment","_","__","Literal","Integer","Real","SignedInteger","Identifier","IdentifierName","PrimaryExpression","UnaryExpression","UnaryOperator","MultiplicativeExpression","MultiplicativeOperator","AdditiveExpression","AdditiveOperator","InequalityExpression","InequalityOperator","LinearExpression","S","T","U","V","toSource","_source","compiled","webpackPolyfill","deprecate","paths","children","_attr","top","stringify","_getAttrValue","_intrinsicWidth","_intrinsicHeight"],"mappings":"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","file":"autolayout.cassowaryjs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"autolayout\"] = factory();\n\telse\n\t\troot[\"autolayout\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"autolayout\"] = factory();\n\telse\n\t\troot[\"autolayout\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Attribute = __webpack_require__(1);\n\t\n\tvar _Attribute2 = _interopRequireDefault(_Attribute);\n\t\n\tvar _Relation = __webpack_require__(2);\n\t\n\tvar _Relation2 = _interopRequireDefault(_Relation);\n\t\n\tvar _Priority = __webpack_require__(3);\n\t\n\tvar _Priority2 = _interopRequireDefault(_Priority);\n\t\n\tvar _VisualFormat = __webpack_require__(4);\n\t\n\tvar _VisualFormat2 = _interopRequireDefault(_VisualFormat);\n\t\n\tvar _View = __webpack_require__(7);\n\t\n\tvar _View2 = _interopRequireDefault(_View);\n\t\n\tvar _SubView = __webpack_require__(10);\n\t\n\tvar _SubView2 = _interopRequireDefault(_SubView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t//import DOM from './DOM';\n\t\n\t/**\n\t * AutoLayout.\n\t *\n\t * @namespace AutoLayout\n\t * @property {Attribute} Attribute\n\t * @property {Relation} Relation\n\t * @property {Priority} Priority\n\t * @property {VisualFormat} VisualFormat\n\t * @property {View} View\n\t * @property {SubView} SubView\n\t */\n\tvar AutoLayout = {\n\t  Attribute: _Attribute2.default,\n\t  Relation: _Relation2.default,\n\t  Priority: _Priority2.default,\n\t  VisualFormat: _VisualFormat2.default,\n\t  View: _View2.default,\n\t  SubView: _SubView2.default\n\t  //DOM: DOM\n\t};\n\t\n\texports.default = AutoLayout;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * Layout attributes.\n\t * @enum {String}\n\t */\n\tvar Attribute = {\n\t    CONST: 'const',\n\t    NOTANATTRIBUTE: 'const',\n\t    VARIABLE: 'var',\n\t    LEFT: 'left',\n\t    RIGHT: 'right',\n\t    TOP: 'top',\n\t    BOTTOM: 'bottom',\n\t    WIDTH: 'width',\n\t    HEIGHT: 'height',\n\t    CENTERX: 'centerX',\n\t    CENTERY: 'centerY',\n\t    /*LEADING: 'leading',\n\t    TRAILING: 'trailing'*/\n\t    /** Used by the extended VFL syntax. */\n\t    ZINDEX: 'zIndex'\n\t};\n\texports.default = Attribute;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * Relation types.\n\t * @enum {String}\n\t */\n\tvar Relation = {\n\t    /** Less than or equal */\n\t    LEQ: 'leq',\n\t    /** Equal */\n\t    EQU: 'equ',\n\t    /** Greater than or equal */\n\t    GEQ: 'geq'\n\t};\n\texports.default = Relation;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * Layout priorities.\n\t * @enum {String}\n\t */\n\tvar Priority = {\n\t    REQUIRED: 1000,\n\t    DEFAULTHIGH: 750,\n\t    DEFAULTLOW: 250\n\t    //FITTINGSIZELEVEL: 50,\n\t};\n\texports.default = Priority;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _parser = __webpack_require__(5);\n\t\n\tvar _parser2 = _interopRequireDefault(_parser);\n\t\n\tvar _parserExt = __webpack_require__(6);\n\t\n\tvar _parserExt2 = _interopRequireDefault(_parserExt);\n\t\n\tvar _Attribute = __webpack_require__(1);\n\t\n\tvar _Attribute2 = _interopRequireDefault(_Attribute);\n\t\n\tvar _Relation = __webpack_require__(2);\n\t\n\tvar _Relation2 = _interopRequireDefault(_Relation);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Orientation = {\n\t    HORIZONTAL: 1,\n\t    VERTICAL: 2,\n\t    ZINDEX: 4\n\t};\n\t\n\t/**\n\t * Helper function that inserts equal spacers (~).\n\t * @private\n\t */\n\tfunction _processEqualSpacer(context, stackView) {\n\t\n\t    // Determine unique name for the spacer\n\t    context.equalSpacerIndex = context.equalSpacerIndex || 1;\n\t    var name = '_~' + context.lineIndex + ':' + context.equalSpacerIndex + '~';\n\t    if (context.equalSpacerIndex > 1) {\n\t\n\t        // Ensure that all spacers have the same width/height\n\t        context.constraints.push({\n\t            view1: '_~' + context.lineIndex + ':1~',\n\t            attr1: context.horizontal ? _Attribute2.default.WIDTH : _Attribute2.default.HEIGHT,\n\t            relation: context.relation.relation || _Relation2.default.EQU,\n\t            view2: name,\n\t            attr2: context.horizontal ? _Attribute2.default.WIDTH : _Attribute2.default.HEIGHT,\n\t            priority: context.relation.priority\n\t        });\n\t    }\n\t    context.equalSpacerIndex++;\n\t\n\t    // Enforce view/proportional width/height\n\t    if (context.relation.view || context.relation.multiplier && context.relation.multiplier !== 1) {\n\t        context.constraints.push({\n\t            view1: name,\n\t            attr1: context.horizontal ? _Attribute2.default.WIDTH : _Attribute2.default.HEIGHT,\n\t            relation: context.relation.relation || _Relation2.default.EQU,\n\t            view2: context.relation.view,\n\t            attr2: context.horizontal ? _Attribute2.default.WIDTH : _Attribute2.default.HEIGHT,\n\t            priority: context.relation.priority,\n\t            multiplier: context.relation.multiplier\n\t        });\n\t        context.relation.multiplier = undefined;\n\t    } else if (context.relation.constant) {\n\t        context.constraints.push({\n\t            view1: name,\n\t            attr1: context.horizontal ? _Attribute2.default.WIDTH : _Attribute2.default.HEIGHT,\n\t            relation: _Relation2.default.EQU,\n\t            view2: null,\n\t            attr2: _Attribute2.default.CONST,\n\t            priority: context.relation.priority,\n\t            constant: context.relation.constant\n\t        });\n\t        context.relation.constant = undefined;\n\t    }\n\t\n\t    // Add constraint\n\t    for (var i = 0; i < context.prevViews.length; i++) {\n\t        var prevView = context.prevViews[i];\n\t        switch (context.orientation) {\n\t            case Orientation.HORIZONTAL:\n\t                context.prevAttr = prevView !== stackView ? _Attribute2.default.RIGHT : _Attribute2.default.LEFT;\n\t                context.curAttr = _Attribute2.default.LEFT;\n\t                break;\n\t            case Orientation.VERTICAL:\n\t                context.prevAttr = prevView !== stackView ? _Attribute2.default.BOTTOM : _Attribute2.default.TOP;\n\t                context.curAttr = _Attribute2.default.TOP;\n\t                break;\n\t            case Orientation.ZINDEX:\n\t                context.prevAttr = _Attribute2.default.ZINDEX;\n\t                context.curAttr = _Attribute2.default.ZINDEX;\n\t                context.relation.constant = prevView !== stackView ? 'default' : 0;\n\t                break;\n\t        }\n\t        context.constraints.push({\n\t            view1: prevView,\n\t            attr1: context.prevAttr,\n\t            relation: context.relation.relation,\n\t            view2: name,\n\t            attr2: context.curAttr,\n\t            priority: context.relation.priority\n\t        });\n\t    }\n\t    context.prevViews = [name];\n\t}\n\t\n\t/**\n\t * Helper function that inserts proportional spacers (-12%-).\n\t * @private\n\t */\n\tfunction _processProportionalSpacer(context, stackView) {\n\t    context.proportionalSpacerIndex = context.proportionalSpacerIndex || 1;\n\t    var name = '_-' + context.lineIndex + ':' + context.proportionalSpacerIndex + '-';\n\t    context.proportionalSpacerIndex++;\n\t    context.constraints.push({\n\t        view1: name,\n\t        attr1: context.horizontal ? _Attribute2.default.WIDTH : _Attribute2.default.HEIGHT,\n\t        relation: context.relation.relation || _Relation2.default.EQU,\n\t        view2: context.relation.view, // or relative to the stackView... food for thought\n\t        attr2: context.horizontal ? _Attribute2.default.WIDTH : _Attribute2.default.HEIGHT,\n\t        priority: context.relation.priority,\n\t        multiplier: context.relation.multiplier\n\t    });\n\t    context.relation.multiplier = undefined;\n\t\n\t    // Add constraint\n\t    for (var i = 0; i < context.prevViews.length; i++) {\n\t        var prevView = context.prevViews[i];\n\t        switch (context.orientation) {\n\t            case Orientation.HORIZONTAL:\n\t                context.prevAttr = prevView !== stackView ? _Attribute2.default.RIGHT : _Attribute2.default.LEFT;\n\t                context.curAttr = _Attribute2.default.LEFT;\n\t                break;\n\t            case Orientation.VERTICAL:\n\t                context.prevAttr = prevView !== stackView ? _Attribute2.default.BOTTOM : _Attribute2.default.TOP;\n\t                context.curAttr = _Attribute2.default.TOP;\n\t                break;\n\t            case Orientation.ZINDEX:\n\t                context.prevAttr = _Attribute2.default.ZINDEX;\n\t                context.curAttr = _Attribute2.default.ZINDEX;\n\t                context.relation.constant = prevView !== stackView ? 'default' : 0;\n\t                break;\n\t        }\n\t        context.constraints.push({\n\t            view1: prevView,\n\t            attr1: context.prevAttr,\n\t            relation: context.relation.relation,\n\t            view2: name,\n\t            attr2: context.curAttr,\n\t            priority: context.relation.priority\n\t        });\n\t    }\n\t    context.prevViews = [name];\n\t}\n\t\n\t/**\n\t * In case of a stack-view, set constraints for opposite orientations\n\t * @private\n\t */\n\tfunction _processStackView(context, name, subView) {\n\t    var viewName = void 0;\n\t    for (var orientation = 1; orientation <= 4; orientation *= 2) {\n\t        if (subView.orientations & orientation && subView.stack.orientation !== orientation && !(subView.stack.processedOrientations & orientation)) {\n\t            subView.stack.processedOrientations = subView.stack.processedOrientations | orientation;\n\t            viewName = viewName || {\n\t                name: name,\n\t                type: 'stack'\n\t            };\n\t            for (var i = 0, j = subView.stack.subViews.length; i < j; i++) {\n\t                if (orientation === Orientation.ZINDEX) {\n\t                    context.constraints.push({\n\t                        view1: viewName,\n\t                        attr1: _Attribute2.default.ZINDEX,\n\t                        relation: _Relation2.default.EQU,\n\t                        view2: subView.stack.subViews[i],\n\t                        attr2: _Attribute2.default.ZINDEX\n\t                    });\n\t                } else {\n\t                    context.constraints.push({\n\t                        view1: viewName,\n\t                        attr1: orientation === Orientation.VERTICAL ? _Attribute2.default.HEIGHT : _Attribute2.default.WIDTH,\n\t                        relation: _Relation2.default.EQU,\n\t                        view2: subView.stack.subViews[i],\n\t                        attr2: orientation === Orientation.VERTICAL ? _Attribute2.default.HEIGHT : _Attribute2.default.WIDTH\n\t                    });\n\t                    context.constraints.push({\n\t                        view1: viewName,\n\t                        attr1: orientation === Orientation.VERTICAL ? _Attribute2.default.TOP : _Attribute2.default.LEFT,\n\t                        relation: _Relation2.default.EQU,\n\t                        view2: subView.stack.subViews[i],\n\t                        attr2: orientation === Orientation.VERTICAL ? _Attribute2.default.TOP : _Attribute2.default.LEFT\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * Recursive helper function converts a view-name and a range to a series\n\t * of view-names (e.g. [child1, child2, child3, ...]).\n\t * @private\n\t */\n\tfunction _getRange(name, range) {\n\t    if (range === true) {\n\t        range = name.match(/\\.\\.\\d+$/);\n\t        if (range) {\n\t            name = name.substring(0, name.length - range[0].length);\n\t            range = parseInt(range[0].substring(2));\n\t        }\n\t    }\n\t    if (!range) {\n\t        return [name];\n\t    }\n\t    var start = name.match(/\\d+$/);\n\t    var res = [];\n\t    var i;\n\t    if (start) {\n\t        name = name.substring(0, name.length - start[0].length);\n\t        for (i = parseInt(start); i <= range; i++) {\n\t            res.push(name + i);\n\t        }\n\t    } else {\n\t        res.push(name);\n\t        for (i = 2; i <= range; i++) {\n\t            res.push(name + i);\n\t        }\n\t    }\n\t    return res;\n\t}\n\t\n\t/**\n\t * Recursive helper function that processes the cascaded data.\n\t * @private\n\t */\n\tfunction _processCascade(context, cascade, parentItem) {\n\t    var stackView = parentItem ? parentItem.view : null;\n\t    var subViews = [];\n\t    var curViews = [];\n\t    var subView = void 0;\n\t    if (stackView) {\n\t        cascade.push({ view: stackView });\n\t        curViews.push(stackView);\n\t    }\n\t    for (var i = 0; i < cascade.length; i++) {\n\t        var item = cascade[i];\n\t        if (!Array.isArray(item) && item.hasOwnProperty('view') || Array.isArray(item) && item[0].view && !item[0].relation) {\n\t            var items = Array.isArray(item) ? item : [item];\n\t            for (var z = 0; z < items.length; z++) {\n\t                item = items[z];\n\t                var viewRange = item === ',' ? [] : item.view ? _getRange(item.view, item.range) : [null];\n\t                for (var r = 0; r < viewRange.length; r++) {\n\t                    var curView = viewRange[r];\n\t                    curViews.push(curView);\n\t\n\t                    //\n\t                    // Add this view to the collection of subViews\n\t                    //\n\t                    if (curView !== stackView) {\n\t                        subViews.push(curView);\n\t                        subView = context.subViews[curView];\n\t                        if (!subView) {\n\t                            subView = { orientations: 0 };\n\t                            context.subViews[curView] = subView;\n\t                        }\n\t                        subView.orientations = subView.orientations | context.orientation;\n\t                        if (subView.stack) {\n\t                            _processStackView(context, curView, subView);\n\t                        }\n\t                    }\n\t\n\t                    //\n\t                    // Process the relationship between this and the previous views\n\t                    //\n\t                    if (context.prevViews !== undefined && curView !== undefined && context.relation) {\n\t                        if (context.relation.relation !== 'none') {\n\t                            for (var p = 0; p < context.prevViews.length; p++) {\n\t                                var prevView = context.prevViews[p];\n\t                                switch (context.orientation) {\n\t                                    case Orientation.HORIZONTAL:\n\t                                        context.prevAttr = prevView !== stackView ? _Attribute2.default.RIGHT : _Attribute2.default.LEFT;\n\t                                        context.curAttr = curView !== stackView ? _Attribute2.default.LEFT : _Attribute2.default.RIGHT;\n\t                                        break;\n\t                                    case Orientation.VERTICAL:\n\t                                        context.prevAttr = prevView !== stackView ? _Attribute2.default.BOTTOM : _Attribute2.default.TOP;\n\t                                        context.curAttr = curView !== stackView ? _Attribute2.default.TOP : _Attribute2.default.BOTTOM;\n\t                                        break;\n\t                                    case Orientation.ZINDEX:\n\t                                        context.prevAttr = _Attribute2.default.ZINDEX;\n\t                                        context.curAttr = _Attribute2.default.ZINDEX;\n\t                                        context.relation.constant = !prevView ? 0 : context.relation.constant || 'default';\n\t                                        break;\n\t                                }\n\t                                context.constraints.push({\n\t                                    view1: prevView,\n\t                                    attr1: context.prevAttr,\n\t                                    relation: context.relation.relation,\n\t                                    view2: curView,\n\t                                    attr2: context.curAttr,\n\t                                    multiplier: context.relation.multiplier,\n\t                                    constant: context.relation.constant === 'default' || !context.relation.constant ? context.relation.constant : -context.relation.constant,\n\t                                    priority: context.relation.priority\n\t                                });\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    //\n\t                    // Process view size constraints\n\t                    //\n\t                    var constraints = item.constraints;\n\t                    if (constraints) {\n\t                        for (var n = 0; n < constraints.length; n++) {\n\t                            context.prevAttr = context.horizontal ? _Attribute2.default.WIDTH : _Attribute2.default.HEIGHT;\n\t                            context.curAttr = constraints[n].view || constraints[n].multiplier ? constraints[n].attribute || context.prevAttr : constraints[n].variable ? _Attribute2.default.VARIABLE : _Attribute2.default.CONST;\n\t                            context.constraints.push({\n\t                                view1: curView,\n\t                                attr1: context.prevAttr,\n\t                                relation: constraints[n].relation,\n\t                                view2: constraints[n].view,\n\t                                attr2: context.curAttr,\n\t                                multiplier: constraints[n].multiplier,\n\t                                constant: constraints[n].constant,\n\t                                priority: constraints[n].priority\n\t                            });\n\t                        }\n\t                    }\n\t\n\t                    //\n\t                    // Process cascaded data (child stack-views)\n\t                    //\n\t                    if (item.cascade) {\n\t                        _processCascade(context, item.cascade, item);\n\t                    }\n\t                }\n\t            }\n\t        } else if (item !== ',') {\n\t            context.prevViews = curViews;\n\t            curViews = [];\n\t            context.relation = item[0];\n\t            if (context.prevViews !== undefined) {\n\t                if (context.relation.equalSpacing) {\n\t                    _processEqualSpacer(context, stackView);\n\t                }\n\t                if (context.relation.multiplier) {\n\t                    _processProportionalSpacer(context, stackView);\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    if (stackView) {\n\t        subView = context.subViews[stackView];\n\t        if (!subView) {\n\t            subView = { orientations: context.orientation };\n\t            context.subViews[stackView] = subView;\n\t        } else if (subView.stack) {\n\t            var err = new Error('A stack named \"' + stackView + '\" has already been created');\n\t            err.column = parentItem.$parserOffset + 1;\n\t            throw err;\n\t        }\n\t        subView.stack = {\n\t            orientation: context.orientation,\n\t            processedOrientations: context.orientation,\n\t            subViews: subViews\n\t        };\n\t        _processStackView(context, stackView, subView);\n\t    }\n\t}\n\t\n\tvar metaInfoCategories = ['viewport', 'spacing', 'colors', 'shapes', 'widths', 'heights'];\n\t\n\t/**\n\t * VisualFormat\n\t *\n\t * @namespace VisualFormat\n\t */\n\t\n\tvar VisualFormat = function () {\n\t    function VisualFormat() {\n\t        _classCallCheck(this, VisualFormat);\n\t    }\n\t\n\t    _createClass(VisualFormat, null, [{\n\t        key: 'parseLine',\n\t\n\t\n\t        /**\n\t         * Parses a single line of vfl into an array of constraint definitions.\n\t         *\n\t         * When the visual-format could not be succesfully parsed an exception is thrown containing\n\t         * additional info about the parse error and column position.\n\t         *\n\t         * @param {String} visualFormat Visual format string (cannot contain line-endings!).\n\t         * @param {Object} [options] Configuration options.\n\t         * @param {Boolean} [options.extended] When set to true uses the extended syntax (default: false).\n\t         * @param {String} [options.outFormat] Output format (`constraints` or `raw`) (default: `constraints`).\n\t         * @param {Number} [options.lineIndex] Line-index used when auto generating equal-spacing constraints.\n\t         * @return {Array} Array of constraint definitions.\n\t         */\n\t        value: function parseLine(visualFormat, options) {\n\t            if (visualFormat.length === 0 || options && options.extended && visualFormat.indexOf('//') === 0) {\n\t                return [];\n\t            }\n\t            var res = options && options.extended ? _parserExt2.default.parse(visualFormat) : _parser2.default.parse(visualFormat);\n\t            if (options && options.outFormat === 'raw') {\n\t                return [res];\n\t            }\n\t            var context = {\n\t                constraints: [],\n\t                lineIndex: (options ? options.lineIndex : undefined) || 1,\n\t                subViews: (options ? options.subViews : undefined) || {}\n\t            };\n\t            if (res.type === 'attribute') {\n\t                for (var n = 0; n < res.predicates.length; n++) {\n\t                    context.constraints.push({\n\t                        view1: res.view,\n\t                        attr1: res.attr,\n\t                        relation: res.predicates[n].relation,\n\t                        view2: res.predicates[n].view,\n\t                        attr2: res.predicates[n].attribute,\n\t                        multiplier: res.predicates[n].multiplier,\n\t                        constant: res.predicates[n].constant,\n\t                        priority: res.predicates[n].priority\n\t                    });\n\t                }\n\t            } else {\n\t                switch (res.orientation) {\n\t                    case 'horizontal':\n\t                        context.orientation = Orientation.HORIZONTAL;\n\t                        context.horizontal = true;\n\t                        _processCascade(context, res.cascade, null);\n\t                        break;\n\t                    case 'vertical':\n\t                        context.orientation = Orientation.VERTICAL;\n\t                        _processCascade(context, res.cascade, null);\n\t                        break;\n\t                    case 'horzvert':\n\t                        context.orientation = Orientation.HORIZONTAL;\n\t                        context.horizontal = true;\n\t                        _processCascade(context, res.cascade, null);\n\t                        context = {\n\t                            constraints: context.constraints,\n\t                            lineIndex: context.lineIndex,\n\t                            subViews: context.subViews,\n\t                            orientation: Orientation.VERTICAL\n\t                        };\n\t                        _processCascade(context, res.cascade, null);\n\t                        break;\n\t                    case 'zIndex':\n\t                        context.orientation = Orientation.ZINDEX;\n\t                        _processCascade(context, res.cascade, null);\n\t                        break;\n\t                }\n\t            }\n\t            return context.constraints;\n\t        }\n\t\n\t        /**\n\t         * Parses one or more visual format strings into an array of constraint definitions.\n\t         *\n\t         * When the visual-format could not be succesfully parsed an exception is thrown containing\n\t         * additional info about the parse error and column position.\n\t         *\n\t         * @param {String|Array} visualFormat One or more visual format strings.\n\t         * @param {Object} [options] Configuration options.\n\t         * @param {Boolean} [options.extended] When set to true uses the extended syntax (default: false).\n\t         * @param {Boolean} [options.strict] When set to false trims any leading/trailing spaces and ignores empty lines (default: true).\n\t         * @param {String} [options.lineSeperator] String that defines the end of a line (default `\\n`).\n\t         * @param {String} [options.outFormat] Output format (`constraints` or `raw`) (default: `constraints`).\n\t         * @return {Array} Array of constraint definitions.\n\t         */\n\t\n\t    }, {\n\t        key: 'parse',\n\t        value: function parse(visualFormat, options) {\n\t            var lineSeperator = options && options.lineSeperator ? options.lineSeperator : '\\n';\n\t            if (!Array.isArray(visualFormat) && visualFormat.indexOf(lineSeperator) < 0) {\n\t                try {\n\t                    return this.parseLine(visualFormat, options);\n\t                } catch (err) {\n\t                    err.source = visualFormat;\n\t                    throw err;\n\t                }\n\t            }\n\t\n\t            // Decompose visual-format into an array of strings, and within those strings\n\t            // search for line-endings, and treat each line as a seperate visual-format.\n\t            visualFormat = Array.isArray(visualFormat) ? visualFormat : [visualFormat];\n\t            var lines = void 0;\n\t            var constraints = [];\n\t            var lineIndex = 0;\n\t            var line = void 0;\n\t            var parseOptions = {\n\t                lineIndex: lineIndex,\n\t                extended: options && options.extended,\n\t                strict: options && options.strict !== undefined ? options.strict : true,\n\t                outFormat: options ? options.outFormat : undefined,\n\t                subViews: {}\n\t            };\n\t            try {\n\t                for (var i = 0; i < visualFormat.length; i++) {\n\t                    lines = visualFormat[i].split(lineSeperator);\n\t                    for (var j = 0; j < lines.length; j++) {\n\t                        line = lines[j];\n\t                        lineIndex++;\n\t                        parseOptions.lineIndex = lineIndex;\n\t                        if (!parseOptions.strict) {\n\t                            line = line.trim();\n\t                        }\n\t                        if (parseOptions.strict || line.length) {\n\t                            constraints = constraints.concat(this.parseLine(line, parseOptions));\n\t                        }\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                err.source = line;\n\t                err.line = lineIndex;\n\t                throw err;\n\t            }\n\t            return constraints;\n\t        }\n\t\n\t        /**\n\t         * Parses meta information from the comments in the VFL.\n\t         *\n\t         * Additional meta information can be specified in the comments\n\t         * for previewing and rendering purposes. For instance, the view-port\n\t         * aspect-ratio, sub-view widths and colors, can be specified. The\n\t         * following example renders three colored circles in the visual-format editor:\n\t         *\n\t         * ```vfl\n\t         * //viewport aspect-ratio:3/1 max-height:300\n\t         * //colors red:#FF0000 green:#00FF00 blue:#0000FF\n\t         * //shapes red:circle green:circle blue:circle\n\t         * H:|-[row:[red(green,blue)]-[green]-[blue]]-|\n\t         * V:|[row]|\n\t         * ```\n\t         *\n\t         * Supported categories and properties:\n\t         *\n\t         * |Category|Property|Example|\n\t         * |--------|--------|-------|\n\t         * |`viewport`|`aspect-ratio:{width}/{height}`|`//viewport aspect-ratio:16/9`|\n\t         * ||`width:[{number}/intrinsic]`|`//viewport width:10`|\n\t         * ||`height:[{number}/intrinsic]`|`//viewport height:intrinsic`|\n\t         * ||`min-width:{number}`|\n\t         * ||`max-width:{number}`|\n\t         * ||`min-height:{number}`|\n\t         * ||`max-height:{number}`|\n\t         * |`spacing`|`[{number}/array]`|`//spacing:8` or `//spacing:[10, 20, 5]`|\n\t         * |`widths`|`{view-name}:[{number}/intrinsic]`|`//widths subview1:100`|\n\t         * |`heights`|`{view-name}:[{number}/intrinsic]`|`//heights subview1:intrinsic`|\n\t         * |`colors`|`{view-name}:{color}`|`//colors redview:#FF0000 blueview:#00FF00`|\n\t         * |`shapes`|`{view-name}:[circle/square]`|`//shapes avatar:circle`|\n\t         *\n\t         * @param {String|Array} visualFormat One or more visual format strings.\n\t         * @param {Object} [options] Configuration options.\n\t         * @param {String} [options.lineSeperator] String that defines the end of a line (default `\\n`).\n\t         * @param {String} [options.prefix] When specified, also processes the categories using that prefix (e.g. \"-dev-viewport max-height:10\").\n\t         * @return {Object} meta-info\n\t         */\n\t\n\t    }, {\n\t        key: 'parseMetaInfo',\n\t        value: function parseMetaInfo(visualFormat, options) {\n\t            var lineSeperator = options && options.lineSeperator ? options.lineSeperator : '\\n';\n\t            var prefix = options ? options.prefix : undefined;\n\t            visualFormat = Array.isArray(visualFormat) ? visualFormat : [visualFormat];\n\t            var metaInfo = {};\n\t            var key;\n\t            for (var k = 0; k < visualFormat.length; k++) {\n\t                var lines = visualFormat[k].split(lineSeperator);\n\t                for (var i = 0; i < lines.length; i++) {\n\t                    var line = lines[i];\n\t                    for (var c = 0; c < metaInfoCategories.length; c++) {\n\t                        for (var s = 0; s < (prefix ? 2 : 1); s++) {\n\t                            var category = metaInfoCategories[c];\n\t                            var prefixedCategory = (s === 0 ? '' : prefix) + category;\n\t                            if (line.indexOf('//' + prefixedCategory + ' ') === 0) {\n\t                                var items = line.substring(3 + prefixedCategory.length).split(' ');\n\t                                for (var j = 0; j < items.length; j++) {\n\t                                    metaInfo[category] = metaInfo[category] || {};\n\t                                    var item = items[j].split(':');\n\t                                    var names = _getRange(item[0], true);\n\t                                    for (var r = 0; r < names.length; r++) {\n\t                                        metaInfo[category][names[r]] = item.length > 1 ? item[1] : '';\n\t                                    }\n\t                                }\n\t                            } else if (line.indexOf('//' + prefixedCategory + ':') === 0) {\n\t                                metaInfo[category] = line.substring(3 + prefixedCategory.length);\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (metaInfo.viewport) {\n\t                var viewport = metaInfo.viewport;\n\t                var aspectRatio = viewport['aspect-ratio'];\n\t                if (aspectRatio) {\n\t                    aspectRatio = aspectRatio.split('/');\n\t                    viewport['aspect-ratio'] = parseInt(aspectRatio[0]) / parseInt(aspectRatio[1]);\n\t                }\n\t                if (viewport.height !== undefined) {\n\t                    viewport.height = viewport.height === 'intrinsic' ? true : parseInt(viewport.height);\n\t                }\n\t                if (viewport.width !== undefined) {\n\t                    viewport.width = viewport.width === 'intrinsic' ? true : parseInt(viewport.width);\n\t                }\n\t                if (viewport['max-height'] !== undefined) {\n\t                    viewport['max-height'] = parseInt(viewport['max-height']);\n\t                }\n\t                if (viewport['max-width'] !== undefined) {\n\t                    viewport['max-width'] = parseInt(viewport['max-width']);\n\t                }\n\t                if (viewport['min-height'] !== undefined) {\n\t                    viewport['min-height'] = parseInt(viewport['min-height']);\n\t                }\n\t                if (viewport['min-width'] !== undefined) {\n\t                    viewport['min-width'] = parseInt(viewport['min-width']);\n\t                }\n\t            }\n\t            if (metaInfo.widths) {\n\t                for (key in metaInfo.widths) {\n\t                    var width = metaInfo.widths[key] === 'intrinsic' ? true : parseInt(metaInfo.widths[key]);\n\t                    metaInfo.widths[key] = width;\n\t                    if (width === undefined || isNaN(width)) {\n\t                        delete metaInfo.widths[key];\n\t                    }\n\t                }\n\t            }\n\t            if (metaInfo.heights) {\n\t                for (key in metaInfo.heights) {\n\t                    var height = metaInfo.heights[key] === 'intrinsic' ? true : parseInt(metaInfo.heights[key]);\n\t                    metaInfo.heights[key] = height;\n\t                    if (height === undefined || isNaN(height)) {\n\t                        delete metaInfo.heights[key];\n\t                    }\n\t                }\n\t            }\n\t            if (metaInfo.spacing) {\n\t                var value = JSON.parse(metaInfo.spacing);\n\t                metaInfo.spacing = value;\n\t                if (Array.isArray(value)) {\n\t                    for (var sIdx = 0, len = value.length; sIdx < len; sIdx++) {\n\t                        if (isNaN(value[sIdx])) {\n\t                            delete metaInfo.spacing;\n\t                            break;\n\t                        }\n\t                    }\n\t                } else if (value === undefined || isNaN(value)) {\n\t                    delete metaInfo.spacing;\n\t                }\n\t            }\n\t            return metaInfo;\n\t        }\n\t    }]);\n\t\n\t    return VisualFormat;\n\t}();\n\t\n\texports.default = VisualFormat;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function () {\n\t  /*\n\t   * Generated by PEG.js 0.8.0.\n\t   *\n\t   * http://pegjs.majda.cz/\n\t   */\n\t\n\t  function peg$subclass(child, parent) {\n\t    function ctor() {\n\t      this.constructor = child;\n\t    }\n\t    ctor.prototype = parent.prototype;\n\t    child.prototype = new ctor();\n\t  }\n\t\n\t  function SyntaxError(message, expected, found, offset, line, column) {\n\t    this.message = message;\n\t    this.expected = expected;\n\t    this.found = found;\n\t    this.offset = offset;\n\t    this.line = line;\n\t    this.column = column;\n\t\n\t    this.name = \"SyntaxError\";\n\t  }\n\t\n\t  peg$subclass(SyntaxError, Error);\n\t\n\t  function parse(input) {\n\t    var options = arguments.length > 1 ? arguments[1] : {},\n\t        peg$FAILED = {},\n\t        peg$startRuleFunctions = { visualFormatString: peg$parsevisualFormatString },\n\t        peg$startRuleFunction = peg$parsevisualFormatString,\n\t        peg$c0 = peg$FAILED,\n\t        peg$c1 = null,\n\t        peg$c2 = \":\",\n\t        peg$c3 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n\t        peg$c4 = [],\n\t        peg$c5 = function peg$c5(o, superto, view, views, tosuper) {\n\t      return {\n\t        orientation: o ? o[0] : 'horizontal',\n\t        cascade: (superto || []).concat([view], [].concat.apply([], views), tosuper || [])\n\t      };\n\t    },\n\t        peg$c6 = \"H\",\n\t        peg$c7 = { type: \"literal\", value: \"H\", description: \"\\\"H\\\"\" },\n\t        peg$c8 = \"V\",\n\t        peg$c9 = { type: \"literal\", value: \"V\", description: \"\\\"V\\\"\" },\n\t        peg$c10 = function peg$c10(orient) {\n\t      return orient == 'H' ? 'horizontal' : 'vertical';\n\t    },\n\t        peg$c11 = \"|\",\n\t        peg$c12 = { type: \"literal\", value: \"|\", description: \"\\\"|\\\"\" },\n\t        peg$c13 = function peg$c13() {\n\t      return { view: null };\n\t    },\n\t        peg$c14 = \"[\",\n\t        peg$c15 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n\t        peg$c16 = \"]\",\n\t        peg$c17 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n\t        peg$c18 = function peg$c18(view, predicates) {\n\t      return extend(view, predicates ? { constraints: predicates } : {});\n\t    },\n\t        peg$c19 = \"-\",\n\t        peg$c20 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n\t        peg$c21 = function peg$c21(predicateList) {\n\t      return predicateList;\n\t    },\n\t        peg$c22 = function peg$c22() {\n\t      return [{ relation: 'equ', constant: 'default', $parserOffset: offset() }];\n\t    },\n\t        peg$c23 = \"\",\n\t        peg$c24 = function peg$c24() {\n\t      return [{ relation: 'equ', constant: 0, $parserOffset: offset() }];\n\t    },\n\t        peg$c25 = function peg$c25(n) {\n\t      return [{ relation: 'equ', constant: n, $parserOffset: offset() }];\n\t    },\n\t        peg$c26 = \"(\",\n\t        peg$c27 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n\t        peg$c28 = \",\",\n\t        peg$c29 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n\t        peg$c30 = \")\",\n\t        peg$c31 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n\t        peg$c32 = function peg$c32(p, ps) {\n\t      return [p].concat(ps.map(function (p) {\n\t        return p[1];\n\t      }));\n\t    },\n\t        peg$c33 = \"@\",\n\t        peg$c34 = { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n\t        peg$c35 = function peg$c35(r, o, p) {\n\t      return extend({ relation: 'equ' }, r || {}, o, p ? p[1] : {});\n\t    },\n\t        peg$c36 = \"==\",\n\t        peg$c37 = { type: \"literal\", value: \"==\", description: \"\\\"==\\\"\" },\n\t        peg$c38 = function peg$c38() {\n\t      return { relation: 'equ', $parserOffset: offset() };\n\t    },\n\t        peg$c39 = \"<=\",\n\t        peg$c40 = { type: \"literal\", value: \"<=\", description: \"\\\"<=\\\"\" },\n\t        peg$c41 = function peg$c41() {\n\t      return { relation: 'leq', $parserOffset: offset() };\n\t    },\n\t        peg$c42 = \">=\",\n\t        peg$c43 = { type: \"literal\", value: \">=\", description: \"\\\">=\\\"\" },\n\t        peg$c44 = function peg$c44() {\n\t      return { relation: 'geq', $parserOffset: offset() };\n\t    },\n\t        peg$c45 = /^[0-9]/,\n\t        peg$c46 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n\t        peg$c47 = function peg$c47(digits) {\n\t      return { priority: parseInt(digits.join(\"\"), 10) };\n\t    },\n\t        peg$c48 = function peg$c48(n) {\n\t      return { constant: n };\n\t    },\n\t        peg$c49 = /^[a-zA-Z_]/,\n\t        peg$c50 = { type: \"class\", value: \"[a-zA-Z_]\", description: \"[a-zA-Z_]\" },\n\t        peg$c51 = /^[a-zA-Z0-9_]/,\n\t        peg$c52 = { type: \"class\", value: \"[a-zA-Z0-9_]\", description: \"[a-zA-Z0-9_]\" },\n\t        peg$c53 = function peg$c53(f, v) {\n\t      return { view: f + v };\n\t    },\n\t        peg$c54 = \".\",\n\t        peg$c55 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n\t        peg$c56 = function peg$c56(digits, decimals) {\n\t      return parseFloat(digits.concat(\".\").concat(decimals).join(\"\"), 10);\n\t    },\n\t        peg$c57 = function peg$c57(digits) {\n\t      return parseInt(digits.join(\"\"), 10);\n\t    },\n\t        peg$currPos = 0,\n\t        peg$reportedPos = 0,\n\t        peg$cachedPos = 0,\n\t        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n\t        peg$maxFailPos = 0,\n\t        peg$maxFailExpected = [],\n\t        peg$silentFails = 0,\n\t        peg$result;\n\t\n\t    if (\"startRule\" in options) {\n\t      if (!(options.startRule in peg$startRuleFunctions)) {\n\t        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n\t      }\n\t\n\t      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n\t    }\n\t\n\t    function text() {\n\t      return input.substring(peg$reportedPos, peg$currPos);\n\t    }\n\t\n\t    function offset() {\n\t      return peg$reportedPos;\n\t    }\n\t\n\t    function line() {\n\t      return peg$computePosDetails(peg$reportedPos).line;\n\t    }\n\t\n\t    function column() {\n\t      return peg$computePosDetails(peg$reportedPos).column;\n\t    }\n\t\n\t    function expected(description) {\n\t      throw peg$buildException(null, [{ type: \"other\", description: description }], peg$reportedPos);\n\t    }\n\t\n\t    function error(message) {\n\t      throw peg$buildException(message, null, peg$reportedPos);\n\t    }\n\t\n\t    function peg$computePosDetails(pos) {\n\t      function advance(details, startPos, endPos) {\n\t        var p, ch;\n\t\n\t        for (p = startPos; p < endPos; p++) {\n\t          ch = input.charAt(p);\n\t          if (ch === \"\\n\") {\n\t            if (!details.seenCR) {\n\t              details.line++;\n\t            }\n\t            details.column = 1;\n\t            details.seenCR = false;\n\t          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n\t            details.line++;\n\t            details.column = 1;\n\t            details.seenCR = true;\n\t          } else {\n\t            details.column++;\n\t            details.seenCR = false;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (peg$cachedPos !== pos) {\n\t        if (peg$cachedPos > pos) {\n\t          peg$cachedPos = 0;\n\t          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n\t        }\n\t        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n\t        peg$cachedPos = pos;\n\t      }\n\t\n\t      return peg$cachedPosDetails;\n\t    }\n\t\n\t    function peg$fail(expected) {\n\t      if (peg$currPos < peg$maxFailPos) {\n\t        return;\n\t      }\n\t\n\t      if (peg$currPos > peg$maxFailPos) {\n\t        peg$maxFailPos = peg$currPos;\n\t        peg$maxFailExpected = [];\n\t      }\n\t\n\t      peg$maxFailExpected.push(expected);\n\t    }\n\t\n\t    function peg$buildException(message, expected, pos) {\n\t      function cleanupExpected(expected) {\n\t        var i = 1;\n\t\n\t        expected.sort(function (a, b) {\n\t          if (a.description < b.description) {\n\t            return -1;\n\t          } else if (a.description > b.description) {\n\t            return 1;\n\t          } else {\n\t            return 0;\n\t          }\n\t        });\n\t\n\t        while (i < expected.length) {\n\t          if (expected[i - 1] === expected[i]) {\n\t            expected.splice(i, 1);\n\t          } else {\n\t            i++;\n\t          }\n\t        }\n\t      }\n\t\n\t      function buildMessage(expected, found) {\n\t        function stringEscape(s) {\n\t          function hex(ch) {\n\t            return ch.charCodeAt(0).toString(16).toUpperCase();\n\t          }\n\t\n\t          return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\x08/g, '\\\\b').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\f/g, '\\\\f').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function (ch) {\n\t            return '\\\\x0' + hex(ch);\n\t          }).replace(/[\\x10-\\x1F\\x80-\\xFF]/g, function (ch) {\n\t            return '\\\\x' + hex(ch);\n\t          }).replace(/[\\u0180-\\u0FFF]/g, function (ch) {\n\t            return \"\\\\u0\" + hex(ch);\n\t          }).replace(/[\\u1080-\\uFFFF]/g, function (ch) {\n\t            return \"\\\\u\" + hex(ch);\n\t          });\n\t        }\n\t\n\t        var expectedDescs = new Array(expected.length),\n\t            expectedDesc,\n\t            foundDesc,\n\t            i;\n\t\n\t        for (i = 0; i < expected.length; i++) {\n\t          expectedDescs[i] = expected[i].description;\n\t        }\n\t\n\t        expectedDesc = expected.length > 1 ? expectedDescs.slice(0, -1).join(\", \") + \" or \" + expectedDescs[expected.length - 1] : expectedDescs[0];\n\t\n\t        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\t\n\t        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n\t      }\n\t\n\t      var posDetails = peg$computePosDetails(pos),\n\t          found = pos < input.length ? input.charAt(pos) : null;\n\t\n\t      if (expected !== null) {\n\t        cleanupExpected(expected);\n\t      }\n\t\n\t      return new SyntaxError(message !== null ? message : buildMessage(expected, found), expected, found, pos, posDetails.line, posDetails.column);\n\t    }\n\t\n\t    function peg$parsevisualFormatString() {\n\t      var s0, s1, s2, s3, s4, s5, s6, s7;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$currPos;\n\t      s2 = peg$parseorientation();\n\t      if (s2 !== peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 58) {\n\t          s3 = peg$c2;\n\t          peg$currPos++;\n\t        } else {\n\t          s3 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c3);\n\t          }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          s2 = [s2, s3];\n\t          s1 = s2;\n\t        } else {\n\t          peg$currPos = s1;\n\t          s1 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s1;\n\t        s1 = peg$c0;\n\t      }\n\t      if (s1 === peg$FAILED) {\n\t        s1 = peg$c1;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$currPos;\n\t        s3 = peg$parsesuperview();\n\t        if (s3 !== peg$FAILED) {\n\t          s4 = peg$parseconnection();\n\t          if (s4 !== peg$FAILED) {\n\t            s3 = [s3, s4];\n\t            s2 = s3;\n\t          } else {\n\t            peg$currPos = s2;\n\t            s2 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s2;\n\t          s2 = peg$c0;\n\t        }\n\t        if (s2 === peg$FAILED) {\n\t          s2 = peg$c1;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parseview();\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = [];\n\t            s5 = peg$currPos;\n\t            s6 = peg$parseconnection();\n\t            if (s6 !== peg$FAILED) {\n\t              s7 = peg$parseview();\n\t              if (s7 !== peg$FAILED) {\n\t                s6 = [s6, s7];\n\t                s5 = s6;\n\t              } else {\n\t                peg$currPos = s5;\n\t                s5 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s5;\n\t              s5 = peg$c0;\n\t            }\n\t            while (s5 !== peg$FAILED) {\n\t              s4.push(s5);\n\t              s5 = peg$currPos;\n\t              s6 = peg$parseconnection();\n\t              if (s6 !== peg$FAILED) {\n\t                s7 = peg$parseview();\n\t                if (s7 !== peg$FAILED) {\n\t                  s6 = [s6, s7];\n\t                  s5 = s6;\n\t                } else {\n\t                  peg$currPos = s5;\n\t                  s5 = peg$c0;\n\t                }\n\t              } else {\n\t                peg$currPos = s5;\n\t                s5 = peg$c0;\n\t              }\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              s5 = peg$currPos;\n\t              s6 = peg$parseconnection();\n\t              if (s6 !== peg$FAILED) {\n\t                s7 = peg$parsesuperview();\n\t                if (s7 !== peg$FAILED) {\n\t                  s6 = [s6, s7];\n\t                  s5 = s6;\n\t                } else {\n\t                  peg$currPos = s5;\n\t                  s5 = peg$c0;\n\t                }\n\t              } else {\n\t                peg$currPos = s5;\n\t                s5 = peg$c0;\n\t              }\n\t              if (s5 === peg$FAILED) {\n\t                s5 = peg$c1;\n\t              }\n\t              if (s5 !== peg$FAILED) {\n\t                peg$reportedPos = s0;\n\t                s1 = peg$c5(s1, s2, s3, s4, s5);\n\t                s0 = s1;\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseorientation() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 72) {\n\t        s1 = peg$c6;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c7);\n\t        }\n\t      }\n\t      if (s1 === peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 86) {\n\t          s1 = peg$c8;\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c9);\n\t          }\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c10(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsesuperview() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 124) {\n\t        s1 = peg$c11;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c12);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c13();\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseview() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 91) {\n\t        s1 = peg$c14;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c15);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseviewName();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parsepredicateListWithParens();\n\t          if (s3 === peg$FAILED) {\n\t            s3 = peg$c1;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 93) {\n\t              s4 = peg$c16;\n\t              peg$currPos++;\n\t            } else {\n\t              s4 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c17);\n\t              }\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c18(s2, s3);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseconnection() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 45) {\n\t        s1 = peg$c19;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c20);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parsepredicateList();\n\t        if (s2 !== peg$FAILED) {\n\t          if (input.charCodeAt(peg$currPos) === 45) {\n\t            s3 = peg$c19;\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c20);\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c21(s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 45) {\n\t          s1 = peg$c19;\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c20);\n\t          }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c22();\n\t        }\n\t        s0 = s1;\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$currPos;\n\t          s1 = peg$c23;\n\t          if (s1 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c24();\n\t          }\n\t          s0 = s1;\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsepredicateList() {\n\t      var s0;\n\t\n\t      s0 = peg$parsesimplePredicate();\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$parsepredicateListWithParens();\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsesimplePredicate() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parsenumber();\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c25(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsepredicateListWithParens() {\n\t      var s0, s1, s2, s3, s4, s5, s6;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 40) {\n\t        s1 = peg$c26;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c27);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parsepredicate();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          s4 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 44) {\n\t            s5 = peg$c28;\n\t            peg$currPos++;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c29);\n\t            }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s6 = peg$parsepredicate();\n\t            if (s6 !== peg$FAILED) {\n\t              s5 = [s5, s6];\n\t              s4 = s5;\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s4;\n\t            s4 = peg$c0;\n\t          }\n\t          while (s4 !== peg$FAILED) {\n\t            s3.push(s4);\n\t            s4 = peg$currPos;\n\t            if (input.charCodeAt(peg$currPos) === 44) {\n\t              s5 = peg$c28;\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c29);\n\t              }\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s6 = peg$parsepredicate();\n\t              if (s6 !== peg$FAILED) {\n\t                s5 = [s5, s6];\n\t                s4 = s5;\n\t              } else {\n\t                peg$currPos = s4;\n\t                s4 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$c0;\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 41) {\n\t              s4 = peg$c30;\n\t              peg$currPos++;\n\t            } else {\n\t              s4 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c31);\n\t              }\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c32(s2, s3);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsepredicate() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parserelation();\n\t      if (s1 === peg$FAILED) {\n\t        s1 = peg$c1;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseobjectOfPredicate();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 64) {\n\t            s4 = peg$c33;\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c34);\n\t            }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            s5 = peg$parsepriority();\n\t            if (s5 !== peg$FAILED) {\n\t              s4 = [s4, s5];\n\t              s3 = s4;\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t          if (s3 === peg$FAILED) {\n\t            s3 = peg$c1;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c35(s1, s2, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parserelation() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 2) === peg$c36) {\n\t        s1 = peg$c36;\n\t        peg$currPos += 2;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c37);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c38();\n\t      }\n\t      s0 = s1;\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.substr(peg$currPos, 2) === peg$c39) {\n\t          s1 = peg$c39;\n\t          peg$currPos += 2;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c40);\n\t          }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c41();\n\t        }\n\t        s0 = s1;\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$currPos;\n\t          if (input.substr(peg$currPos, 2) === peg$c42) {\n\t            s1 = peg$c42;\n\t            peg$currPos += 2;\n\t          } else {\n\t            s1 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c43);\n\t            }\n\t          }\n\t          if (s1 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c44();\n\t          }\n\t          s0 = s1;\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseobjectOfPredicate() {\n\t      var s0;\n\t\n\t      s0 = peg$parseconstant();\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$parseviewName();\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsepriority() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (peg$c45.test(input.charAt(peg$currPos))) {\n\t        s2 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c46);\n\t        }\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          if (peg$c45.test(input.charAt(peg$currPos))) {\n\t            s2 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c46);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$c0;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c47(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseconstant() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parsenumber();\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c48(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseviewName() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$currPos;\n\t      s2 = [];\n\t      if (peg$c49.test(input.charAt(peg$currPos))) {\n\t        s3 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s3 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c50);\n\t        }\n\t      }\n\t      if (s3 !== peg$FAILED) {\n\t        while (s3 !== peg$FAILED) {\n\t          s2.push(s3);\n\t          if (peg$c49.test(input.charAt(peg$currPos))) {\n\t            s3 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c50);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s2 = peg$c0;\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        s2 = input.substring(s1, peg$currPos);\n\t      }\n\t      s1 = s2;\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$currPos;\n\t        s3 = [];\n\t        if (peg$c51.test(input.charAt(peg$currPos))) {\n\t          s4 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s4 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c52);\n\t          }\n\t        }\n\t        while (s4 !== peg$FAILED) {\n\t          s3.push(s4);\n\t          if (peg$c51.test(input.charAt(peg$currPos))) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c52);\n\t            }\n\t          }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          s3 = input.substring(s2, peg$currPos);\n\t        }\n\t        s2 = s3;\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c53(s1, s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsenumber() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (peg$c45.test(input.charAt(peg$currPos))) {\n\t        s2 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c46);\n\t        }\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          if (peg$c45.test(input.charAt(peg$currPos))) {\n\t            s2 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c46);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$c0;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 46) {\n\t          s2 = peg$c54;\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c55);\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          if (peg$c45.test(input.charAt(peg$currPos))) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c46);\n\t            }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            while (s4 !== peg$FAILED) {\n\t              s3.push(s4);\n\t              if (peg$c45.test(input.charAt(peg$currPos))) {\n\t                s4 = input.charAt(peg$currPos);\n\t                peg$currPos++;\n\t              } else {\n\t                s4 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c46);\n\t                }\n\t              }\n\t            }\n\t          } else {\n\t            s3 = peg$c0;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c56(s1, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        s1 = [];\n\t        if (peg$c45.test(input.charAt(peg$currPos))) {\n\t          s2 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c46);\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          while (s2 !== peg$FAILED) {\n\t            s1.push(s2);\n\t            if (peg$c45.test(input.charAt(peg$currPos))) {\n\t              s2 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s2 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c46);\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          s1 = peg$c0;\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c57(s1);\n\t        }\n\t        s0 = s1;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function extend(dst) {\n\t      for (var i = 1; i < arguments.length; i++) {\n\t        for (var k in arguments[i]) {\n\t          dst[k] = arguments[i][k];\n\t        }\n\t      }\n\t      return dst;\n\t    }\n\t\n\t    peg$result = peg$startRuleFunction();\n\t\n\t    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n\t      return peg$result;\n\t    } else {\n\t      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n\t        peg$fail({ type: \"end\", description: \"end of input\" });\n\t      }\n\t\n\t      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n\t    }\n\t  }\n\t\n\t  return {\n\t    SyntaxError: SyntaxError,\n\t    parse: parse\n\t  };\n\t}();\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function () {\n\t  /*\n\t   * Generated by PEG.js 0.8.0.\n\t   *\n\t   * http://pegjs.majda.cz/\n\t   */\n\t\n\t  function peg$subclass(child, parent) {\n\t    function ctor() {\n\t      this.constructor = child;\n\t    }\n\t    ctor.prototype = parent.prototype;\n\t    child.prototype = new ctor();\n\t  }\n\t\n\t  function SyntaxError(message, expected, found, offset, line, column) {\n\t    this.message = message;\n\t    this.expected = expected;\n\t    this.found = found;\n\t    this.offset = offset;\n\t    this.line = line;\n\t    this.column = column;\n\t\n\t    this.name = \"SyntaxError\";\n\t  }\n\t\n\t  peg$subclass(SyntaxError, Error);\n\t\n\t  function parse(input) {\n\t    var options = arguments.length > 1 ? arguments[1] : {},\n\t        peg$FAILED = {},\n\t        peg$startRuleFunctions = { visualFormatStringExt: peg$parsevisualFormatStringExt },\n\t        peg$startRuleFunction = peg$parsevisualFormatStringExt,\n\t        peg$c0 = peg$FAILED,\n\t        peg$c1 = null,\n\t        peg$c2 = function peg$c2(viewAttrLeft, predicates, comments) {\n\t      return {\n\t        type: 'attribute',\n\t        view: viewAttrLeft.view,\n\t        attr: viewAttrLeft.attr,\n\t        predicates: predicates\n\t      };\n\t    },\n\t        peg$c3 = \"A:\",\n\t        peg$c4 = { type: \"literal\", value: \"A:\", description: \"\\\"A:\\\"\" },\n\t        peg$c5 = function peg$c5() {\n\t      return 'attribute';\n\t    },\n\t        peg$c6 = function peg$c6(view, attr) {\n\t      return { view: view.view, attr: attr };\n\t    },\n\t        peg$c7 = \":\",\n\t        peg$c8 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n\t        peg$c9 = [],\n\t        peg$c10 = function peg$c10(o, superto, view, views, tosuper, comments) {\n\t      return {\n\t        type: 'vfl',\n\t        orientation: o ? o[0] : 'horizontal',\n\t        cascade: (superto || []).concat(view, [].concat.apply([], views), tosuper || [])\n\t      };\n\t    },\n\t        peg$c11 = \"HV\",\n\t        peg$c12 = { type: \"literal\", value: \"HV\", description: \"\\\"HV\\\"\" },\n\t        peg$c13 = function peg$c13() {\n\t      return 'horzvert';\n\t    },\n\t        peg$c14 = \"H\",\n\t        peg$c15 = { type: \"literal\", value: \"H\", description: \"\\\"H\\\"\" },\n\t        peg$c16 = function peg$c16() {\n\t      return 'horizontal';\n\t    },\n\t        peg$c17 = \"V\",\n\t        peg$c18 = { type: \"literal\", value: \"V\", description: \"\\\"V\\\"\" },\n\t        peg$c19 = function peg$c19() {\n\t      return 'vertical';\n\t    },\n\t        peg$c20 = \"Z\",\n\t        peg$c21 = { type: \"literal\", value: \"Z\", description: \"\\\"Z\\\"\" },\n\t        peg$c22 = function peg$c22() {\n\t      return 'zIndex';\n\t    },\n\t        peg$c23 = \" \",\n\t        peg$c24 = { type: \"literal\", value: \" \", description: \"\\\" \\\"\" },\n\t        peg$c25 = \"//\",\n\t        peg$c26 = { type: \"literal\", value: \"//\", description: \"\\\"//\\\"\" },\n\t        peg$c27 = { type: \"any\", description: \"any character\" },\n\t        peg$c28 = \"|\",\n\t        peg$c29 = { type: \"literal\", value: \"|\", description: \"\\\"|\\\"\" },\n\t        peg$c30 = function peg$c30() {\n\t      return { view: null };\n\t    },\n\t        peg$c31 = \"[\",\n\t        peg$c32 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n\t        peg$c33 = \",\",\n\t        peg$c34 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n\t        peg$c35 = \"]\",\n\t        peg$c36 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n\t        peg$c37 = function peg$c37(view, views) {\n\t      return views.length ? [view].concat([].concat.apply([], views)) : view;\n\t    },\n\t        peg$c38 = function peg$c38(view, predicates, cascadedViews) {\n\t      return extend(extend(view, predicates ? { constraints: predicates } : {}), cascadedViews ? {\n\t        cascade: cascadedViews\n\t      } : {});\n\t    },\n\t        peg$c39 = function peg$c39(views, connection) {\n\t      return [].concat([].concat.apply([], views), [connection]);\n\t    },\n\t        peg$c40 = \"->\",\n\t        peg$c41 = { type: \"literal\", value: \"->\", description: \"\\\"->\\\"\" },\n\t        peg$c42 = function peg$c42() {\n\t      return [{ relation: 'none' }];\n\t    },\n\t        peg$c43 = \"-\",\n\t        peg$c44 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n\t        peg$c45 = function peg$c45(predicateList) {\n\t      return predicateList;\n\t    },\n\t        peg$c46 = function peg$c46() {\n\t      return [{ relation: 'equ', constant: 'default' }];\n\t    },\n\t        peg$c47 = \"~\",\n\t        peg$c48 = { type: \"literal\", value: \"~\", description: \"\\\"~\\\"\" },\n\t        peg$c49 = function peg$c49() {\n\t      return [{ relation: 'equ', equalSpacing: true }];\n\t    },\n\t        peg$c50 = \"\",\n\t        peg$c51 = function peg$c51() {\n\t      return [{ relation: 'equ', constant: 0 }];\n\t    },\n\t        peg$c52 = function peg$c52(p) {\n\t      return [{ relation: 'equ', multiplier: p.multiplier }];\n\t    },\n\t        peg$c53 = function peg$c53(n) {\n\t      return [{ relation: 'equ', constant: n }];\n\t    },\n\t        peg$c54 = \"(\",\n\t        peg$c55 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n\t        peg$c56 = \")\",\n\t        peg$c57 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n\t        peg$c58 = function peg$c58(p, ps) {\n\t      return [p].concat(ps.map(function (p) {\n\t        return p[1];\n\t      }));\n\t    },\n\t        peg$c59 = \"@\",\n\t        peg$c60 = { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n\t        peg$c61 = function peg$c61(r, o, p) {\n\t      return extend({ relation: 'equ' }, r || {}, o, p ? p[1] : {});\n\t    },\n\t        peg$c62 = function peg$c62(r, o, p) {\n\t      return extend({ relation: 'equ', equalSpacing: true }, r || {}, o, p ? p[1] : {});\n\t    },\n\t        peg$c63 = \"==\",\n\t        peg$c64 = { type: \"literal\", value: \"==\", description: \"\\\"==\\\"\" },\n\t        peg$c65 = function peg$c65() {\n\t      return { relation: 'equ' };\n\t    },\n\t        peg$c66 = \"<=\",\n\t        peg$c67 = { type: \"literal\", value: \"<=\", description: \"\\\"<=\\\"\" },\n\t        peg$c68 = function peg$c68() {\n\t      return { relation: 'leq' };\n\t    },\n\t        peg$c69 = \">=\",\n\t        peg$c70 = { type: \"literal\", value: \">=\", description: \"\\\">=\\\"\" },\n\t        peg$c71 = function peg$c71() {\n\t      return { relation: 'geq' };\n\t    },\n\t        peg$c72 = /^[0-9]/,\n\t        peg$c73 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n\t        peg$c74 = function peg$c74(digits) {\n\t      return { priority: parseInt(digits.join(\"\"), 10) };\n\t    },\n\t        peg$c75 = function peg$c75(n) {\n\t      return { constant: n };\n\t    },\n\t        peg$c76 = function peg$c76(n) {\n\t      return { constant: -n };\n\t    },\n\t        peg$c77 = \"+\",\n\t        peg$c78 = { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\n\t        peg$c79 = \"%\",\n\t        peg$c80 = { type: \"literal\", value: \"%\", description: \"\\\"%\\\"\" },\n\t        peg$c81 = function peg$c81(n) {\n\t      return { view: null, multiplier: n / 100 };\n\t    },\n\t        peg$c82 = function peg$c82(n) {\n\t      return { view: null, multiplier: n / -100 };\n\t    },\n\t        peg$c83 = function peg$c83(vn, a, m, c) {\n\t      return { view: vn.view, attribute: a ? a : undefined, multiplier: m ? m : 1, constant: c ? c : undefined };\n\t    },\n\t        peg$c84 = \".left\",\n\t        peg$c85 = { type: \"literal\", value: \".left\", description: \"\\\".left\\\"\" },\n\t        peg$c86 = function peg$c86() {\n\t      return 'left';\n\t    },\n\t        peg$c87 = \".right\",\n\t        peg$c88 = { type: \"literal\", value: \".right\", description: \"\\\".right\\\"\" },\n\t        peg$c89 = function peg$c89() {\n\t      return 'right';\n\t    },\n\t        peg$c90 = \".top\",\n\t        peg$c91 = { type: \"literal\", value: \".top\", description: \"\\\".top\\\"\" },\n\t        peg$c92 = function peg$c92() {\n\t      return 'top';\n\t    },\n\t        peg$c93 = \".bottom\",\n\t        peg$c94 = { type: \"literal\", value: \".bottom\", description: \"\\\".bottom\\\"\" },\n\t        peg$c95 = function peg$c95() {\n\t      return 'bottom';\n\t    },\n\t        peg$c96 = \".width\",\n\t        peg$c97 = { type: \"literal\", value: \".width\", description: \"\\\".width\\\"\" },\n\t        peg$c98 = function peg$c98() {\n\t      return 'width';\n\t    },\n\t        peg$c99 = \".height\",\n\t        peg$c100 = { type: \"literal\", value: \".height\", description: \"\\\".height\\\"\" },\n\t        peg$c101 = function peg$c101() {\n\t      return 'height';\n\t    },\n\t        peg$c102 = \".centerX\",\n\t        peg$c103 = { type: \"literal\", value: \".centerX\", description: \"\\\".centerX\\\"\" },\n\t        peg$c104 = function peg$c104() {\n\t      return 'centerX';\n\t    },\n\t        peg$c105 = \".centerY\",\n\t        peg$c106 = { type: \"literal\", value: \".centerY\", description: \"\\\".centerY\\\"\" },\n\t        peg$c107 = function peg$c107() {\n\t      return 'centerY';\n\t    },\n\t        peg$c108 = \"/\",\n\t        peg$c109 = { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n\t        peg$c110 = function peg$c110(n) {\n\t      return 1 / n;\n\t    },\n\t        peg$c111 = \"/+\",\n\t        peg$c112 = { type: \"literal\", value: \"/+\", description: \"\\\"/+\\\"\" },\n\t        peg$c113 = \"/-\",\n\t        peg$c114 = { type: \"literal\", value: \"/-\", description: \"\\\"/-\\\"\" },\n\t        peg$c115 = function peg$c115(n) {\n\t      return -1 / n;\n\t    },\n\t        peg$c116 = \"*\",\n\t        peg$c117 = { type: \"literal\", value: \"*\", description: \"\\\"*\\\"\" },\n\t        peg$c118 = function peg$c118(n) {\n\t      return n;\n\t    },\n\t        peg$c119 = \"*+\",\n\t        peg$c120 = { type: \"literal\", value: \"*+\", description: \"\\\"*+\\\"\" },\n\t        peg$c121 = \"*-\",\n\t        peg$c122 = { type: \"literal\", value: \"*-\", description: \"\\\"*-\\\"\" },\n\t        peg$c123 = function peg$c123(n) {\n\t      return -n;\n\t    },\n\t        peg$c124 = /^[a-zA-Z_]/,\n\t        peg$c125 = { type: \"class\", value: \"[a-zA-Z_]\", description: \"[a-zA-Z_]\" },\n\t        peg$c126 = /^[a-zA-Z0-9_]/,\n\t        peg$c127 = { type: \"class\", value: \"[a-zA-Z0-9_]\", description: \"[a-zA-Z0-9_]\" },\n\t        peg$c128 = function peg$c128(f, v, r) {\n\t      return { view: f + v, range: r, $parserOffset: offset() };\n\t    },\n\t        peg$c129 = function peg$c129(f, v) {\n\t      return { view: f + v, $parserOffset: offset() };\n\t    },\n\t        peg$c130 = \"..\",\n\t        peg$c131 = { type: \"literal\", value: \"..\", description: \"\\\"..\\\"\" },\n\t        peg$c132 = function peg$c132(d) {\n\t      return parseInt(d);\n\t    },\n\t        peg$c133 = \".\",\n\t        peg$c134 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n\t        peg$c135 = function peg$c135(digits, decimals) {\n\t      return parseFloat(digits.concat(\".\").concat(decimals).join(\"\"), 10);\n\t    },\n\t        peg$c136 = function peg$c136(digits) {\n\t      return parseInt(digits.join(\"\"), 10);\n\t    },\n\t        peg$currPos = 0,\n\t        peg$reportedPos = 0,\n\t        peg$cachedPos = 0,\n\t        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n\t        peg$maxFailPos = 0,\n\t        peg$maxFailExpected = [],\n\t        peg$silentFails = 0,\n\t        peg$result;\n\t\n\t    if (\"startRule\" in options) {\n\t      if (!(options.startRule in peg$startRuleFunctions)) {\n\t        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n\t      }\n\t\n\t      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n\t    }\n\t\n\t    function text() {\n\t      return input.substring(peg$reportedPos, peg$currPos);\n\t    }\n\t\n\t    function offset() {\n\t      return peg$reportedPos;\n\t    }\n\t\n\t    function line() {\n\t      return peg$computePosDetails(peg$reportedPos).line;\n\t    }\n\t\n\t    function column() {\n\t      return peg$computePosDetails(peg$reportedPos).column;\n\t    }\n\t\n\t    function expected(description) {\n\t      throw peg$buildException(null, [{ type: \"other\", description: description }], peg$reportedPos);\n\t    }\n\t\n\t    function error(message) {\n\t      throw peg$buildException(message, null, peg$reportedPos);\n\t    }\n\t\n\t    function peg$computePosDetails(pos) {\n\t      function advance(details, startPos, endPos) {\n\t        var p, ch;\n\t\n\t        for (p = startPos; p < endPos; p++) {\n\t          ch = input.charAt(p);\n\t          if (ch === \"\\n\") {\n\t            if (!details.seenCR) {\n\t              details.line++;\n\t            }\n\t            details.column = 1;\n\t            details.seenCR = false;\n\t          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n\t            details.line++;\n\t            details.column = 1;\n\t            details.seenCR = true;\n\t          } else {\n\t            details.column++;\n\t            details.seenCR = false;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (peg$cachedPos !== pos) {\n\t        if (peg$cachedPos > pos) {\n\t          peg$cachedPos = 0;\n\t          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n\t        }\n\t        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n\t        peg$cachedPos = pos;\n\t      }\n\t\n\t      return peg$cachedPosDetails;\n\t    }\n\t\n\t    function peg$fail(expected) {\n\t      if (peg$currPos < peg$maxFailPos) {\n\t        return;\n\t      }\n\t\n\t      if (peg$currPos > peg$maxFailPos) {\n\t        peg$maxFailPos = peg$currPos;\n\t        peg$maxFailExpected = [];\n\t      }\n\t\n\t      peg$maxFailExpected.push(expected);\n\t    }\n\t\n\t    function peg$buildException(message, expected, pos) {\n\t      function cleanupExpected(expected) {\n\t        var i = 1;\n\t\n\t        expected.sort(function (a, b) {\n\t          if (a.description < b.description) {\n\t            return -1;\n\t          } else if (a.description > b.description) {\n\t            return 1;\n\t          } else {\n\t            return 0;\n\t          }\n\t        });\n\t\n\t        while (i < expected.length) {\n\t          if (expected[i - 1] === expected[i]) {\n\t            expected.splice(i, 1);\n\t          } else {\n\t            i++;\n\t          }\n\t        }\n\t      }\n\t\n\t      function buildMessage(expected, found) {\n\t        function stringEscape(s) {\n\t          function hex(ch) {\n\t            return ch.charCodeAt(0).toString(16).toUpperCase();\n\t          }\n\t\n\t          return s.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\x08/g, '\\\\b').replace(/\\t/g, '\\\\t').replace(/\\n/g, '\\\\n').replace(/\\f/g, '\\\\f').replace(/\\r/g, '\\\\r').replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function (ch) {\n\t            return '\\\\x0' + hex(ch);\n\t          }).replace(/[\\x10-\\x1F\\x80-\\xFF]/g, function (ch) {\n\t            return '\\\\x' + hex(ch);\n\t          }).replace(/[\\u0180-\\u0FFF]/g, function (ch) {\n\t            return \"\\\\u0\" + hex(ch);\n\t          }).replace(/[\\u1080-\\uFFFF]/g, function (ch) {\n\t            return \"\\\\u\" + hex(ch);\n\t          });\n\t        }\n\t\n\t        var expectedDescs = new Array(expected.length),\n\t            expectedDesc,\n\t            foundDesc,\n\t            i;\n\t\n\t        for (i = 0; i < expected.length; i++) {\n\t          expectedDescs[i] = expected[i].description;\n\t        }\n\t\n\t        expectedDesc = expected.length > 1 ? expectedDescs.slice(0, -1).join(\", \") + \" or \" + expectedDescs[expected.length - 1] : expectedDescs[0];\n\t\n\t        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\t\n\t        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n\t      }\n\t\n\t      var posDetails = peg$computePosDetails(pos),\n\t          found = pos < input.length ? input.charAt(pos) : null;\n\t\n\t      if (expected !== null) {\n\t        cleanupExpected(expected);\n\t      }\n\t\n\t      return new SyntaxError(message !== null ? message : buildMessage(expected, found), expected, found, pos, posDetails.line, posDetails.column);\n\t    }\n\t\n\t    function peg$parsevisualFormatStringExt() {\n\t      var s0;\n\t\n\t      s0 = peg$parsevisualFormatString();\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$parsevisualFormatStringAttributeExpression();\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsevisualFormatStringAttributeExpression() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parseattributeMark();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseattributeSignifier();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parsepredicateList();\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parsecomments();\n\t            if (s4 === peg$FAILED) {\n\t              s4 = peg$c1;\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c2(s2, s3, s4);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseattributeMark() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 2) === peg$c3) {\n\t        s1 = peg$c3;\n\t        peg$currPos += 2;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c4);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c5();\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseattributeSignifier() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parseviewName();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseattribute();\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c6(s1, s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsevisualFormatString() {\n\t      var s0, s1, s2, s3, s4, s5, s6, s7;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$currPos;\n\t      s2 = peg$parseorientation();\n\t      if (s2 !== peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 58) {\n\t          s3 = peg$c7;\n\t          peg$currPos++;\n\t        } else {\n\t          s3 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c8);\n\t          }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          s2 = [s2, s3];\n\t          s1 = s2;\n\t        } else {\n\t          peg$currPos = s1;\n\t          s1 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s1;\n\t        s1 = peg$c0;\n\t      }\n\t      if (s1 === peg$FAILED) {\n\t        s1 = peg$c1;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$currPos;\n\t        s3 = peg$parsesuperview();\n\t        if (s3 !== peg$FAILED) {\n\t          s4 = peg$parseconnection();\n\t          if (s4 !== peg$FAILED) {\n\t            s3 = [s3, s4];\n\t            s2 = s3;\n\t          } else {\n\t            peg$currPos = s2;\n\t            s2 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s2;\n\t          s2 = peg$c0;\n\t        }\n\t        if (s2 === peg$FAILED) {\n\t          s2 = peg$c1;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parseviewGroup();\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = [];\n\t            s5 = peg$currPos;\n\t            s6 = peg$parseconnection();\n\t            if (s6 !== peg$FAILED) {\n\t              s7 = peg$parseviewGroup();\n\t              if (s7 !== peg$FAILED) {\n\t                s6 = [s6, s7];\n\t                s5 = s6;\n\t              } else {\n\t                peg$currPos = s5;\n\t                s5 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s5;\n\t              s5 = peg$c0;\n\t            }\n\t            while (s5 !== peg$FAILED) {\n\t              s4.push(s5);\n\t              s5 = peg$currPos;\n\t              s6 = peg$parseconnection();\n\t              if (s6 !== peg$FAILED) {\n\t                s7 = peg$parseviewGroup();\n\t                if (s7 !== peg$FAILED) {\n\t                  s6 = [s6, s7];\n\t                  s5 = s6;\n\t                } else {\n\t                  peg$currPos = s5;\n\t                  s5 = peg$c0;\n\t                }\n\t              } else {\n\t                peg$currPos = s5;\n\t                s5 = peg$c0;\n\t              }\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              s5 = peg$currPos;\n\t              s6 = peg$parseconnection();\n\t              if (s6 !== peg$FAILED) {\n\t                s7 = peg$parsesuperview();\n\t                if (s7 !== peg$FAILED) {\n\t                  s6 = [s6, s7];\n\t                  s5 = s6;\n\t                } else {\n\t                  peg$currPos = s5;\n\t                  s5 = peg$c0;\n\t                }\n\t              } else {\n\t                peg$currPos = s5;\n\t                s5 = peg$c0;\n\t              }\n\t              if (s5 === peg$FAILED) {\n\t                s5 = peg$c1;\n\t              }\n\t              if (s5 !== peg$FAILED) {\n\t                s6 = peg$parsecomments();\n\t                if (s6 === peg$FAILED) {\n\t                  s6 = peg$c1;\n\t                }\n\t                if (s6 !== peg$FAILED) {\n\t                  peg$reportedPos = s0;\n\t                  s1 = peg$c10(s1, s2, s3, s4, s5, s6);\n\t                  s0 = s1;\n\t                } else {\n\t                  peg$currPos = s0;\n\t                  s0 = peg$c0;\n\t                }\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseorientation() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 2) === peg$c11) {\n\t        s1 = peg$c11;\n\t        peg$currPos += 2;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c12);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c13();\n\t      }\n\t      s0 = s1;\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 72) {\n\t          s1 = peg$c14;\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c15);\n\t          }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c16();\n\t        }\n\t        s0 = s1;\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 86) {\n\t            s1 = peg$c17;\n\t            peg$currPos++;\n\t          } else {\n\t            s1 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c18);\n\t            }\n\t          }\n\t          if (s1 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c19();\n\t          }\n\t          s0 = s1;\n\t          if (s0 === peg$FAILED) {\n\t            s0 = peg$currPos;\n\t            if (input.charCodeAt(peg$currPos) === 90) {\n\t              s1 = peg$c20;\n\t              peg$currPos++;\n\t            } else {\n\t              s1 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c21);\n\t              }\n\t            }\n\t            if (s1 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c22();\n\t            }\n\t            s0 = s1;\n\t          }\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsecomments() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (input.charCodeAt(peg$currPos) === 32) {\n\t        s2 = peg$c23;\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c24);\n\t        }\n\t      }\n\t      while (s2 !== peg$FAILED) {\n\t        s1.push(s2);\n\t        if (input.charCodeAt(peg$currPos) === 32) {\n\t          s2 = peg$c23;\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c24);\n\t          }\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        if (input.substr(peg$currPos, 2) === peg$c25) {\n\t          s2 = peg$c25;\n\t          peg$currPos += 2;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c26);\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          if (input.length > peg$currPos) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c27);\n\t            }\n\t          }\n\t          while (s4 !== peg$FAILED) {\n\t            s3.push(s4);\n\t            if (input.length > peg$currPos) {\n\t              s4 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s4 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c27);\n\t              }\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s1 = [s1, s2, s3];\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsesuperview() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 124) {\n\t        s1 = peg$c28;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c29);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c30();\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseviewGroup() {\n\t      var s0, s1, s2, s3, s4, s5, s6;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 91) {\n\t        s1 = peg$c31;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c32);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseview();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          s4 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 44) {\n\t            s5 = peg$c33;\n\t            peg$currPos++;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c34);\n\t            }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s6 = peg$parseview();\n\t            if (s6 !== peg$FAILED) {\n\t              s5 = [s5, s6];\n\t              s4 = s5;\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s4;\n\t            s4 = peg$c0;\n\t          }\n\t          while (s4 !== peg$FAILED) {\n\t            s3.push(s4);\n\t            s4 = peg$currPos;\n\t            if (input.charCodeAt(peg$currPos) === 44) {\n\t              s5 = peg$c33;\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c34);\n\t              }\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s6 = peg$parseview();\n\t              if (s6 !== peg$FAILED) {\n\t                s5 = [s5, s6];\n\t                s4 = s5;\n\t              } else {\n\t                peg$currPos = s4;\n\t                s4 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$c0;\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 93) {\n\t              s4 = peg$c35;\n\t              peg$currPos++;\n\t            } else {\n\t              s4 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c36);\n\t              }\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c37(s2, s3);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseview() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parseviewNameRange();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parsepredicateListWithParens();\n\t        if (s2 === peg$FAILED) {\n\t          s2 = peg$c1;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parsecascadedViews();\n\t          if (s3 === peg$FAILED) {\n\t            s3 = peg$c1;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c38(s1, s2, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsecascadedViews() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 58) {\n\t        s1 = peg$c7;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c8);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        s3 = peg$currPos;\n\t        s4 = peg$parseconnection();\n\t        if (s4 !== peg$FAILED) {\n\t          s5 = peg$parseviewGroup();\n\t          if (s5 !== peg$FAILED) {\n\t            s4 = [s4, s5];\n\t            s3 = s4;\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s3;\n\t          s3 = peg$c0;\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            s3 = peg$currPos;\n\t            s4 = peg$parseconnection();\n\t            if (s4 !== peg$FAILED) {\n\t              s5 = peg$parseviewGroup();\n\t              if (s5 !== peg$FAILED) {\n\t                s4 = [s4, s5];\n\t                s3 = s4;\n\t              } else {\n\t                peg$currPos = s3;\n\t                s3 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          }\n\t        } else {\n\t          s2 = peg$c0;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parseconnection();\n\t          if (s3 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c39(s2, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseconnection() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 2) === peg$c40) {\n\t        s1 = peg$c40;\n\t        peg$currPos += 2;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c41);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c42();\n\t      }\n\t      s0 = s1;\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 45) {\n\t          s1 = peg$c43;\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c44);\n\t          }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          s2 = peg$parsepredicateList();\n\t          if (s2 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 45) {\n\t              s3 = peg$c43;\n\t              peg$currPos++;\n\t            } else {\n\t              s3 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c44);\n\t              }\n\t            }\n\t            if (s3 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c45(s2);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 45) {\n\t            s1 = peg$c43;\n\t            peg$currPos++;\n\t          } else {\n\t            s1 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c44);\n\t            }\n\t          }\n\t          if (s1 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c46();\n\t          }\n\t          s0 = s1;\n\t          if (s0 === peg$FAILED) {\n\t            s0 = peg$currPos;\n\t            if (input.charCodeAt(peg$currPos) === 126) {\n\t              s1 = peg$c47;\n\t              peg$currPos++;\n\t            } else {\n\t              s1 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c48);\n\t              }\n\t            }\n\t            if (s1 !== peg$FAILED) {\n\t              s2 = peg$parseequalSpacingPredicateList();\n\t              if (s2 !== peg$FAILED) {\n\t                if (input.charCodeAt(peg$currPos) === 126) {\n\t                  s3 = peg$c47;\n\t                  peg$currPos++;\n\t                } else {\n\t                  s3 = peg$FAILED;\n\t                  if (peg$silentFails === 0) {\n\t                    peg$fail(peg$c48);\n\t                  }\n\t                }\n\t                if (s3 !== peg$FAILED) {\n\t                  peg$reportedPos = s0;\n\t                  s1 = peg$c45(s2);\n\t                  s0 = s1;\n\t                } else {\n\t                  peg$currPos = s0;\n\t                  s0 = peg$c0;\n\t                }\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t            if (s0 === peg$FAILED) {\n\t              s0 = peg$currPos;\n\t              if (input.charCodeAt(peg$currPos) === 126) {\n\t                s1 = peg$c47;\n\t                peg$currPos++;\n\t              } else {\n\t                s1 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c48);\n\t                }\n\t              }\n\t              if (s1 !== peg$FAILED) {\n\t                peg$reportedPos = s0;\n\t                s1 = peg$c49();\n\t              }\n\t              s0 = s1;\n\t              if (s0 === peg$FAILED) {\n\t                s0 = peg$currPos;\n\t                s1 = peg$c50;\n\t                if (s1 !== peg$FAILED) {\n\t                  peg$reportedPos = s0;\n\t                  s1 = peg$c51();\n\t                }\n\t                s0 = s1;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsepredicateList() {\n\t      var s0;\n\t\n\t      s0 = peg$parsesimplePredicate();\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$parsepredicateListWithParens();\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsesimplePredicate() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parsepercentage();\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c52(s1);\n\t      }\n\t      s0 = s1;\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        s1 = peg$parsenumber();\n\t        if (s1 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c53(s1);\n\t        }\n\t        s0 = s1;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsepredicateListWithParens() {\n\t      var s0, s1, s2, s3, s4, s5, s6;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 40) {\n\t        s1 = peg$c54;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c55);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parsepredicate();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          s4 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 44) {\n\t            s5 = peg$c33;\n\t            peg$currPos++;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c34);\n\t            }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s6 = peg$parsepredicate();\n\t            if (s6 !== peg$FAILED) {\n\t              s5 = [s5, s6];\n\t              s4 = s5;\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s4;\n\t            s4 = peg$c0;\n\t          }\n\t          while (s4 !== peg$FAILED) {\n\t            s3.push(s4);\n\t            s4 = peg$currPos;\n\t            if (input.charCodeAt(peg$currPos) === 44) {\n\t              s5 = peg$c33;\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c34);\n\t              }\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s6 = peg$parsepredicate();\n\t              if (s6 !== peg$FAILED) {\n\t                s5 = [s5, s6];\n\t                s4 = s5;\n\t              } else {\n\t                peg$currPos = s4;\n\t                s4 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$c0;\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 41) {\n\t              s4 = peg$c56;\n\t              peg$currPos++;\n\t            } else {\n\t              s4 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c57);\n\t              }\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c58(s2, s3);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsepredicate() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parserelation();\n\t      if (s1 === peg$FAILED) {\n\t        s1 = peg$c1;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseobjectOfPredicate();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 64) {\n\t            s4 = peg$c59;\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c60);\n\t            }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            s5 = peg$parsepriority();\n\t            if (s5 !== peg$FAILED) {\n\t              s4 = [s4, s5];\n\t              s3 = s4;\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t          if (s3 === peg$FAILED) {\n\t            s3 = peg$c1;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c61(s1, s2, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseequalSpacingPredicateList() {\n\t      var s0, s1, s2, s3, s4, s5, s6;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 40) {\n\t        s1 = peg$c54;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c55);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseequalSpacingPredicate();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          s4 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 44) {\n\t            s5 = peg$c33;\n\t            peg$currPos++;\n\t          } else {\n\t            s5 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c34);\n\t            }\n\t          }\n\t          if (s5 !== peg$FAILED) {\n\t            s6 = peg$parseequalSpacingPredicate();\n\t            if (s6 !== peg$FAILED) {\n\t              s5 = [s5, s6];\n\t              s4 = s5;\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s4;\n\t            s4 = peg$c0;\n\t          }\n\t          while (s4 !== peg$FAILED) {\n\t            s3.push(s4);\n\t            s4 = peg$currPos;\n\t            if (input.charCodeAt(peg$currPos) === 44) {\n\t              s5 = peg$c33;\n\t              peg$currPos++;\n\t            } else {\n\t              s5 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c34);\n\t              }\n\t            }\n\t            if (s5 !== peg$FAILED) {\n\t              s6 = peg$parseequalSpacingPredicate();\n\t              if (s6 !== peg$FAILED) {\n\t                s5 = [s5, s6];\n\t                s4 = s5;\n\t              } else {\n\t                peg$currPos = s4;\n\t                s4 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s4;\n\t              s4 = peg$c0;\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 41) {\n\t              s4 = peg$c56;\n\t              peg$currPos++;\n\t            } else {\n\t              s4 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c57);\n\t              }\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c58(s2, s3);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseequalSpacingPredicate() {\n\t      var s0, s1, s2, s3, s4, s5;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parserelation();\n\t      if (s1 === peg$FAILED) {\n\t        s1 = peg$c1;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseobjectOfPredicate();\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 64) {\n\t            s4 = peg$c59;\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c60);\n\t            }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            s5 = peg$parsepriority();\n\t            if (s5 !== peg$FAILED) {\n\t              s4 = [s4, s5];\n\t              s3 = s4;\n\t            } else {\n\t              peg$currPos = s3;\n\t              s3 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s3;\n\t            s3 = peg$c0;\n\t          }\n\t          if (s3 === peg$FAILED) {\n\t            s3 = peg$c1;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c62(s1, s2, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parserelation() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 2) === peg$c63) {\n\t        s1 = peg$c63;\n\t        peg$currPos += 2;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c64);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c65();\n\t      }\n\t      s0 = s1;\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.substr(peg$currPos, 2) === peg$c66) {\n\t          s1 = peg$c66;\n\t          peg$currPos += 2;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c67);\n\t          }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c68();\n\t        }\n\t        s0 = s1;\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$currPos;\n\t          if (input.substr(peg$currPos, 2) === peg$c69) {\n\t            s1 = peg$c69;\n\t            peg$currPos += 2;\n\t          } else {\n\t            s1 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c70);\n\t            }\n\t          }\n\t          if (s1 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c71();\n\t          }\n\t          s0 = s1;\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseobjectOfPredicate() {\n\t      var s0;\n\t\n\t      s0 = peg$parsepercentage();\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$parseconstant();\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$parseviewPredicate();\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsepriority() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (peg$c72.test(input.charAt(peg$currPos))) {\n\t        s2 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c73);\n\t        }\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          if (peg$c72.test(input.charAt(peg$currPos))) {\n\t            s2 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c73);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$c0;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c74(s1);\n\t      }\n\t      s0 = s1;\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseconstant() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parsenumber();\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c75(s1);\n\t      }\n\t      s0 = s1;\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 45) {\n\t          s1 = peg$c43;\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c44);\n\t          }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          s2 = peg$parsenumber();\n\t          if (s2 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c76(s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 43) {\n\t            s1 = peg$c77;\n\t            peg$currPos++;\n\t          } else {\n\t            s1 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c78);\n\t            }\n\t          }\n\t          if (s1 !== peg$FAILED) {\n\t            s2 = peg$parsenumber();\n\t            if (s2 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c75(s2);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsepercentage() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parsenumber();\n\t      if (s1 !== peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 37) {\n\t          s2 = peg$c79;\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c80);\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c81(s1);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 45) {\n\t          s1 = peg$c43;\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c44);\n\t          }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          s2 = peg$parsenumber();\n\t          if (s2 !== peg$FAILED) {\n\t            if (input.charCodeAt(peg$currPos) === 37) {\n\t              s3 = peg$c79;\n\t              peg$currPos++;\n\t            } else {\n\t              s3 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c80);\n\t              }\n\t            }\n\t            if (s3 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c82(s2);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$currPos;\n\t          if (input.charCodeAt(peg$currPos) === 43) {\n\t            s1 = peg$c77;\n\t            peg$currPos++;\n\t          } else {\n\t            s1 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c78);\n\t            }\n\t          }\n\t          if (s1 !== peg$FAILED) {\n\t            s2 = peg$parsenumber();\n\t            if (s2 !== peg$FAILED) {\n\t              if (input.charCodeAt(peg$currPos) === 37) {\n\t                s3 = peg$c79;\n\t                peg$currPos++;\n\t              } else {\n\t                s3 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c80);\n\t                }\n\t              }\n\t              if (s3 !== peg$FAILED) {\n\t                peg$reportedPos = s0;\n\t                s1 = peg$c81(s2);\n\t                s0 = s1;\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseviewPredicate() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$parseviewName();\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parseattribute();\n\t        if (s2 === peg$FAILED) {\n\t          s2 = peg$c1;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parsemultiplier();\n\t          if (s3 === peg$FAILED) {\n\t            s3 = peg$c1;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s4 = peg$parseconstantExpr();\n\t            if (s4 === peg$FAILED) {\n\t              s4 = peg$c1;\n\t            }\n\t            if (s4 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c83(s1, s2, s3, s4);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseattribute() {\n\t      var s0, s1;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 5) === peg$c84) {\n\t        s1 = peg$c84;\n\t        peg$currPos += 5;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c85);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        peg$reportedPos = s0;\n\t        s1 = peg$c86();\n\t      }\n\t      s0 = s1;\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.substr(peg$currPos, 6) === peg$c87) {\n\t          s1 = peg$c87;\n\t          peg$currPos += 6;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c88);\n\t          }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c89();\n\t        }\n\t        s0 = s1;\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$currPos;\n\t          if (input.substr(peg$currPos, 4) === peg$c90) {\n\t            s1 = peg$c90;\n\t            peg$currPos += 4;\n\t          } else {\n\t            s1 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c91);\n\t            }\n\t          }\n\t          if (s1 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c92();\n\t          }\n\t          s0 = s1;\n\t          if (s0 === peg$FAILED) {\n\t            s0 = peg$currPos;\n\t            if (input.substr(peg$currPos, 7) === peg$c93) {\n\t              s1 = peg$c93;\n\t              peg$currPos += 7;\n\t            } else {\n\t              s1 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c94);\n\t              }\n\t            }\n\t            if (s1 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c95();\n\t            }\n\t            s0 = s1;\n\t            if (s0 === peg$FAILED) {\n\t              s0 = peg$currPos;\n\t              if (input.substr(peg$currPos, 6) === peg$c96) {\n\t                s1 = peg$c96;\n\t                peg$currPos += 6;\n\t              } else {\n\t                s1 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c97);\n\t                }\n\t              }\n\t              if (s1 !== peg$FAILED) {\n\t                peg$reportedPos = s0;\n\t                s1 = peg$c98();\n\t              }\n\t              s0 = s1;\n\t              if (s0 === peg$FAILED) {\n\t                s0 = peg$currPos;\n\t                if (input.substr(peg$currPos, 7) === peg$c99) {\n\t                  s1 = peg$c99;\n\t                  peg$currPos += 7;\n\t                } else {\n\t                  s1 = peg$FAILED;\n\t                  if (peg$silentFails === 0) {\n\t                    peg$fail(peg$c100);\n\t                  }\n\t                }\n\t                if (s1 !== peg$FAILED) {\n\t                  peg$reportedPos = s0;\n\t                  s1 = peg$c101();\n\t                }\n\t                s0 = s1;\n\t                if (s0 === peg$FAILED) {\n\t                  s0 = peg$currPos;\n\t                  if (input.substr(peg$currPos, 8) === peg$c102) {\n\t                    s1 = peg$c102;\n\t                    peg$currPos += 8;\n\t                  } else {\n\t                    s1 = peg$FAILED;\n\t                    if (peg$silentFails === 0) {\n\t                      peg$fail(peg$c103);\n\t                    }\n\t                  }\n\t                  if (s1 !== peg$FAILED) {\n\t                    peg$reportedPos = s0;\n\t                    s1 = peg$c104();\n\t                  }\n\t                  s0 = s1;\n\t                  if (s0 === peg$FAILED) {\n\t                    s0 = peg$currPos;\n\t                    if (input.substr(peg$currPos, 8) === peg$c105) {\n\t                      s1 = peg$c105;\n\t                      peg$currPos += 8;\n\t                    } else {\n\t                      s1 = peg$FAILED;\n\t                      if (peg$silentFails === 0) {\n\t                        peg$fail(peg$c106);\n\t                      }\n\t                    }\n\t                    if (s1 !== peg$FAILED) {\n\t                      peg$reportedPos = s0;\n\t                      s1 = peg$c107();\n\t                    }\n\t                    s0 = s1;\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsemultiplier() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 47) {\n\t        s1 = peg$c108;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c109);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parsenumber();\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c110(s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.substr(peg$currPos, 2) === peg$c111) {\n\t          s1 = peg$c111;\n\t          peg$currPos += 2;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c112);\n\t          }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          s2 = peg$parsenumber();\n\t          if (s2 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c110(s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t        if (s0 === peg$FAILED) {\n\t          s0 = peg$currPos;\n\t          if (input.substr(peg$currPos, 2) === peg$c113) {\n\t            s1 = peg$c113;\n\t            peg$currPos += 2;\n\t          } else {\n\t            s1 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c114);\n\t            }\n\t          }\n\t          if (s1 !== peg$FAILED) {\n\t            s2 = peg$parsenumber();\n\t            if (s2 !== peg$FAILED) {\n\t              peg$reportedPos = s0;\n\t              s1 = peg$c115(s2);\n\t              s0 = s1;\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t          if (s0 === peg$FAILED) {\n\t            s0 = peg$currPos;\n\t            if (input.charCodeAt(peg$currPos) === 42) {\n\t              s1 = peg$c116;\n\t              peg$currPos++;\n\t            } else {\n\t              s1 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c117);\n\t              }\n\t            }\n\t            if (s1 !== peg$FAILED) {\n\t              s2 = peg$parsenumber();\n\t              if (s2 !== peg$FAILED) {\n\t                peg$reportedPos = s0;\n\t                s1 = peg$c118(s2);\n\t                s0 = s1;\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$c0;\n\t              }\n\t            } else {\n\t              peg$currPos = s0;\n\t              s0 = peg$c0;\n\t            }\n\t            if (s0 === peg$FAILED) {\n\t              s0 = peg$currPos;\n\t              if (input.substr(peg$currPos, 2) === peg$c119) {\n\t                s1 = peg$c119;\n\t                peg$currPos += 2;\n\t              } else {\n\t                s1 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c120);\n\t                }\n\t              }\n\t              if (s1 !== peg$FAILED) {\n\t                s2 = peg$parsenumber();\n\t                if (s2 !== peg$FAILED) {\n\t                  peg$reportedPos = s0;\n\t                  s1 = peg$c118(s2);\n\t                  s0 = s1;\n\t                } else {\n\t                  peg$currPos = s0;\n\t                  s0 = peg$c0;\n\t                }\n\t              } else {\n\t                peg$currPos = s0;\n\t                s0 = peg$c0;\n\t              }\n\t              if (s0 === peg$FAILED) {\n\t                s0 = peg$currPos;\n\t                if (input.substr(peg$currPos, 2) === peg$c121) {\n\t                  s1 = peg$c121;\n\t                  peg$currPos += 2;\n\t                } else {\n\t                  s1 = peg$FAILED;\n\t                  if (peg$silentFails === 0) {\n\t                    peg$fail(peg$c122);\n\t                  }\n\t                }\n\t                if (s1 !== peg$FAILED) {\n\t                  s2 = peg$parsenumber();\n\t                  if (s2 !== peg$FAILED) {\n\t                    peg$reportedPos = s0;\n\t                    s1 = peg$c123(s2);\n\t                    s0 = s1;\n\t                  } else {\n\t                    peg$currPos = s0;\n\t                    s0 = peg$c0;\n\t                  }\n\t                } else {\n\t                  peg$currPos = s0;\n\t                  s0 = peg$c0;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseconstantExpr() {\n\t      var s0, s1, s2;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.charCodeAt(peg$currPos) === 45) {\n\t        s1 = peg$c43;\n\t        peg$currPos++;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c44);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$parsenumber();\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c123(s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        if (input.charCodeAt(peg$currPos) === 43) {\n\t          s1 = peg$c77;\n\t          peg$currPos++;\n\t        } else {\n\t          s1 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c78);\n\t          }\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          s2 = peg$parsenumber();\n\t          if (s2 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c118(s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseviewNameRange() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$currPos;\n\t      s2 = [];\n\t      if (peg$c124.test(input.charAt(peg$currPos))) {\n\t        s3 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s3 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c125);\n\t        }\n\t      }\n\t      if (s3 !== peg$FAILED) {\n\t        while (s3 !== peg$FAILED) {\n\t          s2.push(s3);\n\t          if (peg$c124.test(input.charAt(peg$currPos))) {\n\t            s3 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c125);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s2 = peg$c0;\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        s2 = input.substring(s1, peg$currPos);\n\t      }\n\t      s1 = s2;\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$currPos;\n\t        s3 = [];\n\t        if (peg$c126.test(input.charAt(peg$currPos))) {\n\t          s4 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s4 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c127);\n\t          }\n\t        }\n\t        while (s4 !== peg$FAILED) {\n\t          s3.push(s4);\n\t          if (peg$c126.test(input.charAt(peg$currPos))) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c127);\n\t            }\n\t          }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          s3 = input.substring(s2, peg$currPos);\n\t        }\n\t        s2 = s3;\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = peg$parserange();\n\t          if (s3 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c128(s1, s2, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        s1 = peg$currPos;\n\t        s2 = [];\n\t        if (peg$c124.test(input.charAt(peg$currPos))) {\n\t          s3 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s3 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c125);\n\t          }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            if (peg$c124.test(input.charAt(peg$currPos))) {\n\t              s3 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s3 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c125);\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          s2 = peg$c0;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s2 = input.substring(s1, peg$currPos);\n\t        }\n\t        s1 = s2;\n\t        if (s1 !== peg$FAILED) {\n\t          s2 = peg$currPos;\n\t          s3 = [];\n\t          if (peg$c126.test(input.charAt(peg$currPos))) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c127);\n\t            }\n\t          }\n\t          while (s4 !== peg$FAILED) {\n\t            s3.push(s4);\n\t            if (peg$c126.test(input.charAt(peg$currPos))) {\n\t              s4 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s4 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c127);\n\t              }\n\t            }\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            s3 = input.substring(s2, peg$currPos);\n\t          }\n\t          s2 = s3;\n\t          if (s2 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c129(s1, s2);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parseviewName() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = peg$currPos;\n\t      s2 = [];\n\t      if (peg$c124.test(input.charAt(peg$currPos))) {\n\t        s3 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s3 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c125);\n\t        }\n\t      }\n\t      if (s3 !== peg$FAILED) {\n\t        while (s3 !== peg$FAILED) {\n\t          s2.push(s3);\n\t          if (peg$c124.test(input.charAt(peg$currPos))) {\n\t            s3 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s3 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c125);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s2 = peg$c0;\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        s2 = input.substring(s1, peg$currPos);\n\t      }\n\t      s1 = s2;\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = peg$currPos;\n\t        s3 = [];\n\t        if (peg$c126.test(input.charAt(peg$currPos))) {\n\t          s4 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s4 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c127);\n\t          }\n\t        }\n\t        while (s4 !== peg$FAILED) {\n\t          s3.push(s4);\n\t          if (peg$c126.test(input.charAt(peg$currPos))) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c127);\n\t            }\n\t          }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          s3 = input.substring(s2, peg$currPos);\n\t        }\n\t        s2 = s3;\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c129(s1, s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parserange() {\n\t      var s0, s1, s2, s3;\n\t\n\t      s0 = peg$currPos;\n\t      if (input.substr(peg$currPos, 2) === peg$c130) {\n\t        s1 = peg$c130;\n\t        peg$currPos += 2;\n\t      } else {\n\t        s1 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c131);\n\t        }\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        s2 = [];\n\t        if (peg$c72.test(input.charAt(peg$currPos))) {\n\t          s3 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s3 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c73);\n\t          }\n\t        }\n\t        if (s3 !== peg$FAILED) {\n\t          while (s3 !== peg$FAILED) {\n\t            s2.push(s3);\n\t            if (peg$c72.test(input.charAt(peg$currPos))) {\n\t              s3 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s3 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c73);\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          s2 = peg$c0;\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c132(s2);\n\t          s0 = s1;\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function peg$parsenumber() {\n\t      var s0, s1, s2, s3, s4;\n\t\n\t      s0 = peg$currPos;\n\t      s1 = [];\n\t      if (peg$c72.test(input.charAt(peg$currPos))) {\n\t        s2 = input.charAt(peg$currPos);\n\t        peg$currPos++;\n\t      } else {\n\t        s2 = peg$FAILED;\n\t        if (peg$silentFails === 0) {\n\t          peg$fail(peg$c73);\n\t        }\n\t      }\n\t      if (s2 !== peg$FAILED) {\n\t        while (s2 !== peg$FAILED) {\n\t          s1.push(s2);\n\t          if (peg$c72.test(input.charAt(peg$currPos))) {\n\t            s2 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s2 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c73);\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        s1 = peg$c0;\n\t      }\n\t      if (s1 !== peg$FAILED) {\n\t        if (input.charCodeAt(peg$currPos) === 46) {\n\t          s2 = peg$c133;\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c134);\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          s3 = [];\n\t          if (peg$c72.test(input.charAt(peg$currPos))) {\n\t            s4 = input.charAt(peg$currPos);\n\t            peg$currPos++;\n\t          } else {\n\t            s4 = peg$FAILED;\n\t            if (peg$silentFails === 0) {\n\t              peg$fail(peg$c73);\n\t            }\n\t          }\n\t          if (s4 !== peg$FAILED) {\n\t            while (s4 !== peg$FAILED) {\n\t              s3.push(s4);\n\t              if (peg$c72.test(input.charAt(peg$currPos))) {\n\t                s4 = input.charAt(peg$currPos);\n\t                peg$currPos++;\n\t              } else {\n\t                s4 = peg$FAILED;\n\t                if (peg$silentFails === 0) {\n\t                  peg$fail(peg$c73);\n\t                }\n\t              }\n\t            }\n\t          } else {\n\t            s3 = peg$c0;\n\t          }\n\t          if (s3 !== peg$FAILED) {\n\t            peg$reportedPos = s0;\n\t            s1 = peg$c135(s1, s3);\n\t            s0 = s1;\n\t          } else {\n\t            peg$currPos = s0;\n\t            s0 = peg$c0;\n\t          }\n\t        } else {\n\t          peg$currPos = s0;\n\t          s0 = peg$c0;\n\t        }\n\t      } else {\n\t        peg$currPos = s0;\n\t        s0 = peg$c0;\n\t      }\n\t      if (s0 === peg$FAILED) {\n\t        s0 = peg$currPos;\n\t        s1 = [];\n\t        if (peg$c72.test(input.charAt(peg$currPos))) {\n\t          s2 = input.charAt(peg$currPos);\n\t          peg$currPos++;\n\t        } else {\n\t          s2 = peg$FAILED;\n\t          if (peg$silentFails === 0) {\n\t            peg$fail(peg$c73);\n\t          }\n\t        }\n\t        if (s2 !== peg$FAILED) {\n\t          while (s2 !== peg$FAILED) {\n\t            s1.push(s2);\n\t            if (peg$c72.test(input.charAt(peg$currPos))) {\n\t              s2 = input.charAt(peg$currPos);\n\t              peg$currPos++;\n\t            } else {\n\t              s2 = peg$FAILED;\n\t              if (peg$silentFails === 0) {\n\t                peg$fail(peg$c73);\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          s1 = peg$c0;\n\t        }\n\t        if (s1 !== peg$FAILED) {\n\t          peg$reportedPos = s0;\n\t          s1 = peg$c136(s1);\n\t        }\n\t        s0 = s1;\n\t      }\n\t\n\t      return s0;\n\t    }\n\t\n\t    function extend(dst) {\n\t      for (var i = 1; i < arguments.length; i++) {\n\t        for (var k in arguments[i]) {\n\t          dst[k] = arguments[i][k];\n\t        }\n\t      }\n\t      return dst;\n\t    }\n\t\n\t    peg$result = peg$startRuleFunction();\n\t\n\t    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n\t      return peg$result;\n\t    } else {\n\t      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n\t        peg$fail({ type: \"end\", description: \"end of input\" });\n\t      }\n\t\n\t      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n\t    }\n\t  }\n\t\n\t  return {\n\t    SyntaxError: SyntaxError,\n\t    parse: parse\n\t  };\n\t}();\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _cassowary = __webpack_require__(8);\n\t\n\tvar _cassowary2 = _interopRequireDefault(_cassowary);\n\t\n\tvar _Attribute = __webpack_require__(1);\n\t\n\tvar _Attribute2 = _interopRequireDefault(_Attribute);\n\t\n\tvar _Relation = __webpack_require__(2);\n\t\n\tvar _Relation2 = _interopRequireDefault(_Relation);\n\t\n\tvar _SubView = __webpack_require__(10);\n\t\n\tvar _SubView2 = _interopRequireDefault(_SubView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar defaultPriorityStrength = 'true' ? new _cassowary2.default.Strength('defaultPriority', 0, 1000, 1000) : _cassowary2.default.Strength.create(0, 1000, 1000);\n\t\n\tfunction _getConst(name, value) {\n\t    if ('true') {\n\t        var vr = new _cassowary2.default.Variable({ value: value });\n\t        this._solver.addConstraint(new _cassowary2.default.StayConstraint(vr, _cassowary2.default.Strength.required, 0));\n\t        return vr;\n\t    } else {\n\t        var _vr = new _cassowary2.default.Variable();\n\t        this._solver.addConstraint(new _cassowary2.default.Constraint(_vr, _cassowary2.default.Operator.Eq, value));\n\t        return _vr;\n\t    }\n\t}\n\t\n\tfunction _getSubView(viewName) {\n\t    if (!viewName) {\n\t        return this._parentSubView;\n\t    } else if (viewName.name) {\n\t        this._subViews[viewName.name] = this._subViews[viewName.name] || new _SubView2.default({\n\t            name: viewName.name,\n\t            solver: this._solver\n\t        });\n\t        this._subViews[viewName.name]._type = this._subViews[viewName.name]._type || viewName.type;\n\t        return this._subViews[viewName.name];\n\t    } else {\n\t        this._subViews[viewName] = this._subViews[viewName] || new _SubView2.default({\n\t            name: viewName,\n\t            solver: this._solver\n\t        });\n\t        return this._subViews[viewName];\n\t    }\n\t}\n\t\n\tfunction _getSpacing(constraint) {\n\t    var index = 4;\n\t    if (!constraint.view1 && constraint.attr1 === 'left') {\n\t        index = 3;\n\t    } else if (!constraint.view1 && constraint.attr1 === 'top') {\n\t        index = 0;\n\t    } else if (!constraint.view2 && constraint.attr2 === 'right') {\n\t        index = 1;\n\t    } else if (!constraint.view2 && constraint.attr2 === 'bottom') {\n\t        index = 2;\n\t    } else {\n\t        switch (constraint.attr1) {\n\t            case 'left':\n\t            case 'right':\n\t            case 'centerX':\n\t            case 'leading':\n\t            case 'trailing':\n\t                index = 4;\n\t                break;\n\t            case 'zIndex':\n\t                index = 6;\n\t                break;\n\t            default:\n\t                index = 5;\n\t        }\n\t    }\n\t    this._spacingVars = this._spacingVars || new Array(7);\n\t    this._spacingExpr = this._spacingExpr || new Array(7);\n\t    if (!this._spacingVars[index]) {\n\t        if ('true') {\n\t            this._spacingVars[index] = new _cassowary2.default.Variable();\n\t            this._solver.addEditVar(this._spacingVars[index]);\n\t            this._spacingExpr[index] = _cassowary2.default.minus(0, this._spacingVars[index]);\n\t        } else {\n\t            this._spacingVars[index] = new _cassowary2.default.Variable();\n\t            this._solver.addEditVariable(this._spacingVars[index], _cassowary2.default.Strength.create(999, 1000, 1000));\n\t            this._spacingExpr[index] = this._spacingVars[index].multiply(-1);\n\t        }\n\t        this._solver.suggestValue(this._spacingVars[index], this._spacing[index]);\n\t    }\n\t    return this._spacingExpr[index];\n\t}\n\t\n\tfunction _addConstraint(constraint) {\n\t    //this.constraints.push(constraint);\n\t    var relation = void 0;\n\t    var multiplier = constraint.multiplier !== undefined ? constraint.multiplier : 1;\n\t    var constant = constraint.constant !== undefined ? constraint.constant : 0;\n\t    if (constant === 'default') {\n\t        constant = _getSpacing.call(this, constraint);\n\t    }\n\t    var attr1 = _getSubView.call(this, constraint.view1)._getAttr(constraint.attr1);\n\t    var attr2 = void 0;\n\t    if ('true') {\n\t        if (constraint.attr2 === _Attribute2.default.CONST) {\n\t            attr2 = _getConst.call(this, undefined, constraint.constant);\n\t        } else {\n\t            attr2 = _getSubView.call(this, constraint.view2)._getAttr(constraint.attr2);\n\t            if (multiplier !== 1 && constant) {\n\t                attr2 = _cassowary2.default.plus(_cassowary2.default.times(attr2, multiplier), constant);\n\t            } else if (constant) {\n\t                attr2 = _cassowary2.default.plus(attr2, constant);\n\t            } else if (multiplier !== 1) {\n\t                attr2 = _cassowary2.default.times(attr2, multiplier);\n\t            }\n\t        }\n\t        var strength = constraint.priority !== undefined && constraint.priority < 1000 ? new _cassowary2.default.Strength('priority', 0, constraint.priority, 1000) : defaultPriorityStrength;\n\t        switch (constraint.relation) {\n\t            case _Relation2.default.EQU:\n\t                relation = new _cassowary2.default.Equation(attr1, attr2, strength);\n\t                break;\n\t            case _Relation2.default.GEQ:\n\t                relation = new _cassowary2.default.Inequality(attr1, _cassowary2.default.GEQ, attr2, strength);\n\t                break;\n\t            case _Relation2.default.LEQ:\n\t                relation = new _cassowary2.default.Inequality(attr1, _cassowary2.default.LEQ, attr2, strength);\n\t                break;\n\t            default:\n\t                throw 'Invalid relation specified: ' + constraint.relation;\n\t        }\n\t    } else {\n\t        if (constraint.attr2 === _Attribute2.default.CONST) {\n\t            attr2 = _getConst.call(this, undefined, constraint.constant);\n\t        } else {\n\t            attr2 = _getSubView.call(this, constraint.view2)._getAttr(constraint.attr2);\n\t            if (multiplier !== 1 && constant) {\n\t                attr2 = attr2.multiply(multiplier).plus(constant);\n\t            } else if (constant) {\n\t                attr2 = attr2.plus(constant);\n\t            } else if (multiplier !== 1) {\n\t                attr2 = attr2.multiply(multiplier);\n\t            }\n\t        }\n\t        var _strength = constraint.priority !== undefined && constraint.priority < 1000 ? _cassowary2.default.Strength.create(0, constraint.priority, 1000) : defaultPriorityStrength;\n\t        switch (constraint.relation) {\n\t            case _Relation2.default.EQU:\n\t                relation = new _cassowary2.default.Constraint(attr1, _cassowary2.default.Operator.Eq, attr2, _strength);\n\t                break;\n\t            case _Relation2.default.GEQ:\n\t                relation = new _cassowary2.default.Constraint(attr1, _cassowary2.default.Operator.Ge, attr2, _strength);\n\t                break;\n\t            case _Relation2.default.LEQ:\n\t                relation = new _cassowary2.default.Constraint(attr1, _cassowary2.default.Operator.Le, attr2, _strength);\n\t                break;\n\t            default:\n\t                throw 'Invalid relation specified: ' + constraint.relation;\n\t        }\n\t    }\n\t    this._solver.addConstraint(relation);\n\t}\n\t\n\tfunction _compareSpacing(old, newz) {\n\t    if (old === newz) {\n\t        return true;\n\t    }\n\t    if (!old || !newz) {\n\t        return false;\n\t    }\n\t    for (var i = 0; i < 7; i++) {\n\t        if (old[i] !== newz[i]) {\n\t            return false;\n\t        }\n\t    }\n\t    return true;\n\t}\n\t\n\t/**\n\t * AutoLayoutJS API reference.\n\t *\n\t * ### Index\n\t *\n\t * |Entity|Type|Description|\n\t * |---|---|---|\n\t * |[AutoLayout](#autolayout)|`namespace`|Top level AutoLayout object.|\n\t * |[VisualFormat](#autolayoutvisualformat--object)|`namespace`|Parses VFL into constraints.|\n\t * |[View](#autolayoutview)|`class`|Main entity for adding & evaluating constraints.|\n\t * |[SubView](#autolayoutsubview--object)|`class`|SubView's are automatically created when constraints are added to views. They give access to the evaluated results.|\n\t * |[Attribute](#autolayoutattribute--enum)|`enum`|Attribute types that are supported when adding constraints.|\n\t * |[Relation](#autolayoutrelation--enum)|`enum`|Relationship types that are supported when adding constraints.|\n\t * |[Priority](#autolayoutpriority--enum)|`enum`|Default priority values for when adding constraints.|\n\t *\n\t * ### AutoLayout\n\t *\n\t * @module AutoLayout\n\t */\n\t\n\tvar View = function () {\n\t\n\t    /**\n\t     * @class View\n\t     * @param {Object} [options] Configuration options.\n\t     * @param {Number} [options.width] Initial width of the view.\n\t     * @param {Number} [options.height] Initial height of the view.\n\t     * @param {Number|Object} [options.spacing] Spacing for the view (default: 8) (see `setSpacing`).\n\t     * @param {Array} [options.constraints] One or more constraint definitions (see `addConstraints`).\n\t     */\n\t\n\t    function View(options) {\n\t        _classCallCheck(this, View);\n\t\n\t        this._solver = 'true' ? new _cassowary2.default.SimplexSolver() : new _cassowary2.default.Solver();\n\t        this._subViews = {};\n\t        //this._spacing = undefined;\n\t        this._parentSubView = new _SubView2.default({\n\t            solver: this._solver\n\t        });\n\t        this.setSpacing(options && options.spacing !== undefined ? options.spacing : 8);\n\t        //this.constraints = [];\n\t        if (options) {\n\t            if (options.width !== undefined || options.height !== undefined) {\n\t                this.setSize(options.width, options.height);\n\t            }\n\t            if (options.constraints) {\n\t                this.addConstraints(options.constraints);\n\t            }\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Sets the width and height of the view.\n\t     *\n\t     * @param {Number} width Width of the view.\n\t     * @param {Number} height Height of the view.\n\t     * @return {View} this\n\t     */\n\t\n\t\n\t    _createClass(View, [{\n\t        key: 'setSize',\n\t        value: function setSize(width, height /*, depth*/) {\n\t            this._parentSubView.intrinsicWidth = width;\n\t            this._parentSubView.intrinsicHeight = height;\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Width that was set using `setSize`.\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'setSpacing',\n\t\n\t\n\t        /**\n\t         * Sets the spacing for the view.\n\t         *\n\t         * The spacing can be set for 7 different variables:\n\t         * `top`, `right`, `bottom`, `left`, `width`, `height` and `zIndex`. The `left`-spacing is\n\t         * used when a spacer is used between the parent-view and a sub-view (e.g. `|-[subView]`).\n\t         * The same is true for the `right`, `top` and `bottom` spacers. The `width` and `height` are\n\t         * used for spacers in between sub-views (e.g. `[view1]-[view2]`).\n\t         *\n\t         * Instead of using the full spacing syntax, it is also possible to use shorthand notations:\n\t         *\n\t         * |Syntax|Type|Description|\n\t         * |---|---|---|\n\t         * |`[top, right, bottom, left, width, height, zIndex]`|Array(7)|Full syntax including z-index **(clockwise order)**.|\n\t         * |`[top, right, bottom, left, width, height]`|Array(6)|Full horizontal & vertical spacing syntax (no z-index) **(clockwise order)**.|\n\t         * |`[horizontal, vertical, zIndex]`|Array(3)|Horizontal = left, right, width, vertical = top, bottom, height.|\n\t         * |`[horizontal, vertical]`|Array(2)|Horizontal = left, right, width, vertical = top, bottom, height, z-index = 1.|\n\t         * |`spacing`|Number|Horizontal & vertical spacing are all the same, z-index = 1.|\n\t         *\n\t         * Examples:\n\t         * ```javascript\n\t         * view.setSpacing(10); // horizontal & vertical spacing 10\n\t         * view.setSpacing([10, 15, 2]); // horizontal spacing 10, vertical spacing 15, z-axis spacing 2\n\t         * view.setSpacing([10, 20, 10, 20, 5, 5]); // top, right, bottom, left, horizontal, vertical\n\t         * view.setSpacing([10, 20, 10, 20, 5, 5, 1]); // top, right, bottom, left, horizontal, vertical, z\n\t         * ```\n\t         *\n\t         * @param {Number|Array} spacing\n\t         * @return {View} this\n\t         */\n\t        value: function setSpacing(spacing) {\n\t            // convert spacing into array: [top, right, bottom, left, horz, vert, z-index]\n\t            switch (Array.isArray(spacing) ? spacing.length : -1) {\n\t                case -1:\n\t                    spacing = [spacing, spacing, spacing, spacing, spacing, spacing, 1];break;\n\t                case 1:\n\t                    spacing = [spacing[0], spacing[0], spacing[0], spacing[0], spacing[0], spacing[0], 1];break;\n\t                case 2:\n\t                    spacing = [spacing[1], spacing[0], spacing[1], spacing[0], spacing[0], spacing[1], 1];break;\n\t                case 3:\n\t                    spacing = [spacing[1], spacing[0], spacing[1], spacing[0], spacing[0], spacing[1], spacing[2]];break;\n\t                case 6:\n\t                    spacing = [spacing[0], spacing[1], spacing[2], spacing[3], spacing[4], spacing[5], 1];break;\n\t                case 7:\n\t                    break;\n\t                default:\n\t                    throw 'Invalid spacing syntax';\n\t            }\n\t            if (!_compareSpacing(this._spacing, spacing)) {\n\t                this._spacing = spacing;\n\t                // update spacing variables\n\t                if (this._spacingVars) {\n\t                    for (var i = 0; i < this._spacingVars.length; i++) {\n\t                        if (this._spacingVars[i]) {\n\t                            this._solver.suggestValue(this._spacingVars[i], this._spacing[i]);\n\t                        }\n\t                    }\n\t                    if ('true') {\n\t                        this._solver.resolve();\n\t                    } else {\n\t                        this._solver.updateVariables();\n\t                    }\n\t                }\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Adds a constraint definition.\n\t         *\n\t         * A constraint definition has the following format:\n\t         *\n\t         * ```javascript\n\t         * constraint: {\n\t         *   view1: {String},\n\t         *   attr1: {AutoLayout.Attribute},\n\t         *   relation: {AutoLayout.Relation},\n\t         *   view2: {String},\n\t         *   attr2: {AutoLayout.Attribute},\n\t         *   multiplier: {Number},\n\t         *   constant: {Number},\n\t         *   priority: {Number}(0..1000)\n\t         * }\n\t         * ```\n\t         * @param {Object} constraint Constraint definition.\n\t         * @return {View} this\n\t         */\n\t\n\t    }, {\n\t        key: 'addConstraint',\n\t        value: function addConstraint(constraint) {\n\t            _addConstraint.call(this, constraint);\n\t            if (false) {\n\t                this._solver.updateVariables();\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Adds one or more constraint definitions.\n\t         *\n\t         * A constraint definition has the following format:\n\t         *\n\t         * ```javascript\n\t         * constraint: {\n\t         *   view1: {String},\n\t         *   attr1: {AutoLayout.Attribute},\n\t         *   relation: {AutoLayout.Relation},\n\t         *   view2: {String},\n\t         *   attr2: {AutoLayout.Attribute},\n\t         *   multiplier: {Number},\n\t         *   constant: {Number},\n\t         *   priority: {Number}(0..1000)\n\t         * }\n\t         * ```\n\t         * @param {Array} constraints One or more constraint definitions.\n\t         * @return {View} this\n\t         */\n\t\n\t    }, {\n\t        key: 'addConstraints',\n\t        value: function addConstraints(constraints) {\n\t            for (var j = 0; j < constraints.length; j++) {\n\t                _addConstraint.call(this, constraints[j]);\n\t            }\n\t            if (false) {\n\t                this._solver.updateVariables();\n\t            }\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Dictionary of `SubView` objects that have been created when adding constraints.\n\t         * @readonly\n\t         * @type {Object.SubView}\n\t         */\n\t\n\t    }, {\n\t        key: 'width',\n\t        get: function get() {\n\t            return this._parentSubView.intrinsicWidth;\n\t        }\n\t\n\t        /**\n\t         * Height that was set using `setSize`.\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'height',\n\t        get: function get() {\n\t            return this._parentSubView.intrinsicHeight;\n\t        }\n\t\n\t        /**\n\t         * Width that is calculated from the constraints and the `.intrinsicWidth` of\n\t         * the sub-views.\n\t         *\n\t         * When the width has been explicitely set using `setSize`, the fittingWidth\n\t         * will **always** be the same as the explicitely set width. To calculate the size\n\t         * based on the content, use:\n\t         * ```javascript\n\t         * var view = new AutoLayout.View({\n\t         *   constraints: VisualFormat.parse('|-[view1]-[view2]-'),\n\t         *   spacing: 20\n\t         * });\n\t         * view.subViews.view1.intrinsicWidth = 100;\n\t         * view.subViews.view2.intrinsicWidth = 100;\n\t         * console.log('fittingWidth: ' + view.fittingWidth); // 260\n\t         * ```\n\t         *\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'fittingWidth',\n\t        get: function get() {\n\t            return this._parentSubView.width;\n\t        }\n\t\n\t        /**\n\t         * Height that is calculated from the constraints and the `.intrinsicHeight` of\n\t         * the sub-views.\n\t         *\n\t         * See `.fittingWidth`.\n\t         *\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'fittingHeight',\n\t        get: function get() {\n\t            return this._parentSubView.height;\n\t        }\n\t    }, {\n\t        key: 'subViews',\n\t        get: function get() {\n\t            return this._subViews;\n\t        }\n\t\n\t        /**\n\t         * Checks whether the constraints incompletely specify the location\n\t         * of the subViews.\n\t         * @private\n\t         */\n\t        //get hasAmbiguousLayout() {\n\t        // Todo\n\t        //}\n\t\n\t    }]);\n\t\n\t    return View;\n\t}();\n\t\n\texports.default = View;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {/**\n\t * Parts Copyright (C) 2011-2012, Alex Russell (slightlyoff@chromium.org)\n\t * Parts Copyright (C) Copyright (C) 1998-2000 Greg J. Badros\n\t *\n\t * Use of this source code is governed by the LGPL, which can be found in the\n\t * COPYING.LGPL file.\n\t *\n\t * This is a compiled version of Cassowary/JS. For source versions or to\n\t * contribute, see the github project:\n\t *\n\t *  https://github.com/slightlyoff/cassowary-js-refactor\n\t *\n\t */\n\t\n\t(function() {\n\t(function(a){\"use strict\";try{(function(){}).bind(a)}catch(b){Object.defineProperty(Function.prototype,\"bind\",{value:function(a){var b=this;return function(){return b.apply(a,arguments)}},enumerable:!1,configurable:!0,writable:!0})}var c=a.HTMLElement!==void 0,d=function(a){for(var b=null;a&&a!=Object.prototype;){if(a.tagName){b=a.tagName;break}a=a.prototype}return b||\"div\"},e=1e-8,f={},g=function(a,b){if(a&&b){if(\"function\"==typeof a[b])return a[b];var c=a.prototype;if(c&&\"function\"==typeof c[b])return c[b];if(c!==Object.prototype&&c!==Function.prototype)return\"function\"==typeof a.__super__?g(a.__super__,b):void 0}},h=a.c={debug:!1,trace:!1,verbose:!1,traceAdded:!1,GC:!1,GEQ:1,LEQ:2,inherit:function(b){var e=null,g=null;b[\"extends\"]&&(g=b[\"extends\"],delete b[\"extends\"]),b.initialize&&(e=b.initialize,delete b.initialize);var h=e||function(){};Object.defineProperty(h,\"__super__\",{value:g?g:Object,enumerable:!1,configurable:!0,writable:!1}),b._t&&(f[b._t]=h);var i=h.prototype=Object.create(g?g.prototype:Object.prototype);if(this.extend(i,b),c&&g&&g.prototype instanceof a.HTMLElement){var j=h,k=d(i),l=function(a){return a.__proto__=i,j.apply(a,arguments),i.created&&a.created(),i.decorate&&a.decorate(),a};this.extend(i,{upgrade:l}),h=function(){return l(a.document.createElement(k))},h.prototype=i,this.extend(h,{ctor:j})}return h},extend:function(a,b){return this.own(b,function(c){var d=Object.getOwnPropertyDescriptor(b,c);try{\"function\"==typeof d.get||\"function\"==typeof d.set?Object.defineProperty(a,c,d):\"function\"==typeof d.value||\"_\"===c.charAt(0)?(d.writable=!0,d.configurable=!0,d.enumerable=!1,Object.defineProperty(a,c,d)):a[c]=b[c]}catch(e){}}),a},own:function(b,c,d){return Object.getOwnPropertyNames(b).forEach(c,d||a),b},traceprint:function(a){h.verbose&&console.log(a)},fnenterprint:function(a){console.log(\"* \"+a)},fnexitprint:function(a){console.log(\"- \"+a)},assert:function(a,b){if(!a)throw new h.InternalError(\"Assertion failed: \"+b)},plus:function(a,b){return a instanceof h.Expression||(a=new h.Expression(a)),b instanceof h.Expression||(b=new h.Expression(b)),a.plus(b)},minus:function(a,b){return a instanceof h.Expression||(a=new h.Expression(a)),b instanceof h.Expression||(b=new h.Expression(b)),a.minus(b)},times:function(a,b){return(\"number\"==typeof a||a instanceof h.Variable)&&(a=new h.Expression(a)),(\"number\"==typeof b||b instanceof h.Variable)&&(b=new h.Expression(b)),a.times(b)},divide:function(a,b){return(\"number\"==typeof a||a instanceof h.Variable)&&(a=new h.Expression(a)),(\"number\"==typeof b||b instanceof h.Variable)&&(b=new h.Expression(b)),a.divide(b)},approx:function(a,b){if(a===b)return!0;var c,d;return c=a instanceof h.Variable?a.value:a,d=b instanceof h.Variable?b.value:b,0==c?e>Math.abs(d):0==d?e>Math.abs(c):Math.abs(c-d)<Math.abs(c)*e},_inc:function(a){return function(){return a++}}(0),parseJSON:function(a){return JSON.parse(a,function(a,b){if(\"object\"!=typeof b||\"string\"!=typeof b._t)return b;var c=b._t,d=f[c];if(c&&d){var e=g(d,\"fromJSON\");if(e)return e(b,d)}return b})}};\"function\"==\"function\"&&\"undefined\"!=typeof module&&\"undefined\"==typeof load&&(a.exports=h)})(this),function(a){\"use strict\";var b=function(a){var b=a.hashCode?a.hashCode:\"\"+a;return b},c=function(a,b){Object.keys(a).forEach(function(c){b[c]=a[c]})},d={};a.HashTable=a.inherit({initialize:function(){this.size=0,this._store={},this._keyStrMap={},this._deleted=0},set:function(a,c){var d=b(a);this._store.hasOwnProperty(d)||this.size++,this._store[d]=c,this._keyStrMap[d]=a},get:function(a){if(!this.size)return null;a=b(a);var c=this._store[a];return c!==void 0?this._store[a]:null},clear:function(){this.size=0,this._store={},this._keyStrMap={}},_compact:function(){var a={};c(this._store,a),this._store=a},_compactThreshold:100,_perhapsCompact:function(){this._size>64||this._deleted>this._compactThreshold&&(this._compact(),this._deleted=0)},\"delete\":function(a){a=b(a),this._store.hasOwnProperty(a)&&(this._deleted++,delete this._store[a],this.size>0&&this.size--)},each:function(a,b){if(this.size){this._perhapsCompact();var c=this._store,d=this._keyStrMap;Object.keys(this._store).forEach(function(e){a.call(b||null,d[e],c[e])},this)}},escapingEach:function(a,b){if(this.size){this._perhapsCompact();for(var c=this,e=this._store,f=this._keyStrMap,g=d,h=Object.keys(e),i=0;h.length>i;i++)if(function(d){c._store.hasOwnProperty(d)&&(g=a.call(b||null,f[d],e[d]))}(h[i]),g){if(void 0!==g.retval)return g;if(g.brk)break}}},clone:function(){var b=new a.HashTable;return this.size&&(b.size=this.size,c(this._store,b._store),c(this._keyStrMap,b._keyStrMap)),b},equals:function(b){if(b===this)return!0;if(!(b instanceof a.HashTable)||b._size!==this._size)return!1;for(var c=Object.keys(this._store),d=0;c.length>d;d++){var e=c[d];if(this._keyStrMap[e]!==b._keyStrMap[e]||this._store[e]!==b._store[e])return!1}return!0},toString:function(){var b=\"\";return this.each(function(a,c){b+=a+\" => \"+c+\"\\n\"}),b}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.HashSet=a.inherit({_t:\"c.HashSet\",initialize:function(){this.storage=[],this.size=0},add:function(a){var b=this.storage;b.indexOf(a),-1==b.indexOf(a)&&b.push(a),this.size=this.storage.length},values:function(){return this.storage},has:function(a){var b=this.storage;return-1!=b.indexOf(a)},\"delete\":function(a){var b=this.storage.indexOf(a);return-1==b?null:(this.storage.splice(b,1)[0],this.size=this.storage.length,void 0)},clear:function(){this.storage.length=0},each:function(a,b){this.size&&this.storage.forEach(a,b)},escapingEach:function(a,b){this.size&&this.storage.forEach(a,b)},toString:function(){var a=this.size+\" {\",b=!0;return this.each(function(c){b?b=!1:a+=\", \",a+=c}),a+=\"}\\n\"},toJSON:function(){var a=[];return this.each(function(b){a.push(b.toJSON())}),{_t:\"c.HashSet\",data:a}},fromJSON:function(b){var c=new a.HashSet;return b.data&&(c.size=b.data.length,c.storage=b.data),c}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.Error=a.inherit({initialize:function(a){a&&(this._description=a)},_name:\"c.Error\",_description:\"An error has occured in Cassowary\",set description(a){this._description=a},get description(){return\"(\"+this._name+\") \"+this._description},get message(){return this.description},toString:function(){return this.description}});var b=function(b,c){return a.inherit({\"extends\":a.Error,initialize:function(){a.Error.apply(this,arguments)},_name:b||\"\",_description:c||\"\"})};a.ConstraintNotFound=b(\"c.ConstraintNotFound\",\"Tried to remove a constraint never added to the tableu\"),a.InternalError=b(\"c.InternalError\"),a.NonExpression=b(\"c.NonExpression\",\"The resulting expression would be non\"),a.NotEnoughStays=b(\"c.NotEnoughStays\",\"There are not enough stays to give specific values to every variable\"),a.RequiredFailure=b(\"c.RequiredFailure\",\"A required constraint cannot be satisfied\"),a.TooDifficult=b(\"c.TooDifficult\",\"The constraints are too difficult to solve\")}(this.c||module.parent.exports||{}),function(a){\"use strict\";var b=1e3;a.SymbolicWeight=a.inherit({_t:\"c.SymbolicWeight\",initialize:function(){this.value=0;for(var a=1,c=arguments.length-1;c>=0;--c)this.value+=arguments[c]*a,a*=b},toJSON:function(){return{_t:this._t,value:this.value}}})}(this.c||module.parent.exports||{}),function(a){a.Strength=a.inherit({initialize:function(b,c,d,e){this.name=b,this.symbolicWeight=c instanceof a.SymbolicWeight?c:new a.SymbolicWeight(c,d,e)},get required(){return this===a.Strength.required},toString:function(){return this.name+(this.isRequired?\"\":\":\"+this.symbolicWeight)}}),a.Strength.required=new a.Strength(\"<Required>\",1e3,1e3,1e3),a.Strength.strong=new a.Strength(\"strong\",1,0,0),a.Strength.medium=new a.Strength(\"medium\",0,1,0),a.Strength.weak=new a.Strength(\"weak\",0,0,1)}(this.c||( true?module.parent.exports.c:{})),function(a){\"use strict\";a.AbstractVariable=a.inherit({isDummy:!1,isExternal:!1,isPivotable:!1,isRestricted:!1,_init:function(b,c){this.hashCode=a._inc(),this.name=(c||\"\")+this.hashCode,b&&(b.name!==void 0&&(this.name=b.name),b.value!==void 0&&(this.value=b.value),b.prefix!==void 0&&(this._prefix=b.prefix))},_prefix:\"\",name:\"\",value:0,toJSON:function(){var a={};return this._t&&(a._t=this._t),this.name&&(a.name=this.name),this.value!==void 0&&(a.value=this.value),this._prefix&&(a._prefix=this._prefix),this._t&&(a._t=this._t),a},fromJSON:function(b,c){var d=new c;return a.extend(d,b),d},toString:function(){return this._prefix+\"[\"+this.name+\":\"+this.value+\"]\"}}),a.Variable=a.inherit({_t:\"c.Variable\",\"extends\":a.AbstractVariable,initialize:function(b){this._init(b,\"v\");var c=a.Variable._map;c&&(c[this.name]=this)},isExternal:!0}),a.DummyVariable=a.inherit({_t:\"c.DummyVariable\",\"extends\":a.AbstractVariable,initialize:function(a){this._init(a,\"d\")},isDummy:!0,isRestricted:!0,value:\"dummy\"}),a.ObjectiveVariable=a.inherit({_t:\"c.ObjectiveVariable\",\"extends\":a.AbstractVariable,initialize:function(a){this._init(a,\"o\")},value:\"obj\"}),a.SlackVariable=a.inherit({_t:\"c.SlackVariable\",\"extends\":a.AbstractVariable,initialize:function(a){this._init(a,\"s\")},isPivotable:!0,isRestricted:!0,value:\"slack\"})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.Point=a.inherit({initialize:function(b,c,d){if(b instanceof a.Variable)this._x=b;else{var e={value:b};d&&(e.name=\"x\"+d),this._x=new a.Variable(e)}if(c instanceof a.Variable)this._y=c;else{var f={value:c};d&&(f.name=\"y\"+d),this._y=new a.Variable(f)}},get x(){return this._x},set x(b){b instanceof a.Variable?this._x=b:this._x.value=b},get y(){return this._y},set y(b){b instanceof a.Variable?this._y=b:this._y.value=b},toString:function(){return\"(\"+this.x+\", \"+this.y+\")\"}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.Expression=a.inherit({initialize:function(b,c,d){a.GC&&console.log(\"new c.Expression\"),this.constant=\"number\"!=typeof d||isNaN(d)?0:d,this.terms=new a.HashTable,b instanceof a.AbstractVariable?this.setVariable(b,\"number\"==typeof c?c:1):\"number\"==typeof b&&(isNaN(b)?console.trace():this.constant=b)},initializeFromHash:function(b,c){return a.verbose&&(console.log(\"*******************************\"),console.log(\"clone c.initializeFromHash\"),console.log(\"*******************************\")),a.GC&&console.log(\"clone c.Expression\"),this.constant=b,this.terms=c.clone(),this},multiplyMe:function(a){this.constant*=a;var b=this.terms;return b.each(function(c,d){b.set(c,d*a)}),this},clone:function(){a.verbose&&(console.log(\"*******************************\"),console.log(\"clone c.Expression\"),console.log(\"*******************************\"));var b=new a.Expression;return b.initializeFromHash(this.constant,this.terms),b},times:function(b){if(\"number\"==typeof b)return this.clone().multiplyMe(b);if(this.isConstant)return b.times(this.constant);if(b.isConstant)return this.times(b.constant);throw new a.NonExpression},plus:function(b){return b instanceof a.Expression?this.clone().addExpression(b,1):b instanceof a.Variable?this.clone().addVariable(b,1):void 0},minus:function(b){return b instanceof a.Expression?this.clone().addExpression(b,-1):b instanceof a.Variable?this.clone().addVariable(b,-1):void 0},divide:function(b){if(\"number\"==typeof b){if(a.approx(b,0))throw new a.NonExpression;return this.times(1/b)}if(b instanceof a.Expression){if(!b.isConstant)throw new a.NonExpression;return this.times(1/b.constant)}},addExpression:function(b,c,d,e){return b instanceof a.AbstractVariable&&(b=new a.Expression(b),a.trace&&console.log(\"addExpression: Had to cast a var to an expression\")),c=c||1,this.constant+=c*b.constant,b.terms.each(function(a,b){this.addVariable(a,b*c,d,e)},this),this},addVariable:function(b,c,d,e){null==c&&(c=1),a.trace&&console.log(\"c.Expression::addVariable():\",b,c);var f=this.terms.get(b);if(f){var g=f+c;0==g||a.approx(g,0)?(e&&e.noteRemovedVariable(b,d),this.terms.delete(b)):this.setVariable(b,g)}else a.approx(c,0)||(this.setVariable(b,c),e&&e.noteAddedVariable(b,d));return this},setVariable:function(a,b){return this.terms.set(a,b),this},anyPivotableVariable:function(){if(this.isConstant)throw new a.InternalError(\"anyPivotableVariable called on a constant\");var b=this.terms.escapingEach(function(a){return a.isPivotable?{retval:a}:void 0});return b&&void 0!==b.retval?b.retval:null},substituteOut:function(b,c,d,e){a.trace&&(a.fnenterprint(\"CLE:substituteOut: \"+b+\", \"+c+\", \"+d+\", ...\"),a.traceprint(\"this = \"+this));var f=this.setVariable.bind(this),g=this.terms,h=g.get(b);g.delete(b),this.constant+=h*c.constant,c.terms.each(function(b,c){var i=g.get(b);if(i){var j=i+h*c;a.approx(j,0)?(e.noteRemovedVariable(b,d),g.delete(b)):f(b,j)}else f(b,h*c),e&&e.noteAddedVariable(b,d)}),a.trace&&a.traceprint(\"Now this is \"+this)},changeSubject:function(a,b){this.setVariable(a,this.newSubject(b))},newSubject:function(b){a.trace&&a.fnenterprint(\"newSubject:\"+b);var c=1/this.terms.get(b);return this.terms.delete(b),this.multiplyMe(-c),c},coefficientFor:function(a){return this.terms.get(a)||0},get isConstant(){return 0==this.terms.size},toString:function(){var b=\"\",c=!1;if(!a.approx(this.constant,0)||this.isConstant){if(b+=this.constant,this.isConstant)return b;c=!0}return this.terms.each(function(a,d){c&&(b+=\" + \"),b+=d+\"*\"+a,c=!0}),b},equals:function(b){return b===this?!0:b instanceof a.Expression&&b.constant===this.constant&&b.terms.equals(this.terms)},Plus:function(a,b){return a.plus(b)},Minus:function(a,b){return a.minus(b)},Times:function(a,b){return a.times(b)},Divide:function(a,b){return a.divide(b)}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.AbstractConstraint=a.inherit({initialize:function(b,c){this.hashCode=a._inc(),this.strength=b||a.Strength.required,this.weight=c||1},isEditConstraint:!1,isInequality:!1,isStayConstraint:!1,get required(){return this.strength===a.Strength.required},toString:function(){return this.strength+\" {\"+this.weight+\"} (\"+this.expression+\")\"}});var b=a.AbstractConstraint.prototype.toString,c=function(b,c,d){a.AbstractConstraint.call(this,c||a.Strength.strong,d),this.variable=b,this.expression=new a.Expression(b,-1,b.value)};a.EditConstraint=a.inherit({\"extends\":a.AbstractConstraint,initialize:function(){c.apply(this,arguments)},isEditConstraint:!0,toString:function(){return\"edit:\"+b.call(this)}}),a.StayConstraint=a.inherit({\"extends\":a.AbstractConstraint,initialize:function(){c.apply(this,arguments)},isStayConstraint:!0,toString:function(){return\"stay:\"+b.call(this)}});var d=a.Constraint=a.inherit({\"extends\":a.AbstractConstraint,initialize:function(b,c,d){a.AbstractConstraint.call(this,c,d),this.expression=b}});a.Inequality=a.inherit({\"extends\":a.Constraint,_cloneOrNewCle:function(b){return b.clone?b.clone():new a.Expression(b)},initialize:function(b,c,e,f,g){var h=b instanceof a.Expression,i=e instanceof a.Expression,j=b instanceof a.AbstractVariable,k=e instanceof a.AbstractVariable,l=\"number\"==typeof b,m=\"number\"==typeof e;if((h||l)&&k){var n=b,o=c,p=e,q=f,r=g;if(d.call(this,this._cloneOrNewCle(n),q,r),o==a.LEQ)this.expression.multiplyMe(-1),this.expression.addVariable(p);else{if(o!=a.GEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");this.expression.addVariable(p,-1)}}else if(j&&(i||m)){var n=e,o=c,p=b,q=f,r=g;if(d.call(this,this._cloneOrNewCle(n),q,r),o==a.GEQ)this.expression.multiplyMe(-1),this.expression.addVariable(p);else{if(o!=a.LEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");this.expression.addVariable(p,-1)}}else{if(h&&m){var s=b,o=c,t=e,q=f,r=g;if(d.call(this,this._cloneOrNewCle(s),q,r),o==a.LEQ)this.expression.multiplyMe(-1),this.expression.addExpression(this._cloneOrNewCle(t));else{if(o!=a.GEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");this.expression.addExpression(this._cloneOrNewCle(t),-1)}return this}if(l&&i){var s=e,o=c,t=b,q=f,r=g;if(d.call(this,this._cloneOrNewCle(s),q,r),o==a.GEQ)this.expression.multiplyMe(-1),this.expression.addExpression(this._cloneOrNewCle(t));else{if(o!=a.LEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");this.expression.addExpression(this._cloneOrNewCle(t),-1)}return this}if(h&&i){var s=b,o=c,t=e,q=f,r=g;if(d.call(this,this._cloneOrNewCle(t),q,r),o==a.GEQ)this.expression.multiplyMe(-1),this.expression.addExpression(this._cloneOrNewCle(s));else{if(o!=a.LEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");this.expression.addExpression(this._cloneOrNewCle(s),-1)}}else{if(h)return d.call(this,b,c,e);if(c==a.GEQ)d.call(this,new a.Expression(e),f,g),this.expression.multiplyMe(-1),this.expression.addVariable(b);else{if(c!=a.LEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");d.call(this,new a.Expression(e),f,g),this.expression.addVariable(b,-1)}}}},isInequality:!0,toString:function(){return d.prototype.toString.call(this)+\" >= 0) id: \"+this.hashCode}}),a.Equation=a.inherit({\"extends\":a.Constraint,initialize:function(b,c,e,f){if(b instanceof a.Expression&&!c||c instanceof a.Strength)d.call(this,b,c,e);else if(b instanceof a.AbstractVariable&&c instanceof a.Expression){var g=b,h=c,i=e,j=f;d.call(this,h.clone(),i,j),this.expression.addVariable(g,-1)}else if(b instanceof a.AbstractVariable&&\"number\"==typeof c){var g=b,k=c,i=e,j=f;d.call(this,new a.Expression(k),i,j),this.expression.addVariable(g,-1)}else if(b instanceof a.Expression&&c instanceof a.AbstractVariable){var h=b,g=c,i=e,j=f;d.call(this,h.clone(),i,j),this.expression.addVariable(g,-1)}else{if(!(b instanceof a.Expression||b instanceof a.AbstractVariable||\"number\"==typeof b)||!(c instanceof a.Expression||c instanceof a.AbstractVariable||\"number\"==typeof c))throw\"Bad initializer to c.Equation\";b=b instanceof a.Expression?b.clone():new a.Expression(b),c=c instanceof a.Expression?c.clone():new a.Expression(c),d.call(this,b,e,f),this.expression.addExpression(c,-1)}a.assert(this.strength instanceof a.Strength,\"_strength not set\")},toString:function(){return d.prototype.toString.call(this)+\" = 0)\"}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.EditInfo=a.inherit({initialize:function(a,b,c,d,e){this.constraint=a,this.editPlus=b,this.editMinus=c,this.prevEditConstant=d,this.index=e},toString:function(){return\"<cn=\"+this.constraint+\", ep=\"+this.editPlus+\", em=\"+this.editMinus+\", pec=\"+this.prevEditConstant+\", index=\"+this.index+\">\"}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.Tableau=a.inherit({initialize:function(){this.columns=new a.HashTable,this.rows=new a.HashTable,this._infeasibleRows=new a.HashSet,this._externalRows=new a.HashSet,this._externalParametricVars=new a.HashSet},noteRemovedVariable:function(b,c){a.trace&&console.log(\"c.Tableau::noteRemovedVariable: \",b,c);var d=this.columns.get(b);c&&d&&d.delete(c)},noteAddedVariable:function(a,b){b&&this.insertColVar(a,b)},getInternalInfo:function(){var a=\"Tableau Information:\\n\";return a+=\"Rows: \"+this.rows.size,a+=\" (= \"+(this.rows.size-1)+\" constraints)\",a+=\"\\nColumns: \"+this.columns.size,a+=\"\\nInfeasible Rows: \"+this._infeasibleRows.size,a+=\"\\nExternal basic variables: \"+this._externalRows.size,a+=\"\\nExternal parametric variables: \",a+=this._externalParametricVars.size,a+=\"\\n\"},toString:function(){var a=\"Tableau:\\n\";return this.rows.each(function(b,c){a+=b,a+=\" <==> \",a+=c,a+=\"\\n\"}),a+=\"\\nColumns:\\n\",a+=this.columns,a+=\"\\nInfeasible rows: \",a+=this._infeasibleRows,a+=\"External basic variables: \",a+=this._externalRows,a+=\"External parametric variables: \",a+=this._externalParametricVars},insertColVar:function(b,c){var d=this.columns.get(b);d||(d=new a.HashSet,this.columns.set(b,d)),d.add(c)},addRow:function(b,c){a.trace&&a.fnenterprint(\"addRow: \"+b+\", \"+c),this.rows.set(b,c),c.terms.each(function(a){this.insertColVar(a,b),a.isExternal&&this._externalParametricVars.add(a)},this),b.isExternal&&this._externalRows.add(b),a.trace&&a.traceprint(\"\"+this)},removeColumn:function(b){a.trace&&a.fnenterprint(\"removeColumn:\"+b);var c=this.columns.get(b);c?(this.columns.delete(b),c.each(function(a){var c=this.rows.get(a);c.terms.delete(b)},this)):a.trace&&console.log(\"Could not find var\",b,\"in columns\"),b.isExternal&&(this._externalRows.delete(b),this._externalParametricVars.delete(b))},removeRow:function(b){a.trace&&a.fnenterprint(\"removeRow:\"+b);var c=this.rows.get(b);return a.assert(null!=c),c.terms.each(function(c){var e=this.columns.get(c);null!=e&&(a.trace&&console.log(\"removing from varset:\",b),e.delete(b))},this),this._infeasibleRows.delete(b),b.isExternal&&this._externalRows.delete(b),this.rows.delete(b),a.trace&&a.fnexitprint(\"returning \"+c),c},substituteOut:function(b,c){a.trace&&a.fnenterprint(\"substituteOut:\"+b+\", \"+c),a.trace&&a.traceprint(\"\"+this);var d=this.columns.get(b);d.each(function(a){var d=this.rows.get(a);d.substituteOut(b,c,a,this),a.isRestricted&&0>d.constant&&this._infeasibleRows.add(a)},this),b.isExternal&&(this._externalRows.add(b),this._externalParametricVars.delete(b)),this.columns.delete(b)},columnsHasKey:function(a){return!!this.columns.get(a)}})}(this.c||module.parent.exports||{}),function(a){var b=a.Tableau,c=b.prototype,d=1e-8,e=a.Strength.weak;a.SimplexSolver=a.inherit({\"extends\":a.Tableau,initialize:function(){a.Tableau.call(this),this._stayMinusErrorVars=[],this._stayPlusErrorVars=[],this._errorVars=new a.HashTable,this._markerVars=new a.HashTable,this._objective=new a.ObjectiveVariable({name:\"Z\"}),this._editVarMap=new a.HashTable,this._editVarList=[],this._slackCounter=0,this._artificialCounter=0,this._dummyCounter=0,this.autoSolve=!0,this._fNeedsSolving=!1,this._optimizeCount=0,this.rows.set(this._objective,new a.Expression),this._stkCedcns=[0],a.trace&&a.traceprint(\"objective expr == \"+this.rows.get(this._objective))},addLowerBound:function(b,c){var d=new a.Inequality(b,a.GEQ,new a.Expression(c));return this.addConstraint(d)},addUpperBound:function(b,c){var d=new a.Inequality(b,a.LEQ,new a.Expression(c));return this.addConstraint(d)},addBounds:function(a,b,c){return this.addLowerBound(a,b),this.addUpperBound(a,c),this},add:function(){for(var a=0;arguments.length>a;a++)this.addConstraint(arguments[a]);return this},addConstraint:function(b){a.trace&&a.fnenterprint(\"addConstraint: \"+b);var c=Array(2),d=Array(1),e=this.newExpression(b,c,d);if(d=d[0],this.tryAddingDirectly(e)||this.addWithArtificialVariable(e),this._fNeedsSolving=!0,b.isEditConstraint){var f=this._editVarMap.size,g=c[0],h=c[1];!g instanceof a.SlackVariable&&console.warn(\"cvEplus not a slack variable =\",g),!h instanceof a.SlackVariable&&console.warn(\"cvEminus not a slack variable =\",h),a.debug&&console.log(\"new c.EditInfo(\"+b+\", \"+g+\", \"+h+\", \"+d+\", \"+f+\")\");var i=new a.EditInfo(b,g,h,d,f);this._editVarMap.set(b.variable,i),this._editVarList[f]={v:b.variable,info:i}}return this.autoSolve&&(this.optimize(this._objective),this._setExternalVariables()),this},addConstraintNoException:function(b){a.trace&&a.fnenterprint(\"addConstraintNoException: \"+b);try{return this.addConstraint(b),!0}catch(c){return!1}},addEditVar:function(b,c){return a.trace&&a.fnenterprint(\"addEditVar: \"+b+\" @ \"+c),this.addConstraint(new a.EditConstraint(b,c||a.Strength.strong))},beginEdit:function(){return a.assert(this._editVarMap.size>0,\"_editVarMap.size > 0\"),this._infeasibleRows.clear(),this._resetStayConstants(),this._stkCedcns.push(this._editVarMap.size),this},endEdit:function(){return a.assert(this._editVarMap.size>0,\"_editVarMap.size > 0\"),this.resolve(),this._stkCedcns.pop(),this.removeEditVarsTo(this._stkCedcns[this._stkCedcns.length-1]),this},removeAllEditVars:function(){return this.removeEditVarsTo(0)},removeEditVarsTo:function(b){try{for(var c=this._editVarList.length,d=b;c>d;d++)this._editVarList[d]&&this.removeConstraint(this._editVarMap.get(this._editVarList[d].v).constraint);return this._editVarList.length=b,a.assert(this._editVarMap.size==b,\"_editVarMap.size == n\"),this}catch(e){throw new a.InternalError(\"Constraint not found in removeEditVarsTo\")}},addPointStays:function(b){return a.trace&&console.log(\"addPointStays\",b),b.forEach(function(a,b){this.addStay(a.x,e,Math.pow(2,b)),this.addStay(a.y,e,Math.pow(2,b))},this),this},addStay:function(b,c,d){var f=new a.StayConstraint(b,c||e,d||1);return this.addConstraint(f)},removeConstraint:function(a){return this.removeConstraintInternal(a),this},removeConstraintInternal:function(b){a.trace&&a.fnenterprint(\"removeConstraintInternal: \"+b),a.trace&&a.traceprint(\"\"+this),this._fNeedsSolving=!0,this._resetStayConstants();var c=this.rows.get(this._objective),d=this._errorVars.get(b);a.trace&&a.traceprint(\"eVars == \"+d),null!=d&&d.each(function(e){var f=this.rows.get(e);null==f?c.addVariable(e,-b.weight*b.strength.symbolicWeight.value,this._objective,this):c.addExpression(f,-b.weight*b.strength.symbolicWeight.value,this._objective,this),a.trace&&a.traceprint(\"now eVars == \"+d)},this);var e=this._markerVars.get(b);if(this._markerVars.delete(b),null==e)throw new a.InternalError(\"Constraint not found in removeConstraintInternal\");if(a.trace&&a.traceprint(\"Looking to remove var \"+e),null==this.rows.get(e)){var f=this.columns.get(e);a.trace&&a.traceprint(\"Must pivot -- columns are \"+f);var g=null,h=0;f.each(function(b){if(b.isRestricted){var c=this.rows.get(b),d=c.coefficientFor(e);if(a.trace&&a.traceprint(\"Marker \"+e+\"'s coefficient in \"+c+\" is \"+d),0>d){var f=-c.constant/d;(null==g||h>f||a.approx(f,h)&&b.hashCode<g.hashCode)&&(h=f,g=b)}}},this),null==g&&(a.trace&&a.traceprint(\"exitVar is still null\"),f.each(function(a){if(a.isRestricted){var b=this.rows.get(a),c=b.coefficientFor(e),d=b.constant/c;(null==g||h>d)&&(h=d,g=a)}},this)),null==g&&(0==f.size?this.removeColumn(e):f.escapingEach(function(a){return a!=this._objective?(g=a,{brk:!0}):void 0},this)),null!=g&&this.pivot(e,g)}if(null!=this.rows.get(e)&&this.removeRow(e),null!=d&&d.each(function(a){a!=e&&this.removeColumn(a)},this),b.isStayConstraint){if(null!=d)for(var j=0;this._stayPlusErrorVars.length>j;j++)d.delete(this._stayPlusErrorVars[j]),d.delete(this._stayMinusErrorVars[j])}else if(b.isEditConstraint){a.assert(null!=d,\"eVars != null\");var k=this._editVarMap.get(b.variable);this.removeColumn(k.editMinus),this._editVarMap.delete(b.variable)}return null!=d&&this._errorVars.delete(d),this.autoSolve&&(this.optimize(this._objective),this._setExternalVariables()),this},reset:function(){throw a.trace&&a.fnenterprint(\"reset\"),new a.InternalError(\"reset not implemented\")},resolveArray:function(b){a.trace&&a.fnenterprint(\"resolveArray\"+b);var c=b.length;this._editVarMap.each(function(a,d){var e=d.index;c>e&&this.suggestValue(a,b[e])},this),this.resolve()},resolvePair:function(a,b){this.suggestValue(this._editVarList[0].v,a),this.suggestValue(this._editVarList[1].v,b),this.resolve()},resolve:function(){a.trace&&a.fnenterprint(\"resolve()\"),this.dualOptimize(),this._setExternalVariables(),this._infeasibleRows.clear(),this._resetStayConstants()},suggestValue:function(b,c){a.trace&&console.log(\"suggestValue(\"+b+\", \"+c+\")\");var d=this._editVarMap.get(b);if(!d)throw new a.Error(\"suggestValue for variable \"+b+\", but var is not an edit variable\");var e=c-d.prevEditConstant;return d.prevEditConstant=c,this.deltaEditConstant(e,d.editPlus,d.editMinus),this},solve:function(){return this._fNeedsSolving&&(this.optimize(this._objective),this._setExternalVariables()),this},setEditedValue:function(b,c){if(!this.columnsHasKey(b)&&null==this.rows.get(b))return b.value=c,this;if(!a.approx(c,b.value)){this.addEditVar(b),this.beginEdit();try{this.suggestValue(b,c)}catch(d){throw new a.InternalError(\"Error in setEditedValue\")}this.endEdit()}return this},addVar:function(b){if(!this.columnsHasKey(b)&&null==this.rows.get(b)){try{this.addStay(b)}catch(c){throw new a.InternalError(\"Error in addVar -- required failure is impossible\")}a.trace&&a.traceprint(\"added initial stay on \"+b)}return this},getInternalInfo:function(){var a=c.getInternalInfo.call(this);return a+=\"\\nSolver info:\\n\",a+=\"Stay Error Variables: \",a+=this._stayPlusErrorVars.length+this._stayMinusErrorVars.length,a+=\" (\"+this._stayPlusErrorVars.length+\" +, \",a+=this._stayMinusErrorVars.length+\" -)\\n\",a+=\"Edit Variables: \"+this._editVarMap.size,a+=\"\\n\"},getDebugInfo:function(){return\"\"+this+this.getInternalInfo()+\"\\n\"},toString:function(){var a=c.getInternalInfo.call(this);return a+=\"\\n_stayPlusErrorVars: \",a+=\"[\"+this._stayPlusErrorVars+\"]\",a+=\"\\n_stayMinusErrorVars: \",a+=\"[\"+this._stayMinusErrorVars+\"]\",a+=\"\\n\",a+=\"_editVarMap:\\n\"+this._editVarMap,a+=\"\\n\"},getConstraintMap:function(){return this._markerVars},addWithArtificialVariable:function(b){a.trace&&a.fnenterprint(\"addWithArtificialVariable: \"+b);var c=new a.SlackVariable({value:++this._artificialCounter,prefix:\"a\"}),d=new a.ObjectiveVariable({name:\"az\"}),e=b.clone();a.trace&&a.traceprint(\"before addRows:\\n\"+this),this.addRow(d,e),this.addRow(c,b),a.trace&&a.traceprint(\"after addRows:\\n\"+this),this.optimize(d);var f=this.rows.get(d);if(a.trace&&a.traceprint(\"azTableauRow.constant == \"+f.constant),!a.approx(f.constant,0))throw this.removeRow(d),this.removeColumn(c),new a.RequiredFailure;var g=this.rows.get(c);if(null!=g){if(g.isConstant)return this.removeRow(c),this.removeRow(d),void 0;var h=g.anyPivotableVariable();this.pivot(h,c)}a.assert(null==this.rows.get(c),\"rowExpression(av) == null\"),this.removeColumn(c),this.removeRow(d)},tryAddingDirectly:function(b){a.trace&&a.fnenterprint(\"tryAddingDirectly: \"+b);var c=this.chooseSubject(b);return null==c?(a.trace&&a.fnexitprint(\"returning false\"),!1):(b.newSubject(c),this.columnsHasKey(c)&&this.substituteOut(c,b),this.addRow(c,b),a.trace&&a.fnexitprint(\"returning true\"),!0)},chooseSubject:function(b){a.trace&&a.fnenterprint(\"chooseSubject: \"+b);var c=null,d=!1,e=!1,f=b.terms,g=f.escapingEach(function(a,b){if(d){if(!a.isRestricted&&!this.columnsHasKey(a))return{retval:a}}else if(a.isRestricted){if(!e&&!a.isDummy&&0>b){var f=this.columns.get(a);(null==f||1==f.size&&this.columnsHasKey(this._objective))&&(c=a,e=!0)}}else c=a,d=!0},this);if(g&&void 0!==g.retval)return g.retval;if(null!=c)return c;var h=0,g=f.escapingEach(function(a,b){return a.isDummy?(this.columnsHasKey(a)||(c=a,h=b),void 0):{retval:null}},this);if(g&&void 0!==g.retval)return g.retval;if(!a.approx(b.constant,0))throw new a.RequiredFailure;return h>0&&b.multiplyMe(-1),c},deltaEditConstant:function(b,c,d){a.trace&&a.fnenterprint(\"deltaEditConstant :\"+b+\", \"+c+\", \"+d);var e=this.rows.get(c);if(null!=e)return e.constant+=b,0>e.constant&&this._infeasibleRows.add(c),void 0;var f=this.rows.get(d);if(null!=f)return f.constant+=-b,0>f.constant&&this._infeasibleRows.add(d),void 0;var g=this.columns.get(d);g||console.log(\"columnVars is null -- tableau is:\\n\"+this),g.each(function(a){var c=this.rows.get(a),e=c.coefficientFor(d);c.constant+=e*b,a.isRestricted&&0>c.constant&&this._infeasibleRows.add(a)},this)},dualOptimize:function(){a.trace&&a.fnenterprint(\"dualOptimize:\");for(var b=this.rows.get(this._objective);this._infeasibleRows.size;){var c=this._infeasibleRows.values()[0];this._infeasibleRows.delete(c);var d=null,e=this.rows.get(c);if(e&&0>e.constant){var g,f=Number.MAX_VALUE,h=e.terms;if(h.each(function(c,e){if(e>0&&c.isPivotable){var h=b.coefficientFor(c);g=h/e,(f>g||a.approx(g,f)&&c.hashCode<d.hashCode)&&(d=c,f=g)}}),f==Number.MAX_VALUE)throw new a.InternalError(\"ratio == nil (MAX_VALUE) in dualOptimize\");this.pivot(d,c)}}},newExpression:function(b,c,d){a.trace&&(a.fnenterprint(\"newExpression: \"+b),a.traceprint(\"cn.isInequality == \"+b.isInequality),a.traceprint(\"cn.required == \"+b.required));var e=b.expression,f=new a.Expression(e.constant),g=new a.SlackVariable,h=new a.DummyVariable,i=new a.SlackVariable,j=new a.SlackVariable,k=e.terms;if(k.each(function(a,b){var c=this.rows.get(a);c?f.addExpression(c,b):f.addVariable(a,b)},this),b.isInequality){if(a.trace&&a.traceprint(\"Inequality, adding slack\"),++this._slackCounter,g=new a.SlackVariable({value:this._slackCounter,prefix:\"s\"}),f.setVariable(g,-1),this._markerVars.set(b,g),!b.required){++this._slackCounter,i=new a.SlackVariable({value:this._slackCounter,prefix:\"em\"}),f.setVariable(i,1);\n\tvar l=this.rows.get(this._objective);l.setVariable(i,b.strength.symbolicWeight.value*b.weight),this.insertErrorVar(b,i),this.noteAddedVariable(i,this._objective)}}else if(b.required)a.trace&&a.traceprint(\"Equality, required\"),++this._dummyCounter,h=new a.DummyVariable({value:this._dummyCounter,prefix:\"d\"}),f.setVariable(h,1),this._markerVars.set(b,h),a.trace&&a.traceprint(\"Adding dummyVar == d\"+this._dummyCounter);else{a.trace&&a.traceprint(\"Equality, not required\"),++this._slackCounter,j=new a.SlackVariable({value:this._slackCounter,prefix:\"ep\"}),i=new a.SlackVariable({value:this._slackCounter,prefix:\"em\"}),f.setVariable(j,-1),f.setVariable(i,1),this._markerVars.set(b,j);var l=this.rows.get(this._objective);a.trace&&console.log(l);var m=b.strength.symbolicWeight.value*b.weight;0==m&&(a.trace&&a.traceprint(\"cn == \"+b),a.trace&&a.traceprint(\"adding \"+j+\" and \"+i+\" with swCoeff == \"+m)),l.setVariable(j,m),this.noteAddedVariable(j,this._objective),l.setVariable(i,m),this.noteAddedVariable(i,this._objective),this.insertErrorVar(b,i),this.insertErrorVar(b,j),b.isStayConstraint?(this._stayPlusErrorVars.push(j),this._stayMinusErrorVars.push(i)):b.isEditConstraint&&(c[0]=j,c[1]=i,d[0]=e.constant)}return 0>f.constant&&f.multiplyMe(-1),a.trace&&a.fnexitprint(\"returning \"+f),f},optimize:function(b){a.trace&&a.fnenterprint(\"optimize: \"+b),a.trace&&a.traceprint(\"\"+this),this._optimizeCount++;var c=this.rows.get(b);a.assert(null!=c,\"zRow != null\");for(var g,h,e=null,f=null;;){if(g=0,h=c.terms,h.escapingEach(function(a,b){return a.isPivotable&&g>b?(g=b,e=a,{brk:1}):void 0},this),g>=-d)return;a.trace&&console.log(\"entryVar:\",e,\"objectiveCoeff:\",g);var i=Number.MAX_VALUE,j=this.columns.get(e),k=0;if(j.each(function(b){if(a.trace&&a.traceprint(\"Checking \"+b),b.isPivotable){var c=this.rows.get(b),d=c.coefficientFor(e);a.trace&&a.traceprint(\"pivotable, coeff = \"+d),0>d&&(k=-c.constant/d,(i>k||a.approx(k,i)&&b.hashCode<f.hashCode)&&(i=k,f=b))}},this),i==Number.MAX_VALUE)throw new a.InternalError(\"Objective function is unbounded in optimize\");this.pivot(e,f),a.trace&&a.traceprint(\"\"+this)}},pivot:function(b,c){a.trace&&console.log(\"pivot: \",b,c);var d=!1;d&&console.time(\" SimplexSolver::pivot\"),null==b&&console.warn(\"pivot: entryVar == null\"),null==c&&console.warn(\"pivot: exitVar == null\"),d&&console.time(\"  removeRow\");var e=this.removeRow(c);d&&console.timeEnd(\"  removeRow\"),d&&console.time(\"  changeSubject\"),e.changeSubject(c,b),d&&console.timeEnd(\"  changeSubject\"),d&&console.time(\"  substituteOut\"),this.substituteOut(b,e),d&&console.timeEnd(\"  substituteOut\"),d&&console.time(\"  addRow\"),this.addRow(b,e),d&&console.timeEnd(\"  addRow\"),d&&console.timeEnd(\" SimplexSolver::pivot\")},_resetStayConstants:function(){a.trace&&console.log(\"_resetStayConstants\");for(var b=0;this._stayPlusErrorVars.length>b;b++){var c=this.rows.get(this._stayPlusErrorVars[b]);null==c&&(c=this.rows.get(this._stayMinusErrorVars[b])),null!=c&&(c.constant=0)}},_setExternalVariables:function(){a.trace&&a.fnenterprint(\"_setExternalVariables:\"),a.trace&&a.traceprint(\"\"+this),this._externalParametricVars.each(function(b){null!=this.rows.get(b)?a.trace&&console.log(\"Error: variable\"+b+\" in _externalParametricVars is basic\"):b.value=0},this),this._externalRows.each(function(a){var b=this.rows.get(a);a.value!=b.constant&&(a.value=b.constant)},this),this._fNeedsSolving=!1,this.onsolved()},onsolved:function(){},insertErrorVar:function(b,c){a.trace&&a.fnenterprint(\"insertErrorVar:\"+b+\", \"+c);var d=this._errorVars.get(c);d||(d=new a.HashSet,this._errorVars.set(b,d)),d.add(c)}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.Timer=a.inherit({initialize:function(){this.isRunning=!1,this._elapsedMs=0},start:function(){return this.isRunning=!0,this._startReading=new Date,this},stop:function(){return this.isRunning=!1,this._elapsedMs+=new Date-this._startReading,this},reset:function(){return this.isRunning=!1,this._elapsedMs=0,this},elapsedTime:function(){return this.isRunning?(this._elapsedMs+(new Date-this._startReading))/1e3:this._elapsedMs/1e3}})}(this.c||module.parent.exports||{}),__cassowary_parser=function(){function a(a){return'\"'+a.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"').replace(/\\x08/g,\"\\\\b\").replace(/\\t/g,\"\\\\t\").replace(/\\n/g,\"\\\\n\").replace(/\\f/g,\"\\\\f\").replace(/\\r/g,\"\\\\r\").replace(/[\\x00-\\x07\\x0B\\x0E-\\x1F\\x80-\\uFFFF]/g,escape)+'\"'}var b={parse:function(b,c){function k(a){g>e||(e>g&&(g=e,h=[]),h.push(a))}function l(){var a,b,c,d,f;if(d=e,f=e,a=z(),null!==a){if(c=m(),null!==c)for(b=[];null!==c;)b.push(c),c=m();else b=null;null!==b?(c=z(),null!==c?a=[a,b,c]:(a=null,e=f)):(a=null,e=f)}else a=null,e=f;return null!==a&&(a=function(a,b){return b}(d,a[1])),null===a&&(e=d),a}function m(){var a,b,c,d;return c=e,d=e,a=P(),null!==a?(b=s(),null!==b?a=[a,b]:(a=null,e=d)):(a=null,e=d),null!==a&&(a=function(a,b){return b}(c,a[0])),null===a&&(e=c),a}function n(){var a;return b.length>e?(a=b.charAt(e),e++):(a=null,0===f&&k(\"any character\")),a}function o(){var a;return/^[a-zA-Z]/.test(b.charAt(e))?(a=b.charAt(e),e++):(a=null,0===f&&k(\"[a-zA-Z]\")),null===a&&(36===b.charCodeAt(e)?(a=\"$\",e++):(a=null,0===f&&k('\"$\"')),null===a&&(95===b.charCodeAt(e)?(a=\"_\",e++):(a=null,0===f&&k('\"_\"')))),a}function p(){var a;return f++,/^[\\t\\x0B\\f \\xA0\\uFEFF]/.test(b.charAt(e))?(a=b.charAt(e),e++):(a=null,0===f&&k(\"[\\\\t\\\\x0B\\\\f \\\\xA0\\\\uFEFF]\")),f--,0===f&&null===a&&k(\"whitespace\"),a}function q(){var a;return/^[\\n\\r\\u2028\\u2029]/.test(b.charAt(e))?(a=b.charAt(e),e++):(a=null,0===f&&k(\"[\\\\n\\\\r\\\\u2028\\\\u2029]\")),a}function r(){var a;return f++,10===b.charCodeAt(e)?(a=\"\\n\",e++):(a=null,0===f&&k('\"\\\\n\"')),null===a&&(\"\\r\\n\"===b.substr(e,2)?(a=\"\\r\\n\",e+=2):(a=null,0===f&&k('\"\\\\r\\\\n\"')),null===a&&(13===b.charCodeAt(e)?(a=\"\\r\",e++):(a=null,0===f&&k('\"\\\\r\"')),null===a&&(8232===b.charCodeAt(e)?(a=\"\\u2028\",e++):(a=null,0===f&&k('\"\\\\u2028\"')),null===a&&(8233===b.charCodeAt(e)?(a=\"\\u2029\",e++):(a=null,0===f&&k('\"\\\\u2029\"')))))),f--,0===f&&null===a&&k(\"end of line\"),a}function s(){var a,c,d;return d=e,a=z(),null!==a?(59===b.charCodeAt(e)?(c=\";\",e++):(c=null,0===f&&k('\";\"')),null!==c?a=[a,c]:(a=null,e=d)):(a=null,e=d),null===a&&(d=e,a=y(),null!==a?(c=r(),null!==c?a=[a,c]:(a=null,e=d)):(a=null,e=d),null===a&&(d=e,a=z(),null!==a?(c=t(),null!==c?a=[a,c]:(a=null,e=d)):(a=null,e=d))),a}function t(){var a,c;return c=e,f++,b.length>e?(a=b.charAt(e),e++):(a=null,0===f&&k(\"any character\")),f--,null===a?a=\"\":(a=null,e=c),a}function u(){var a;return f++,a=v(),null===a&&(a=x()),f--,0===f&&null===a&&k(\"comment\"),a}function v(){var a,c,d,g,h,i,j;if(h=e,\"/*\"===b.substr(e,2)?(a=\"/*\",e+=2):(a=null,0===f&&k('\"/*\"')),null!==a){for(c=[],i=e,j=e,f++,\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==d;)c.push(d),i=e,j=e,f++,\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==c?(\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),null!==d?a=[a,c,d]:(a=null,e=h)):(a=null,e=h)}else a=null,e=h;return a}function w(){var a,c,d,g,h,i,j;if(h=e,\"/*\"===b.substr(e,2)?(a=\"/*\",e+=2):(a=null,0===f&&k('\"/*\"')),null!==a){for(c=[],i=e,j=e,f++,\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),null===d&&(d=q()),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==d;)c.push(d),i=e,j=e,f++,\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),null===d&&(d=q()),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==c?(\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),null!==d?a=[a,c,d]:(a=null,e=h)):(a=null,e=h)}else a=null,e=h;return a}function x(){var a,c,d,g,h,i,j;if(h=e,\"//\"===b.substr(e,2)?(a=\"//\",e+=2):(a=null,0===f&&k('\"//\"')),null!==a){for(c=[],i=e,j=e,f++,d=q(),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==d;)c.push(d),i=e,j=e,f++,d=q(),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==c?a=[a,c]:(a=null,e=h)}else a=null,e=h;return a}function y(){var a,b;for(a=[],b=p(),null===b&&(b=w(),null===b&&(b=x()));null!==b;)a.push(b),b=p(),null===b&&(b=w(),null===b&&(b=x()));return a}function z(){var a,b;for(a=[],b=p(),null===b&&(b=r(),null===b&&(b=u()));null!==b;)a.push(b),b=p(),null===b&&(b=r(),null===b&&(b=u()));return a}function A(){var a,b;return b=e,a=C(),null===a&&(a=B()),null!==a&&(a=function(a,b){return{type:\"NumericLiteral\",value:b}}(b,a)),null===a&&(e=b),a}function B(){var a,c,d;if(d=e,/^[0-9]/.test(b.charAt(e))?(c=b.charAt(e),e++):(c=null,0===f&&k(\"[0-9]\")),null!==c)for(a=[];null!==c;)a.push(c),/^[0-9]/.test(b.charAt(e))?(c=b.charAt(e),e++):(c=null,0===f&&k(\"[0-9]\"));else a=null;return null!==a&&(a=function(a,b){return parseInt(b.join(\"\"))}(d,a)),null===a&&(e=d),a}function C(){var a,c,d,g,h;return g=e,h=e,a=B(),null!==a?(46===b.charCodeAt(e)?(c=\".\",e++):(c=null,0===f&&k('\".\"')),null!==c?(d=B(),null!==d?a=[a,c,d]:(a=null,e=h)):(a=null,e=h)):(a=null,e=h),null!==a&&(a=function(a,b){return parseFloat(b.join(\"\"))}(g,a)),null===a&&(e=g),a}function D(){var a,c,d,g;if(g=e,/^[\\-+]/.test(b.charAt(e))?(a=b.charAt(e),e++):(a=null,0===f&&k(\"[\\\\-+]\")),a=null!==a?a:\"\",null!==a){if(/^[0-9]/.test(b.charAt(e))?(d=b.charAt(e),e++):(d=null,0===f&&k(\"[0-9]\")),null!==d)for(c=[];null!==d;)c.push(d),/^[0-9]/.test(b.charAt(e))?(d=b.charAt(e),e++):(d=null,0===f&&k(\"[0-9]\"));else c=null;null!==c?a=[a,c]:(a=null,e=g)}else a=null,e=g;return a}function E(){var a,b;return f++,b=e,a=F(),null!==a&&(a=function(a,b){return b}(b,a)),null===a&&(e=b),f--,0===f&&null===a&&k(\"identifier\"),a}function F(){var a,b,c,d,g;if(f++,d=e,g=e,a=o(),null!==a){for(b=[],c=o();null!==c;)b.push(c),c=o();null!==b?a=[a,b]:(a=null,e=g)}else a=null,e=g;return null!==a&&(a=function(a,b,c){return b+c.join(\"\")}(d,a[0],a[1])),null===a&&(e=d),f--,0===f&&null===a&&k(\"identifier\"),a}function G(){var a,c,d,g,h,i,j;return i=e,a=E(),null!==a&&(a=function(a,b){return{type:\"Variable\",name:b}}(i,a)),null===a&&(e=i),null===a&&(a=A(),null===a&&(i=e,j=e,40===b.charCodeAt(e)?(a=\"(\",e++):(a=null,0===f&&k('\"(\"')),null!==a?(c=z(),null!==c?(d=P(),null!==d?(g=z(),null!==g?(41===b.charCodeAt(e)?(h=\")\",e++):(h=null,0===f&&k('\")\"')),null!==h?a=[a,c,d,g,h]:(a=null,e=j)):(a=null,e=j)):(a=null,e=j)):(a=null,e=j)):(a=null,e=j),null!==a&&(a=function(a,b){return b}(i,a[2])),null===a&&(e=i))),a}function H(){var a,b,c,d,f;return a=G(),null===a&&(d=e,f=e,a=I(),null!==a?(b=z(),null!==b?(c=H(),null!==c?a=[a,b,c]:(a=null,e=f)):(a=null,e=f)):(a=null,e=f),null!==a&&(a=function(a,b,c){return{type:\"UnaryExpression\",operator:b,expression:c}}(d,a[0],a[2])),null===a&&(e=d)),a}function I(){var a;return 43===b.charCodeAt(e)?(a=\"+\",e++):(a=null,0===f&&k('\"+\"')),null===a&&(45===b.charCodeAt(e)?(a=\"-\",e++):(a=null,0===f&&k('\"-\"')),null===a&&(33===b.charCodeAt(e)?(a=\"!\",e++):(a=null,0===f&&k('\"!\"')))),a}function J(){var a,b,c,d,f,g,h,i,j;if(h=e,i=e,a=H(),null!==a){for(b=[],j=e,c=z(),null!==c?(d=K(),null!==d?(f=z(),null!==f?(g=H(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==c;)b.push(c),j=e,c=z(),null!==c?(d=K(),null!==d?(f=z(),null!==f?(g=H(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==b?a=[a,b]:(a=null,e=i)}else a=null,e=i;return null!==a&&(a=function(a,b,c){for(var d=b,e=0;c.length>e;e++)d={type:\"MultiplicativeExpression\",operator:c[e][1],left:d,right:c[e][3]};return d}(h,a[0],a[1])),null===a&&(e=h),a}function K(){var a;return 42===b.charCodeAt(e)?(a=\"*\",e++):(a=null,0===f&&k('\"*\"')),null===a&&(47===b.charCodeAt(e)?(a=\"/\",e++):(a=null,0===f&&k('\"/\"'))),a}function L(){var a,b,c,d,f,g,h,i,j;if(h=e,i=e,a=J(),null!==a){for(b=[],j=e,c=z(),null!==c?(d=M(),null!==d?(f=z(),null!==f?(g=J(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==c;)b.push(c),j=e,c=z(),null!==c?(d=M(),null!==d?(f=z(),null!==f?(g=J(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==b?a=[a,b]:(a=null,e=i)}else a=null,e=i;return null!==a&&(a=function(a,b,c){for(var d=b,e=0;c.length>e;e++)d={type:\"AdditiveExpression\",operator:c[e][1],left:d,right:c[e][3]};return d}(h,a[0],a[1])),null===a&&(e=h),a}function M(){var a;return 43===b.charCodeAt(e)?(a=\"+\",e++):(a=null,0===f&&k('\"+\"')),null===a&&(45===b.charCodeAt(e)?(a=\"-\",e++):(a=null,0===f&&k('\"-\"'))),a}function N(){var a,b,c,d,f,g,h,i,j;if(h=e,i=e,a=L(),null!==a){for(b=[],j=e,c=z(),null!==c?(d=O(),null!==d?(f=z(),null!==f?(g=L(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==c;)b.push(c),j=e,c=z(),null!==c?(d=O(),null!==d?(f=z(),null!==f?(g=L(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==b?a=[a,b]:(a=null,e=i)}else a=null,e=i;return null!==a&&(a=function(a,b,c){for(var d=b,e=0;c.length>e;e++)d={type:\"Inequality\",operator:c[e][1],left:d,right:c[e][3]};return d}(h,a[0],a[1])),null===a&&(e=h),a}function O(){var a;return\"<=\"===b.substr(e,2)?(a=\"<=\",e+=2):(a=null,0===f&&k('\"<=\"')),null===a&&(\">=\"===b.substr(e,2)?(a=\">=\",e+=2):(a=null,0===f&&k('\">=\"')),null===a&&(60===b.charCodeAt(e)?(a=\"<\",e++):(a=null,0===f&&k('\"<\"')),null===a&&(62===b.charCodeAt(e)?(a=\">\",e++):(a=null,0===f&&k('\">\"'))))),a}function P(){var a,c,d,g,h,i,j,l,m;if(j=e,l=e,a=N(),null!==a){for(c=[],m=e,d=z(),null!==d?(\"==\"===b.substr(e,2)?(g=\"==\",e+=2):(g=null,0===f&&k('\"==\"')),null!==g?(h=z(),null!==h?(i=N(),null!==i?d=[d,g,h,i]:(d=null,e=m)):(d=null,e=m)):(d=null,e=m)):(d=null,e=m);null!==d;)c.push(d),m=e,d=z(),null!==d?(\"==\"===b.substr(e,2)?(g=\"==\",e+=2):(g=null,0===f&&k('\"==\"')),null!==g?(h=z(),null!==h?(i=N(),null!==i?d=[d,g,h,i]:(d=null,e=m)):(d=null,e=m)):(d=null,e=m)):(d=null,e=m);null!==c?a=[a,c]:(a=null,e=l)}else a=null,e=l;return null!==a&&(a=function(a,b,c){for(var d=b,e=0;c.length>e;e++)d={type:\"Equality\",operator:c[e][1],left:d,right:c[e][3]};return d}(j,a[0],a[1])),null===a&&(e=j),a}function Q(a){a.sort();for(var b=null,c=[],d=0;a.length>d;d++)a[d]!==b&&(c.push(a[d]),b=a[d]);return c}function R(){for(var a=1,c=1,d=!1,f=0;Math.max(e,g)>f;f++){var h=b.charAt(f);\"\\n\"===h?(d||a++,c=1,d=!1):\"\\r\"===h||\"\\u2028\"===h||\"\\u2029\"===h?(a++,c=1,d=!0):(c++,d=!1)}return{line:a,column:c}}var d={start:l,Statement:m,SourceCharacter:n,IdentifierStart:o,WhiteSpace:p,LineTerminator:q,LineTerminatorSequence:r,EOS:s,EOF:t,Comment:u,MultiLineComment:v,MultiLineCommentNoLineTerminator:w,SingleLineComment:x,_:y,__:z,Literal:A,Integer:B,Real:C,SignedInteger:D,Identifier:E,IdentifierName:F,PrimaryExpression:G,UnaryExpression:H,UnaryOperator:I,MultiplicativeExpression:J,MultiplicativeOperator:K,AdditiveExpression:L,AdditiveOperator:M,InequalityExpression:N,InequalityOperator:O,LinearExpression:P};if(void 0!==c){if(void 0===d[c])throw Error(\"Invalid rule name: \"+a(c)+\".\")}else c=\"start\";var e=0,f=0,g=0,h=[],S=d[c]();if(null===S||e!==b.length){var T=Math.max(e,g),U=b.length>T?b.charAt(T):null,V=R();throw new this.SyntaxError(Q(h),U,T,V.line,V.column)}return S},toSource:function(){return this._source}};return b.SyntaxError=function(b,c,d,e,f){function g(b,c){var d,e;switch(b.length){case 0:d=\"end of input\";break;case 1:d=b[0];break;default:d=b.slice(0,b.length-1).join(\", \")+\" or \"+b[b.length-1]}return e=c?a(c):\"end of input\",\"Expected \"+d+\" but \"+e+\" found.\"}this.name=\"SyntaxError\",this.expected=b,this.found=c,this.message=g(b,c),this.offset=d,this.line=e,this.column=f},b.SyntaxError.prototype=Error.prototype,b}();\n\t}).call(\n\t  ( true) ?\n\t      (module.compiled = true && module) : this\n\t);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)(module)))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _cassowary = __webpack_require__(8);\n\t\n\tvar _cassowary2 = _interopRequireDefault(_cassowary);\n\t\n\tvar _Attribute = __webpack_require__(1);\n\t\n\tvar _Attribute2 = _interopRequireDefault(_Attribute);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * A SubView is automatically generated when constraints are added to a View.\n\t *\n\t * @namespace SubView\n\t */\n\t\n\tvar SubView = function () {\n\t    function SubView(options) {\n\t        _classCallCheck(this, SubView);\n\t\n\t        this._name = options.name;\n\t        this._type = options.type;\n\t        this._solver = options.solver;\n\t        this._attr = {};\n\t        if (!options.name) {\n\t            if ('true') {\n\t                this._attr[_Attribute2.default.LEFT] = new _cassowary2.default.Variable();\n\t                this._solver.addConstraint(new _cassowary2.default.StayConstraint(this._attr[_Attribute2.default.LEFT], _cassowary2.default.Strength.required));\n\t                this._attr[_Attribute2.default.TOP] = new _cassowary2.default.Variable();\n\t                this._solver.addConstraint(new _cassowary2.default.StayConstraint(this._attr[_Attribute2.default.TOP], _cassowary2.default.Strength.required));\n\t                this._attr[_Attribute2.default.ZINDEX] = new _cassowary2.default.Variable();\n\t                this._solver.addConstraint(new _cassowary2.default.StayConstraint(this._attr[_Attribute2.default.ZINDEX], _cassowary2.default.Strength.required));\n\t            } else {\n\t                this._attr[_Attribute2.default.LEFT] = new _cassowary2.default.Variable();\n\t                this._solver.addConstraint(new _cassowary2.default.Constraint(this._attr[_Attribute2.default.LEFT], _cassowary2.default.Operator.Eq, 0));\n\t                this._attr[_Attribute2.default.TOP] = new _cassowary2.default.Variable();\n\t                this._solver.addConstraint(new _cassowary2.default.Constraint(this._attr[_Attribute2.default.TOP], _cassowary2.default.Operator.Eq, 0));\n\t                this._attr[_Attribute2.default.ZINDEX] = new _cassowary2.default.Variable();\n\t                this._solver.addConstraint(new _cassowary2.default.Constraint(this._attr[_Attribute2.default.ZINDEX], _cassowary2.default.Operator.Eq, 0));\n\t            }\n\t        }\n\t    }\n\t\n\t    _createClass(SubView, [{\n\t        key: 'toJSON',\n\t        value: function toJSON() {\n\t            return {\n\t                name: this.name,\n\t                left: this.left,\n\t                top: this.top,\n\t                width: this.width,\n\t                height: this.height\n\t            };\n\t        }\n\t    }, {\n\t        key: 'toString',\n\t        value: function toString() {\n\t            JSON.stringify(this.toJSON(), undefined, 2);\n\t        }\n\t\n\t        /**\n\t         * Name of the sub-view.\n\t         * @readonly\n\t         * @type {String}\n\t         */\n\t\n\t    }, {\n\t        key: 'getValue',\n\t\n\t\n\t        /**\n\t         * Gets the value of one of the attributes.\n\t         *\n\t         * @param {String|Attribute} attr Attribute name (e.g. 'right', 'centerY', Attribute.TOP).\n\t         * @return {Number} value or `undefined`\n\t         */\n\t        value: function getValue(attr) {\n\t            return this._attr[attr] ? this._attr[attr].value() : undefined;\n\t        }\n\t\n\t        /**\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_getAttr',\n\t        value: function _getAttr(attr) {\n\t            if (this._attr[attr]) {\n\t                return this._attr[attr];\n\t            }\n\t            this._attr[attr] = 'true' ? new _cassowary2.default.Variable() : new _cassowary2.default.Variable();\n\t            switch (attr) {\n\t                case _Attribute2.default.RIGHT:\n\t                    this._getAttr(_Attribute2.default.LEFT);\n\t                    this._getAttr(_Attribute2.default.WIDTH);\n\t                    if ('true') {\n\t                        this._solver.addConstraint(new _cassowary2.default.Equation(this._attr[attr], _cassowary2.default.plus(this._attr[_Attribute2.default.LEFT], this._attr[_Attribute2.default.WIDTH])));\n\t                    } else {\n\t                        this._solver.addConstraint(new _cassowary2.default.Constraint(this._attr[attr], _cassowary2.default.Operator.Eq, this._attr[_Attribute2.default.LEFT].plus(this._attr[_Attribute2.default.WIDTH])));\n\t                    }\n\t                    break;\n\t                case _Attribute2.default.BOTTOM:\n\t                    this._getAttr(_Attribute2.default.TOP);\n\t                    this._getAttr(_Attribute2.default.HEIGHT);\n\t                    if ('true') {\n\t                        this._solver.addConstraint(new _cassowary2.default.Equation(this._attr[attr], _cassowary2.default.plus(this._attr[_Attribute2.default.TOP], this._attr[_Attribute2.default.HEIGHT])));\n\t                    } else {\n\t                        this._solver.addConstraint(new _cassowary2.default.Constraint(this._attr[attr], _cassowary2.default.Operator.Eq, this._attr[_Attribute2.default.TOP].plus(this._attr[_Attribute2.default.HEIGHT])));\n\t                    }\n\t                    break;\n\t                case _Attribute2.default.CENTERX:\n\t                    this._getAttr(_Attribute2.default.LEFT);\n\t                    this._getAttr(_Attribute2.default.WIDTH);\n\t                    if ('true') {\n\t                        this._solver.addConstraint(new _cassowary2.default.Equation(this._attr[attr], _cassowary2.default.plus(this._attr[_Attribute2.default.LEFT], _cassowary2.default.divide(this._attr[_Attribute2.default.WIDTH], 2))));\n\t                    } else {\n\t                        this._solver.addConstraint(new _cassowary2.default.Constraint(this._attr[attr], _cassowary2.default.Operator.Eq, this._attr[_Attribute2.default.LEFT].plus(this._attr[_Attribute2.default.WIDTH].divide(2))));\n\t                    }\n\t                    break;\n\t                case _Attribute2.default.CENTERY:\n\t                    this._getAttr(_Attribute2.default.TOP);\n\t                    this._getAttr(_Attribute2.default.HEIGHT);\n\t                    if ('true') {\n\t                        this._solver.addConstraint(new _cassowary2.default.Equation(this._attr[attr], _cassowary2.default.plus(this._attr[_Attribute2.default.TOP], _cassowary2.default.divide(this._attr[_Attribute2.default.HEIGHT], 2))));\n\t                    } else {\n\t                        this._solver.addConstraint(new _cassowary2.default.Constraint(this._attr[attr], _cassowary2.default.Operator.Eq, this._attr[_Attribute2.default.TOP].plus(this._attr[_Attribute2.default.HEIGHT].divide(2))));\n\t                    }\n\t                    break;\n\t            }\n\t            if (false) {\n\t                this._solver.updateVariables();\n\t            }\n\t            return this._attr[attr];\n\t        }\n\t\n\t        /**\n\t         * @private\n\t         */\n\t\n\t    }, {\n\t        key: '_getAttrValue',\n\t        value: function _getAttrValue(attr) {\n\t            if ('true') {\n\t                return this._getAttr(attr).value;\n\t            } else {\n\t                return this._getAttr(attr).value();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'name',\n\t        get: function get() {\n\t            return this._name;\n\t        }\n\t\n\t        /**\n\t         * Left value (`Attribute.LEFT`).\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'left',\n\t        get: function get() {\n\t            return this._getAttrValue(_Attribute2.default.LEFT);\n\t        }\n\t\n\t        /**\n\t         * Right value (`Attribute.RIGHT`).\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'right',\n\t        get: function get() {\n\t            return this._getAttrValue(_Attribute2.default.RIGHT);\n\t        }\n\t\n\t        /**\n\t         * Width value (`Attribute.WIDTH`).\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'width',\n\t        get: function get() {\n\t            return this._getAttrValue(_Attribute2.default.WIDTH);\n\t        }\n\t\n\t        /**\n\t         * Height value (`Attribute.HEIGHT`).\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'height',\n\t        get: function get() {\n\t            return this._getAttrValue(_Attribute2.default.HEIGHT);\n\t        }\n\t\n\t        /**\n\t         * Intrinsic width of the sub-view.\n\t         *\n\t         * Use this property to explicitely set the width of the sub-view, e.g.:\n\t         * ```javascript\n\t         * var view = new AutoLayout.View(AutoLayout.VisualFormat.parse('|[child1][child2]|'), {\n\t         *   width: 500\n\t         * });\n\t         * view.subViews.child1.intrinsicWidth = 100;\n\t         * console.log('child2 width: ' + view.subViews.child2.width); // 400\n\t         * ```\n\t         *\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'intrinsicWidth',\n\t        get: function get() {\n\t            return this._intrinsicWidth;\n\t        },\n\t        set: function set(value) {\n\t            if (value !== undefined && value !== this._intrinsicWidth) {\n\t                var attr = this._getAttr(_Attribute2.default.WIDTH);\n\t                if (this._intrinsicWidth === undefined) {\n\t                    if ('true') {\n\t                        this._solver.addEditVar(attr, new _cassowary2.default.Strength('required', this._name ? 998 : 999, 1000, 1000));\n\t                    } else {\n\t                        this._solver.addEditVariable(attr, _cassowary2.default.Strength.create(this._name ? 998 : 999, 1000, 1000));\n\t                    }\n\t                }\n\t                this._intrinsicWidth = value;\n\t                this._solver.suggestValue(attr, value);\n\t                if ('true') {\n\t                    this._solver.resolve();\n\t                } else {\n\t                    this._solver.updateVariables();\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Intrinsic height of the sub-view.\n\t         *\n\t         * See `intrinsicWidth`.\n\t         *\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'intrinsicHeight',\n\t        get: function get() {\n\t            return this._intrinsicHeight;\n\t        },\n\t        set: function set(value) {\n\t            if (value !== undefined && value !== this._intrinsicHeight) {\n\t                var attr = this._getAttr(_Attribute2.default.HEIGHT);\n\t                if (this._intrinsicHeight === undefined) {\n\t                    if ('true') {\n\t                        this._solver.addEditVar(attr, new _cassowary2.default.Strength('required', this._name ? 998 : 999, 1000, 1000));\n\t                    } else {\n\t                        this._solver.addEditVariable(attr, _cassowary2.default.Strength.create(this._name ? 998 : 999, 1000, 1000));\n\t                    }\n\t                }\n\t                this._intrinsicHeight = value;\n\t                this._solver.suggestValue(attr, value);\n\t                if ('true') {\n\t                    this._solver.resolve();\n\t                } else {\n\t                    this._solver.updateVariables();\n\t                }\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Top value (`Attribute.TOP`).\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'top',\n\t        get: function get() {\n\t            return this._getAttrValue(_Attribute2.default.TOP);\n\t        }\n\t\n\t        /**\n\t         * Bottom value (`Attribute.BOTTOM`).\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'bottom',\n\t        get: function get() {\n\t            return this._getAttrValue(_Attribute2.default.BOTTOM);\n\t        }\n\t\n\t        /**\n\t         * Horizontal center (`Attribute.CENTERX`).\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'centerX',\n\t        get: function get() {\n\t            return this._getAttrValue(_Attribute2.default.CENTERX);\n\t        }\n\t\n\t        /**\n\t         * Vertical center (`Attribute.CENTERY`).\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'centerY',\n\t        get: function get() {\n\t            return this._getAttrValue(_Attribute2.default.CENTERY);\n\t        }\n\t\n\t        /**\n\t         * Z-index (`Attribute.ZINDEX`).\n\t         * @readonly\n\t         * @type {Number}\n\t         */\n\t\n\t    }, {\n\t        key: 'zIndex',\n\t        get: function get() {\n\t            return this._getAttrValue(_Attribute2.default.ZINDEX);\n\t        }\n\t\n\t        /**\n\t         * Returns the type of the sub-view.\n\t         * @readonly\n\t         * @type {String}\n\t         */\n\t\n\t    }, {\n\t        key: 'type',\n\t        get: function get() {\n\t            return this._type;\n\t        }\n\t    }]);\n\t\n\t    return SubView;\n\t}();\n\t\n\texports.default = SubView;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** autolayout.cassowaryjs.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap aae7fd529eb99ed245df\n **/","import Attribute from './Attribute';\nimport Relation from './Relation';\nimport Priority from './Priority';\nimport VisualFormat from './VisualFormat';\nimport View from './View';\nimport SubView from './SubView';\n//import DOM from './DOM';\n\n/**\n * AutoLayout.\n *\n * @namespace AutoLayout\n * @property {Attribute} Attribute\n * @property {Relation} Relation\n * @property {Priority} Priority\n * @property {VisualFormat} VisualFormat\n * @property {View} View\n * @property {SubView} SubView\n */\nvar AutoLayout = {\n    Attribute: Attribute,\n    Relation: Relation,\n    Priority: Priority,\n    VisualFormat: VisualFormat,\n    View: View,\n    SubView: SubView\n    //DOM: DOM\n};\n\nexport default AutoLayout;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * Layout attributes.\n * @enum {String}\n */\nvar Attribute = {\n    CONST: 'const',\n    NOTANATTRIBUTE: 'const',\n    VARIABLE: 'var',\n    LEFT: 'left',\n    RIGHT: 'right',\n    TOP: 'top',\n    BOTTOM: 'bottom',\n    WIDTH: 'width',\n    HEIGHT: 'height',\n    CENTERX: 'centerX',\n    CENTERY: 'centerY',\n    /*LEADING: 'leading',\n    TRAILING: 'trailing'*/\n    /** Used by the extended VFL syntax. */\n    ZINDEX: 'zIndex'\n};\nexport default Attribute;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Attribute.js\n **/","/**\n * Relation types.\n * @enum {String}\n */\nvar Relation = {\n    /** Less than or equal */\n    LEQ: 'leq',\n    /** Equal */\n    EQU: 'equ',\n    /** Greater than or equal */\n    GEQ: 'geq'\n};\nexport default Relation;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Relation.js\n **/","/**\n * Layout priorities.\n * @enum {String}\n */\nvar Priority = {\n    REQUIRED: 1000,\n    DEFAULTHIGH: 750,\n    DEFAULTLOW: 250\n    //FITTINGSIZELEVEL: 50,\n};\nexport default Priority;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Priority.js\n **/","import parser from './parser/parser';\nimport parserExt from './parser/parserExt';\nimport Attribute from './Attribute';\nimport Relation from './Relation';\n\nconst Orientation = {\n    HORIZONTAL: 1,\n    VERTICAL: 2,\n    ZINDEX: 4\n};\n\n/**\n * Helper function that inserts equal spacers (~).\n * @private\n */\nfunction _processEqualSpacer(context, stackView) {\n\n    // Determine unique name for the spacer\n    context.equalSpacerIndex = context.equalSpacerIndex || 1;\n    const name = '_~' + context.lineIndex + ':' + context.equalSpacerIndex + '~';\n    if (context.equalSpacerIndex > 1) {\n\n        // Ensure that all spacers have the same width/height\n        context.constraints.push({\n            view1: '_~' + context.lineIndex + ':1~',\n            attr1: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n            relation: context.relation.relation || Relation.EQU,\n            view2: name,\n            attr2: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n            priority: context.relation.priority\n        });\n    }\n    context.equalSpacerIndex++;\n\n    // Enforce view/proportional width/height\n    if (context.relation.view || (context.relation.multiplier && (context.relation.multiplier !== 1))) {\n        context.constraints.push({\n            view1: name,\n            attr1: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n            relation: context.relation.relation || Relation.EQU,\n            view2: context.relation.view,\n            attr2: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n            priority: context.relation.priority,\n            multiplier: context.relation.multiplier\n        });\n        context.relation.multiplier = undefined;\n    }\n    else if (context.relation.constant) {\n        context.constraints.push({\n            view1: name,\n            attr1: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n            relation: Relation.EQU,\n            view2: null,\n            attr2: Attribute.CONST,\n            priority: context.relation.priority,\n            constant: context.relation.constant\n        });\n        context.relation.constant = undefined;\n    }\n\n    // Add constraint\n    for (var i = 0; i < context.prevViews.length; i++) {\n        const prevView = context.prevViews[i];\n        switch (context.orientation) {\n            case Orientation.HORIZONTAL:\n                context.prevAttr = (prevView !== stackView) ? Attribute.RIGHT : Attribute.LEFT;\n                context.curAttr = Attribute.LEFT;\n                break;\n            case Orientation.VERTICAL:\n                context.prevAttr = (prevView !== stackView) ? Attribute.BOTTOM : Attribute.TOP;\n                context.curAttr = Attribute.TOP;\n                break;\n            case Orientation.ZINDEX:\n                context.prevAttr = Attribute.ZINDEX;\n                context.curAttr = Attribute.ZINDEX;\n                context.relation.constant = (prevView !== stackView) ? 'default' : 0;\n                break;\n        }\n        context.constraints.push({\n            view1: prevView,\n            attr1: context.prevAttr,\n            relation: context.relation.relation,\n            view2: name,\n            attr2: context.curAttr,\n            priority: context.relation.priority\n        });\n    }\n    context.prevViews = [name];\n}\n\n/**\n * Helper function that inserts proportional spacers (-12%-).\n * @private\n */\nfunction _processProportionalSpacer(context, stackView) {\n    context.proportionalSpacerIndex = context.proportionalSpacerIndex || 1;\n    const name = '_-' + context.lineIndex + ':' + context.proportionalSpacerIndex + '-';\n    context.proportionalSpacerIndex++;\n    context.constraints.push({\n        view1: name,\n        attr1: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n        relation: context.relation.relation || Relation.EQU,\n        view2: context.relation.view, // or relative to the stackView... food for thought\n        attr2: context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT,\n        priority: context.relation.priority,\n        multiplier: context.relation.multiplier\n    });\n    context.relation.multiplier = undefined;\n\n    // Add constraint\n    for (var i = 0; i < context.prevViews.length; i++) {\n        const prevView = context.prevViews[i];\n        switch (context.orientation) {\n            case Orientation.HORIZONTAL:\n                context.prevAttr = (prevView !== stackView) ? Attribute.RIGHT : Attribute.LEFT;\n                context.curAttr = Attribute.LEFT;\n                break;\n            case Orientation.VERTICAL:\n                context.prevAttr = (prevView !== stackView) ? Attribute.BOTTOM : Attribute.TOP;\n                context.curAttr = Attribute.TOP;\n                break;\n            case Orientation.ZINDEX:\n                context.prevAttr = Attribute.ZINDEX;\n                context.curAttr = Attribute.ZINDEX;\n                context.relation.constant = (prevView !== stackView) ? 'default' : 0;\n                break;\n        }\n        context.constraints.push({\n            view1: prevView,\n            attr1: context.prevAttr,\n            relation: context.relation.relation,\n            view2: name,\n            attr2: context.curAttr,\n            priority: context.relation.priority\n        });\n    }\n    context.prevViews = [name];\n}\n\n/**\n * In case of a stack-view, set constraints for opposite orientations\n * @private\n */\nfunction _processStackView(context, name, subView) {\n    let viewName;\n    for (var orientation = 1; orientation <= 4; orientation *= 2) {\n        if ((subView.orientations & orientation) &&\n            (subView.stack.orientation !== orientation) &&\n            !(subView.stack.processedOrientations & orientation)) {\n            subView.stack.processedOrientations = subView.stack.processedOrientations | orientation;\n            viewName = viewName || {\n                name: name,\n                type: 'stack'\n            };\n            for (var i = 0, j = subView.stack.subViews.length; i < j; i++) {\n                if (orientation === Orientation.ZINDEX) {\n                    context.constraints.push({\n                        view1: viewName,\n                        attr1: Attribute.ZINDEX,\n                        relation: Relation.EQU,\n                        view2: subView.stack.subViews[i],\n                        attr2: Attribute.ZINDEX\n                    });\n                }\n                else {\n                    context.constraints.push({\n                        view1: viewName,\n                        attr1: (orientation === Orientation.VERTICAL) ? Attribute.HEIGHT : Attribute.WIDTH,\n                        relation: Relation.EQU,\n                        view2: subView.stack.subViews[i],\n                        attr2: (orientation === Orientation.VERTICAL) ? Attribute.HEIGHT : Attribute.WIDTH\n                    });\n                    context.constraints.push({\n                        view1: viewName,\n                        attr1: (orientation === Orientation.VERTICAL) ? Attribute.TOP : Attribute.LEFT,\n                        relation: Relation.EQU,\n                        view2: subView.stack.subViews[i],\n                        attr2: (orientation === Orientation.VERTICAL) ? Attribute.TOP : Attribute.LEFT\n                    });\n                }\n            }\n        }\n    }\n}\n\n/**\n * Recursive helper function converts a view-name and a range to a series\n * of view-names (e.g. [child1, child2, child3, ...]).\n * @private\n */\nfunction _getRange(name, range) {\n    if (range === true) {\n        range = name.match(/\\.\\.\\d+$/);\n        if (range) {\n            name = name.substring(0, name.length - range[0].length);\n            range = parseInt(range[0].substring(2));\n        }\n    }\n    if (!range) {\n        return [name];\n    }\n    var start = name.match(/\\d+$/);\n    var res = [];\n    var i;\n    if (start) {\n        name = name.substring(0, name.length - start[0].length);\n        for (i = parseInt(start); i <= range; i++) {\n            res.push(name + i);\n        }\n    }\n    else {\n        res.push(name);\n        for (i = 2; i <= range; i++) {\n            res.push(name + i);\n        }\n    }\n    return res;\n}\n\n/**\n * Recursive helper function that processes the cascaded data.\n * @private\n */\nfunction _processCascade(context, cascade, parentItem) {\n    const stackView = parentItem ? parentItem.view : null;\n    const subViews = [];\n    let curViews = [];\n    let subView;\n    if (stackView) {\n        cascade.push({view: stackView});\n        curViews.push(stackView);\n    }\n    for (var i = 0; i < cascade.length; i++) {\n        let item = cascade[i];\n        if ((!Array.isArray(item) && item.hasOwnProperty('view')) ||\n            (Array.isArray(item) && item[0].view && !item[0].relation)) {\n            const items = Array.isArray(item) ? item : [item];\n            for (var z = 0; z < items.length; z++) {\n                item = items[z];\n                const viewRange = (item === ',') ? [] : item.view ? _getRange(item.view, item.range) : [null];\n                for (var r = 0; r < viewRange.length; r++) {\n                    const curView = viewRange[r];\n                    curViews.push(curView);\n\n                    //\n                    // Add this view to the collection of subViews\n                    //\n                    if (curView !== stackView) {\n                        subViews.push(curView);\n                        subView = context.subViews[curView];\n                        if (!subView) {\n                            subView = {orientations: 0};\n                            context.subViews[curView] = subView;\n                        }\n                        subView.orientations = subView.orientations | context.orientation;\n                        if (subView.stack) {\n                            _processStackView(context, curView, subView);\n                        }\n                    }\n\n                    //\n                    // Process the relationship between this and the previous views\n                    //\n                    if ((context.prevViews !== undefined) && (curView !== undefined) && context.relation) {\n                        if (context.relation.relation !== 'none') {\n                            for (var p = 0; p < context.prevViews.length; p++) {\n                                const prevView = context.prevViews[p];\n                                switch (context.orientation) {\n                                    case Orientation.HORIZONTAL:\n                                        context.prevAttr = (prevView !== stackView) ? Attribute.RIGHT : Attribute.LEFT;\n                                        context.curAttr = (curView !== stackView) ? Attribute.LEFT : Attribute.RIGHT;\n                                        break;\n                                    case Orientation.VERTICAL:\n                                        context.prevAttr = (prevView !== stackView) ? Attribute.BOTTOM : Attribute.TOP;\n                                        context.curAttr = (curView !== stackView) ? Attribute.TOP : Attribute.BOTTOM;\n                                        break;\n                                    case Orientation.ZINDEX:\n                                        context.prevAttr = Attribute.ZINDEX;\n                                        context.curAttr = Attribute.ZINDEX;\n                                        context.relation.constant = !prevView ? 0 : (context.relation.constant || 'default');\n                                        break;\n                                }\n                                context.constraints.push({\n                                    view1: prevView,\n                                    attr1: context.prevAttr,\n                                    relation: context.relation.relation,\n                                    view2: curView,\n                                    attr2: context.curAttr,\n                                    multiplier: context.relation.multiplier,\n                                    constant: ((context.relation.constant === 'default') || !context.relation.constant) ? context.relation.constant : -context.relation.constant,\n                                    priority: context.relation.priority\n                                });\n                            }\n                        }\n                    }\n\n                    //\n                    // Process view size constraints\n                    //\n                    const constraints = item.constraints;\n                    if (constraints) {\n                        for (var n = 0; n < constraints.length; n++) {\n                            context.prevAttr = context.horizontal ? Attribute.WIDTH : Attribute.HEIGHT;\n                            context.curAttr = (constraints[n].view || constraints[n].multiplier) ?\n                                    (constraints[n].attribute || context.prevAttr) :\n                                    (constraints[n].variable ? Attribute.VARIABLE : Attribute.CONST);\n                            context.constraints.push({\n                                view1: curView,\n                                attr1: context.prevAttr,\n                                relation: constraints[n].relation,\n                                view2: constraints[n].view,\n                                attr2: context.curAttr,\n                                multiplier: constraints[n].multiplier,\n                                constant: constraints[n].constant,\n                                priority: constraints[n].priority\n                            });\n                        }\n                    }\n\n                    //\n                    // Process cascaded data (child stack-views)\n                    //\n                    if (item.cascade) {\n                        _processCascade(context, item.cascade, item);\n                    }\n                }\n            }\n        }\n        else if (item !== ',') {\n            context.prevViews = curViews;\n            curViews = [];\n            context.relation = item[0];\n            if (context.prevViews !== undefined) {\n                if (context.relation.equalSpacing) {\n                    _processEqualSpacer(context, stackView);\n                }\n                if (context.relation.multiplier) {\n                    _processProportionalSpacer(context, stackView);\n                }\n            }\n        }\n    }\n\n    if (stackView) {\n        subView = context.subViews[stackView];\n        if (!subView) {\n            subView = {orientations: context.orientation};\n            context.subViews[stackView] = subView;\n        }\n        else if (subView.stack) {\n            const err = new Error('A stack named \"' + stackView + '\" has already been created');\n            err.column = parentItem.$parserOffset + 1;\n            throw err;\n        }\n        subView.stack = {\n            orientation: context.orientation,\n            processedOrientations: context.orientation,\n            subViews: subViews\n        };\n        _processStackView(context, stackView, subView);\n    }\n}\n\nconst metaInfoCategories = [\n    'viewport',\n    'spacing',\n    'colors',\n    'shapes',\n    'widths',\n    'heights'\n];\n\n/**\n * VisualFormat\n *\n * @namespace VisualFormat\n */\nclass VisualFormat {\n\n    /**\n     * Parses a single line of vfl into an array of constraint definitions.\n     *\n     * When the visual-format could not be succesfully parsed an exception is thrown containing\n     * additional info about the parse error and column position.\n     *\n     * @param {String} visualFormat Visual format string (cannot contain line-endings!).\n     * @param {Object} [options] Configuration options.\n     * @param {Boolean} [options.extended] When set to true uses the extended syntax (default: false).\n     * @param {String} [options.outFormat] Output format (`constraints` or `raw`) (default: `constraints`).\n     * @param {Number} [options.lineIndex] Line-index used when auto generating equal-spacing constraints.\n     * @return {Array} Array of constraint definitions.\n     */\n    static parseLine(visualFormat, options) {\n        if ((visualFormat.length === 0) ||\n            (options && options.extended && (visualFormat.indexOf('//') === 0))) {\n            return [];\n        }\n        const res = (options && options.extended) ? parserExt.parse(visualFormat) : parser.parse(visualFormat);\n        if (options && options.outFormat === 'raw') {\n            return [res];\n        }\n        var context = {\n            constraints: [],\n            lineIndex: (options ? options.lineIndex : undefined) || 1,\n            subViews: (options ? options.subViews : undefined) || {}\n        };\n        if (res.type === 'attribute') {\n          for (var n = 0; n < res.predicates.length; n++) {\n            context.constraints.push({\n              view1: res.view,\n              attr1: res.attr,\n              relation: res.predicates[n].relation,\n              view2: res.predicates[n].view,\n              attr2: res.predicates[n].attribute,\n              multiplier: res.predicates[n].multiplier,\n              constant: res.predicates[n].constant,\n              priority: res.predicates[n].priority\n            });\n          }\n        } else {\n          switch (res.orientation) {\n            case 'horizontal':\n              context.orientation = Orientation.HORIZONTAL;\n              context.horizontal = true;\n              _processCascade(context, res.cascade, null);\n              break;\n            case 'vertical':\n              context.orientation = Orientation.VERTICAL;\n              _processCascade(context, res.cascade, null);\n              break;\n            case 'horzvert':\n              context.orientation = Orientation.HORIZONTAL;\n              context.horizontal = true;\n              _processCascade(context, res.cascade, null);\n              context = {\n                constraints: context.constraints,\n                lineIndex: context.lineIndex,\n                subViews: context.subViews,\n                orientation: Orientation.VERTICAL\n              };\n              _processCascade(context, res.cascade, null);\n              break;\n            case 'zIndex':\n              context.orientation = Orientation.ZINDEX;\n              _processCascade(context, res.cascade, null);\n              break;\n          }\n        }\n        return context.constraints;\n    }\n\n    /**\n     * Parses one or more visual format strings into an array of constraint definitions.\n     *\n     * When the visual-format could not be succesfully parsed an exception is thrown containing\n     * additional info about the parse error and column position.\n     *\n     * @param {String|Array} visualFormat One or more visual format strings.\n     * @param {Object} [options] Configuration options.\n     * @param {Boolean} [options.extended] When set to true uses the extended syntax (default: false).\n     * @param {Boolean} [options.strict] When set to false trims any leading/trailing spaces and ignores empty lines (default: true).\n     * @param {String} [options.lineSeperator] String that defines the end of a line (default `\\n`).\n     * @param {String} [options.outFormat] Output format (`constraints` or `raw`) (default: `constraints`).\n     * @return {Array} Array of constraint definitions.\n     */\n    static parse(visualFormat, options) {\n        const lineSeperator = (options && options.lineSeperator) ? options.lineSeperator : '\\n';\n        if (!Array.isArray(visualFormat) && (visualFormat.indexOf(lineSeperator) < 0)) {\n            try {\n                return this.parseLine(visualFormat, options);\n            }\n            catch (err) {\n                err.source = visualFormat;\n                throw err;\n            }\n        }\n\n        // Decompose visual-format into an array of strings, and within those strings\n        // search for line-endings, and treat each line as a seperate visual-format.\n        visualFormat = Array.isArray(visualFormat) ? visualFormat : [visualFormat];\n        let lines;\n        let constraints = [];\n        let lineIndex = 0;\n        let line;\n        const parseOptions = {\n            lineIndex: lineIndex,\n            extended: (options && options.extended),\n            strict: (options && (options.strict !== undefined)) ? options.strict : true,\n            outFormat: options ? options.outFormat : undefined,\n            subViews: {}\n        };\n        try {\n            for (var i = 0; i < visualFormat.length; i++) {\n                lines = visualFormat[i].split(lineSeperator);\n                for (var j = 0; j < lines.length; j++) {\n                    line = lines[j];\n                    lineIndex++;\n                    parseOptions.lineIndex = lineIndex;\n                    if (!parseOptions.strict) {\n                        line = line.trim();\n                    }\n                    if (parseOptions.strict || line.length) {\n                        constraints = constraints.concat(this.parseLine(line, parseOptions));\n                    }\n                }\n            }\n        }\n        catch (err) {\n            err.source = line;\n            err.line = lineIndex;\n            throw err;\n        }\n        return constraints;\n    }\n\n    /**\n     * Parses meta information from the comments in the VFL.\n     *\n     * Additional meta information can be specified in the comments\n     * for previewing and rendering purposes. For instance, the view-port\n     * aspect-ratio, sub-view widths and colors, can be specified. The\n     * following example renders three colored circles in the visual-format editor:\n     *\n     * ```vfl\n     * //viewport aspect-ratio:3/1 max-height:300\n     * //colors red:#FF0000 green:#00FF00 blue:#0000FF\n     * //shapes red:circle green:circle blue:circle\n     * H:|-[row:[red(green,blue)]-[green]-[blue]]-|\n     * V:|[row]|\n     * ```\n     *\n     * Supported categories and properties:\n     *\n     * |Category|Property|Example|\n     * |--------|--------|-------|\n     * |`viewport`|`aspect-ratio:{width}/{height}`|`//viewport aspect-ratio:16/9`|\n     * ||`width:[{number}/intrinsic]`|`//viewport width:10`|\n     * ||`height:[{number}/intrinsic]`|`//viewport height:intrinsic`|\n     * ||`min-width:{number}`|\n     * ||`max-width:{number}`|\n     * ||`min-height:{number}`|\n     * ||`max-height:{number}`|\n     * |`spacing`|`[{number}/array]`|`//spacing:8` or `//spacing:[10, 20, 5]`|\n     * |`widths`|`{view-name}:[{number}/intrinsic]`|`//widths subview1:100`|\n     * |`heights`|`{view-name}:[{number}/intrinsic]`|`//heights subview1:intrinsic`|\n     * |`colors`|`{view-name}:{color}`|`//colors redview:#FF0000 blueview:#00FF00`|\n     * |`shapes`|`{view-name}:[circle/square]`|`//shapes avatar:circle`|\n     *\n     * @param {String|Array} visualFormat One or more visual format strings.\n     * @param {Object} [options] Configuration options.\n     * @param {String} [options.lineSeperator] String that defines the end of a line (default `\\n`).\n     * @param {String} [options.prefix] When specified, also processes the categories using that prefix (e.g. \"-dev-viewport max-height:10\").\n     * @return {Object} meta-info\n     */\n    static parseMetaInfo(visualFormat, options) {\n        const lineSeperator = (options && options.lineSeperator) ? options.lineSeperator : '\\n';\n        const prefix = options ? options.prefix : undefined;\n        visualFormat = Array.isArray(visualFormat) ? visualFormat : [visualFormat];\n        const metaInfo = {};\n        var key;\n        for (var k = 0; k < visualFormat.length; k++) {\n            const lines = visualFormat[k].split(lineSeperator);\n            for (var i = 0; i < lines.length; i++) {\n                const line = lines[i];\n                for (var c = 0; c < metaInfoCategories.length; c++) {\n                    for (var s = 0; s < (prefix ? 2 : 1); s++) {\n                        const category = metaInfoCategories[c];\n                        const prefixedCategory = ((s === 0) ? '' : prefix) + category;\n                        if (line.indexOf('//' + prefixedCategory + ' ') === 0) {\n                            const items = line.substring(3 + prefixedCategory.length).split(' ');\n                            for (var j = 0; j < items.length; j++) {\n                                metaInfo[category] = metaInfo[category] || {};\n                                const item = items[j].split(':');\n                                const names = _getRange(item[0], true);\n                                for (var r = 0; r < names.length; r++) {\n                                    metaInfo[category][names[r]] = (item.length > 1) ? item[1] : '';\n                                }\n                            }\n                        }\n                        else if (line.indexOf('//' + prefixedCategory + ':') === 0) {\n                            metaInfo[category] = line.substring(3 + prefixedCategory.length);\n                        }\n                    }\n                }\n            }\n        }\n        if (metaInfo.viewport) {\n            const viewport = metaInfo.viewport;\n            var aspectRatio = viewport['aspect-ratio'];\n            if (aspectRatio) {\n                aspectRatio = aspectRatio.split('/');\n                viewport['aspect-ratio'] = parseInt(aspectRatio[0]) / parseInt(aspectRatio[1]);\n            }\n            if (viewport.height !== undefined) {\n                viewport.height = (viewport.height === 'intrinsic') ? true : parseInt(viewport.height);\n            }\n            if (viewport.width !== undefined) {\n                viewport.width = (viewport.width === 'intrinsic') ? true : parseInt(viewport.width);\n            }\n            if (viewport['max-height'] !== undefined) {\n                viewport['max-height'] = parseInt(viewport['max-height']);\n            }\n            if (viewport['max-width'] !== undefined) {\n                viewport['max-width'] = parseInt(viewport['max-width']);\n            }\n            if (viewport['min-height'] !== undefined) {\n                viewport['min-height'] = parseInt(viewport['min-height']);\n            }\n            if (viewport['min-width'] !== undefined) {\n                viewport['min-width'] = parseInt(viewport['min-width']);\n            }\n        }\n        if (metaInfo.widths) {\n            for (key in metaInfo.widths) {\n                const width = (metaInfo.widths[key] === 'intrinsic') ? true : parseInt(metaInfo.widths[key]);\n                metaInfo.widths[key] = width;\n                if ((width === undefined) || isNaN(width)) {\n                    delete metaInfo.widths[key];\n                }\n            }\n        }\n        if (metaInfo.heights) {\n            for (key in metaInfo.heights) {\n                const height = (metaInfo.heights[key] === 'intrinsic') ? true : parseInt(metaInfo.heights[key]);\n                metaInfo.heights[key] = height;\n                if ((height === undefined) || isNaN(height)) {\n                    delete metaInfo.heights[key];\n                }\n            }\n        }\n        if (metaInfo.spacing) {\n            const value = JSON.parse(metaInfo.spacing);\n            metaInfo.spacing = value;\n            if (Array.isArray(value)){\n              for (var sIdx = 0, len = value.length; sIdx < len; sIdx++) {\n                if (isNaN(value[sIdx])){\n                  delete metaInfo.spacing;\n                  break;\n                }\n              }\n            } else if (value === undefined || isNaN(value)){\n              delete metaInfo.spacing;\n            }\n        }\n        return metaInfo;\n    }\n}\n\nexport default VisualFormat;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/VisualFormat.js\n **/","export default (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { visualFormatString: peg$parsevisualFormatString },\n        peg$startRuleFunction  = peg$parsevisualFormatString,\n\n        peg$c0 = peg$FAILED,\n        peg$c1 = null,\n        peg$c2 = \":\",\n        peg$c3 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c4 = [],\n        peg$c5 = function(o, superto, view, views, tosuper) { return {\n              orientation: o ? o[0] : 'horizontal',\n              cascade: (superto || []).concat(\n                [view],\n                [].concat.apply([], views),\n                (tosuper || [])\n              )\n            }\n          },\n        peg$c6 = \"H\",\n        peg$c7 = { type: \"literal\", value: \"H\", description: \"\\\"H\\\"\" },\n        peg$c8 = \"V\",\n        peg$c9 = { type: \"literal\", value: \"V\", description: \"\\\"V\\\"\" },\n        peg$c10 = function(orient) { return orient == 'H' ? 'horizontal' : 'vertical' },\n        peg$c11 = \"|\",\n        peg$c12 = { type: \"literal\", value: \"|\", description: \"\\\"|\\\"\" },\n        peg$c13 = function() { return { view: null } },\n        peg$c14 = \"[\",\n        peg$c15 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c16 = \"]\",\n        peg$c17 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c18 = function(view, predicates) { return extend(view, predicates ? { constraints: predicates } : {}) },\n        peg$c19 = \"-\",\n        peg$c20 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c21 = function(predicateList) { return predicateList },\n        peg$c22 = function() { return [{ relation: 'equ', constant: 'default', $parserOffset: offset() }] },\n        peg$c23 = \"\",\n        peg$c24 = function() { return [{ relation: 'equ', constant: 0, $parserOffset: offset() }] },\n        peg$c25 = function(n) { return [{ relation: 'equ', constant: n, $parserOffset: offset() }] },\n        peg$c26 = \"(\",\n        peg$c27 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c28 = \",\",\n        peg$c29 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c30 = \")\",\n        peg$c31 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c32 = function(p, ps) { return [p].concat(ps.map(function(p){ return p[1] })) },\n        peg$c33 = \"@\",\n        peg$c34 = { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n        peg$c35 = function(r, o, p) { return extend({ relation: 'equ' }, (r || {}), o, (p ? p[1]: {})) },\n        peg$c36 = \"==\",\n        peg$c37 = { type: \"literal\", value: \"==\", description: \"\\\"==\\\"\" },\n        peg$c38 = function() { return { relation: 'equ', $parserOffset: offset() } },\n        peg$c39 = \"<=\",\n        peg$c40 = { type: \"literal\", value: \"<=\", description: \"\\\"<=\\\"\" },\n        peg$c41 = function() { return { relation: 'leq', $parserOffset: offset() } },\n        peg$c42 = \">=\",\n        peg$c43 = { type: \"literal\", value: \">=\", description: \"\\\">=\\\"\" },\n        peg$c44 = function() { return { relation: 'geq', $parserOffset: offset() } },\n        peg$c45 = /^[0-9]/,\n        peg$c46 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c47 = function(digits) { return { priority: parseInt(digits.join(\"\"), 10) } },\n        peg$c48 = function(n) { return { constant: n } },\n        peg$c49 = /^[a-zA-Z_]/,\n        peg$c50 = { type: \"class\", value: \"[a-zA-Z_]\", description: \"[a-zA-Z_]\" },\n        peg$c51 = /^[a-zA-Z0-9_]/,\n        peg$c52 = { type: \"class\", value: \"[a-zA-Z0-9_]\", description: \"[a-zA-Z0-9_]\" },\n        peg$c53 = function(f, v) { return { view: f + v } },\n        peg$c54 = \".\",\n        peg$c55 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c56 = function(digits, decimals) { return parseFloat(digits.concat(\".\").concat(decimals).join(\"\"), 10); },\n        peg$c57 = function(digits) { return parseInt(digits.join(\"\"), 10); },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsevisualFormatString() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseorientation();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c0;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c0;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c1;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parsesuperview();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseconnection();\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c0;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c0;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$c1;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseview();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$parseconnection();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseview();\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$c0;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$parseconnection();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseview();\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = peg$parseconnection();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsesuperview();\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$c1;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c5(s1, s2, s3, s4, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseorientation() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 72) {\n        s1 = peg$c6;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c7); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 86) {\n          s1 = peg$c8;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c9); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c10(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsesuperview() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 124) {\n        s1 = peg$c11;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseview() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c14;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c15); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseviewName();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsepredicateListWithParens();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s4 = peg$c16;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c17); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c18(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseconnection() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c19;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c20); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepredicateList();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s3 = peg$c19;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c21(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c19;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c22();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$c23;\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c24();\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepredicateList() {\n      var s0;\n\n      s0 = peg$parsesimplePredicate();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepredicateListWithParens();\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimplePredicate() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenumber();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c25(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsepredicateListWithParens() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c26;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c27); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c28;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c29); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsepredicate();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c28;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsepredicate();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c30;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c31); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c32(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepredicate() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parserelation();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c1;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseobjectOfPredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 64) {\n            s4 = peg$c33;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsepriority();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c35(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parserelation() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c36) {\n        s1 = peg$c36;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c38();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c39) {\n          s1 = peg$c39;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c40); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c41();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c42) {\n            s1 = peg$c42;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c44();\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseobjectOfPredicate() {\n      var s0;\n\n      s0 = peg$parseconstant();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseviewName();\n      }\n\n      return s0;\n    }\n\n    function peg$parsepriority() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c45.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c46); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c45.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c46); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c47(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseconstant() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenumber();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c48(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseviewName() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c49.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c50); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c49.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c50); }\n          }\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        s2 = input.substring(s1, peg$currPos);\n      }\n      s1 = s2;\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        if (peg$c51.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c52); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c51.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s3 = input.substring(s2, peg$currPos);\n        }\n        s2 = s3;\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c53(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c45.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c46); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c45.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c46); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c54;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c55); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c45.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c46); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c45.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c46); }\n              }\n            }\n          } else {\n            s3 = peg$c0;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c56(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c45.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c45.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c46); }\n            }\n          }\n        } else {\n          s1 = peg$c0;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c57(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n\n      function extend(dst) {\n        for (var i = 1; i < arguments.length; i++) {\n          for (var k in arguments[i]) {\n            dst[k] = arguments[i][k];\n          }\n        }\n        return dst;\n      }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();\n\n\n/** WEBPACK FOOTER **\n ** ./src/parser/parser.js\n **/","export default (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { visualFormatStringExt: peg$parsevisualFormatStringExt },\n        peg$startRuleFunction  = peg$parsevisualFormatStringExt,\n\n        peg$c0 = peg$FAILED,\n        peg$c1 = null,\n        peg$c2 = function(viewAttrLeft, predicates, comments) { return {\n              type: 'attribute',\n              view: viewAttrLeft.view,\n              attr: viewAttrLeft.attr,\n              predicates: predicates\n            }\n          },\n        peg$c3 = \"A:\",\n        peg$c4 = { type: \"literal\", value: \"A:\", description: \"\\\"A:\\\"\" },\n        peg$c5 = function() { return 'attribute' },\n        peg$c6 = function(view, attr) { return { view: view.view, attr:attr } },\n        peg$c7 = \":\",\n        peg$c8 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c9 = [],\n        peg$c10 = function(o, superto, view, views, tosuper, comments) { return {\n              type: 'vfl',\n              orientation: o ? o[0] : 'horizontal',\n              cascade: (superto || []).concat(\n                view,\n                [].concat.apply([], views),\n                (tosuper || [])\n              )\n            }\n          },\n        peg$c11 = \"HV\",\n        peg$c12 = { type: \"literal\", value: \"HV\", description: \"\\\"HV\\\"\" },\n        peg$c13 = function() { return 'horzvert' },\n        peg$c14 = \"H\",\n        peg$c15 = { type: \"literal\", value: \"H\", description: \"\\\"H\\\"\" },\n        peg$c16 = function() { return 'horizontal' },\n        peg$c17 = \"V\",\n        peg$c18 = { type: \"literal\", value: \"V\", description: \"\\\"V\\\"\" },\n        peg$c19 = function() { return 'vertical' },\n        peg$c20 = \"Z\",\n        peg$c21 = { type: \"literal\", value: \"Z\", description: \"\\\"Z\\\"\" },\n        peg$c22 = function() { return 'zIndex' },\n        peg$c23 = \" \",\n        peg$c24 = { type: \"literal\", value: \" \", description: \"\\\" \\\"\" },\n        peg$c25 = \"//\",\n        peg$c26 = { type: \"literal\", value: \"//\", description: \"\\\"//\\\"\" },\n        peg$c27 = { type: \"any\", description: \"any character\" },\n        peg$c28 = \"|\",\n        peg$c29 = { type: \"literal\", value: \"|\", description: \"\\\"|\\\"\" },\n        peg$c30 = function() { return { view: null } },\n        peg$c31 = \"[\",\n        peg$c32 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c33 = \",\",\n        peg$c34 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c35 = \"]\",\n        peg$c36 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c37 = function(view, views) { return views.length ? [view].concat([].concat.apply([], views)) : view },\n        peg$c38 = function(view, predicates, cascadedViews) { return extend(extend(view, predicates ? { constraints: predicates } : {}), cascadedViews ? {\n            cascade: cascadedViews\n          } : {}) },\n        peg$c39 = function(views, connection) { return [].concat([].concat.apply([], views),[connection]); },\n        peg$c40 = \"->\",\n        peg$c41 = { type: \"literal\", value: \"->\", description: \"\\\"->\\\"\" },\n        peg$c42 = function() { return [{ relation: 'none' }] },\n        peg$c43 = \"-\",\n        peg$c44 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c45 = function(predicateList) { return predicateList },\n        peg$c46 = function() { return [{ relation: 'equ', constant: 'default' }] },\n        peg$c47 = \"~\",\n        peg$c48 = { type: \"literal\", value: \"~\", description: \"\\\"~\\\"\" },\n        peg$c49 = function() { return [{ relation: 'equ', equalSpacing: true }] },\n        peg$c50 = \"\",\n        peg$c51 = function() { return [{ relation: 'equ', constant: 0 }] },\n        peg$c52 = function(p) { return [{ relation: 'equ', multiplier: p.multiplier }] },\n        peg$c53 = function(n) { return [{ relation: 'equ', constant: n }] },\n        peg$c54 = \"(\",\n        peg$c55 = { type: \"literal\", value: \"(\", description: \"\\\"(\\\"\" },\n        peg$c56 = \")\",\n        peg$c57 = { type: \"literal\", value: \")\", description: \"\\\")\\\"\" },\n        peg$c58 = function(p, ps) { return [p].concat(ps.map(function(p){ return p[1] })) },\n        peg$c59 = \"@\",\n        peg$c60 = { type: \"literal\", value: \"@\", description: \"\\\"@\\\"\" },\n        peg$c61 = function(r, o, p) { return extend({ relation: 'equ' }, (r || {}), o, (p ? p[1]: {})) },\n        peg$c62 = function(r, o, p) { return extend({ relation: 'equ', equalSpacing: true }, (r || {}), o, (p ? p[1]: {})) },\n        peg$c63 = \"==\",\n        peg$c64 = { type: \"literal\", value: \"==\", description: \"\\\"==\\\"\" },\n        peg$c65 = function() { return { relation: 'equ' } },\n        peg$c66 = \"<=\",\n        peg$c67 = { type: \"literal\", value: \"<=\", description: \"\\\"<=\\\"\" },\n        peg$c68 = function() { return { relation: 'leq' } },\n        peg$c69 = \">=\",\n        peg$c70 = { type: \"literal\", value: \">=\", description: \"\\\">=\\\"\" },\n        peg$c71 = function() { return { relation: 'geq' } },\n        peg$c72 = /^[0-9]/,\n        peg$c73 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c74 = function(digits) { return { priority: parseInt(digits.join(\"\"), 10) } },\n        peg$c75 = function(n) { return { constant: n } },\n        peg$c76 = function(n) { return { constant: -n } },\n        peg$c77 = \"+\",\n        peg$c78 = { type: \"literal\", value: \"+\", description: \"\\\"+\\\"\" },\n        peg$c79 = \"%\",\n        peg$c80 = { type: \"literal\", value: \"%\", description: \"\\\"%\\\"\" },\n        peg$c81 = function(n) { return { view: null, multiplier: n / 100 } },\n        peg$c82 = function(n) { return { view: null, multiplier: n / -100 } },\n        peg$c83 = function(vn, a, m, c) { return { view: vn.view, attribute: a ? a : undefined, multiplier: m ? m : 1, constant: c ? c : undefined } },\n        peg$c84 = \".left\",\n        peg$c85 = { type: \"literal\", value: \".left\", description: \"\\\".left\\\"\" },\n        peg$c86 = function() { return 'left'},\n        peg$c87 = \".right\",\n        peg$c88 = { type: \"literal\", value: \".right\", description: \"\\\".right\\\"\" },\n        peg$c89 = function() { return 'right'},\n        peg$c90 = \".top\",\n        peg$c91 = { type: \"literal\", value: \".top\", description: \"\\\".top\\\"\" },\n        peg$c92 = function() { return 'top'},\n        peg$c93 = \".bottom\",\n        peg$c94 = { type: \"literal\", value: \".bottom\", description: \"\\\".bottom\\\"\" },\n        peg$c95 = function() { return 'bottom'},\n        peg$c96 = \".width\",\n        peg$c97 = { type: \"literal\", value: \".width\", description: \"\\\".width\\\"\" },\n        peg$c98 = function() { return 'width'},\n        peg$c99 = \".height\",\n        peg$c100 = { type: \"literal\", value: \".height\", description: \"\\\".height\\\"\" },\n        peg$c101 = function() { return 'height'},\n        peg$c102 = \".centerX\",\n        peg$c103 = { type: \"literal\", value: \".centerX\", description: \"\\\".centerX\\\"\" },\n        peg$c104 = function() { return 'centerX'},\n        peg$c105 = \".centerY\",\n        peg$c106 = { type: \"literal\", value: \".centerY\", description: \"\\\".centerY\\\"\" },\n        peg$c107 = function() { return 'centerY'},\n        peg$c108 = \"/\",\n        peg$c109 = { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n        peg$c110 = function(n) { return 1 / n; },\n        peg$c111 = \"/+\",\n        peg$c112 = { type: \"literal\", value: \"/+\", description: \"\\\"/+\\\"\" },\n        peg$c113 = \"/-\",\n        peg$c114 = { type: \"literal\", value: \"/-\", description: \"\\\"/-\\\"\" },\n        peg$c115 = function(n) { return -1 / n; },\n        peg$c116 = \"*\",\n        peg$c117 = { type: \"literal\", value: \"*\", description: \"\\\"*\\\"\" },\n        peg$c118 = function(n) { return n; },\n        peg$c119 = \"*+\",\n        peg$c120 = { type: \"literal\", value: \"*+\", description: \"\\\"*+\\\"\" },\n        peg$c121 = \"*-\",\n        peg$c122 = { type: \"literal\", value: \"*-\", description: \"\\\"*-\\\"\" },\n        peg$c123 = function(n) { return -n; },\n        peg$c124 = /^[a-zA-Z_]/,\n        peg$c125 = { type: \"class\", value: \"[a-zA-Z_]\", description: \"[a-zA-Z_]\" },\n        peg$c126 = /^[a-zA-Z0-9_]/,\n        peg$c127 = { type: \"class\", value: \"[a-zA-Z0-9_]\", description: \"[a-zA-Z0-9_]\" },\n        peg$c128 = function(f, v, r) { return { view: f + v, range: r, $parserOffset: offset() } },\n        peg$c129 = function(f, v) { return { view: f + v, $parserOffset: offset() } },\n        peg$c130 = \"..\",\n        peg$c131 = { type: \"literal\", value: \"..\", description: \"\\\"..\\\"\" },\n        peg$c132 = function(d) { return parseInt(d) },\n        peg$c133 = \".\",\n        peg$c134 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c135 = function(digits, decimals) { return parseFloat(digits.concat(\".\").concat(decimals).join(\"\"), 10); },\n        peg$c136 = function(digits) { return parseInt(digits.join(\"\"), 10); },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsevisualFormatStringExt() {\n      var s0;\n\n      s0 = peg$parsevisualFormatString();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsevisualFormatStringAttributeExpression();\n      }\n\n      return s0;\n    }\n\n    function peg$parsevisualFormatStringAttributeExpression() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseattributeMark();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseattributeSignifier();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsepredicateList();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsecomments();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c1;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c2(s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseattributeMark() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c3) {\n        s1 = peg$c3;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c4); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c5();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseattributeSignifier() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseviewName();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseattribute();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c6(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsevisualFormatString() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseorientation();\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 58) {\n          s3 = peg$c7;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c0;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c0;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c1;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$parsesuperview();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseconnection();\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c0;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c0;\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$c1;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseviewGroup();\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$currPos;\n            s6 = peg$parseconnection();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseviewGroup();\n              if (s7 !== peg$FAILED) {\n                s6 = [s6, s7];\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$c0;\n            }\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$currPos;\n              s6 = peg$parseconnection();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseviewGroup();\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              s6 = peg$parseconnection();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsesuperview();\n                if (s7 !== peg$FAILED) {\n                  s6 = [s6, s7];\n                  s5 = s6;\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c0;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c0;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$c1;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsecomments();\n                if (s6 === peg$FAILED) {\n                  s6 = peg$c1;\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c10(s1, s2, s3, s4, s5, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseorientation() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c11) {\n        s1 = peg$c11;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c13();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 72) {\n          s1 = peg$c14;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c15); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c16();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 86) {\n            s1 = peg$c17;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c19();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 90) {\n              s1 = peg$c20;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c21); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c22();\n            }\n            s0 = s1;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsecomments() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s2 = peg$c23;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c24); }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s2 = peg$c23;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c24); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c25) {\n          s2 = peg$c25;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c26); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (input.length > peg$currPos) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c27); }\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (input.length > peg$currPos) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c27); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s1 = [s1, s2, s3];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsesuperview() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 124) {\n        s1 = peg$c28;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c30();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseviewGroup() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c31;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseview();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c33;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseview();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c33;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c34); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseview();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s4 = peg$c35;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c36); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c37(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseview() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseviewNameRange();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepredicateListWithParens();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c1;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecascadedViews();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c38(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecascadedViews() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parseconnection();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseviewGroup();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$c0;\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$currPos;\n            s4 = peg$parseconnection();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseviewGroup();\n              if (s5 !== peg$FAILED) {\n                s4 = [s4, s5];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c0;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          }\n        } else {\n          s2 = peg$c0;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseconnection();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c39(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseconnection() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c40) {\n        s1 = peg$c40;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c42();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c43;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c44); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsepredicateList();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s3 = peg$c43;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c44); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c45(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c43;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c44); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c46();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 126) {\n              s1 = peg$c47;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c48); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parseequalSpacingPredicateList();\n              if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 126) {\n                  s3 = peg$c47;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c48); }\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c45(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 126) {\n                s1 = peg$c47;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c48); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c49();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$c50;\n                if (s1 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c51();\n                }\n                s0 = s1;\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepredicateList() {\n      var s0;\n\n      s0 = peg$parsesimplePredicate();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepredicateListWithParens();\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimplePredicate() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsepercentage();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c52(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsenumber();\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c53(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepredicateListWithParens() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c54;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c55); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c33;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsepredicate();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c33;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c34); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsepredicate();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c56;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c57); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c58(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepredicate() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parserelation();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c1;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseobjectOfPredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 64) {\n            s4 = peg$c59;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c60); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsepriority();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c61(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseequalSpacingPredicateList() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s1 = peg$c54;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c55); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseequalSpacingPredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c33;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c34); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseequalSpacingPredicate();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c33;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c34); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseequalSpacingPredicate();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s4 = peg$c56;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c57); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c58(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseequalSpacingPredicate() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parserelation();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c1;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseobjectOfPredicate();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 64) {\n            s4 = peg$c59;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c60); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsepriority();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c0;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c0;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c62(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parserelation() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c63) {\n        s1 = peg$c63;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c64); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c65();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c66) {\n          s1 = peg$c66;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c68();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c69) {\n            s1 = peg$c69;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c70); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c71();\n          }\n          s0 = s1;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseobjectOfPredicate() {\n      var s0;\n\n      s0 = peg$parsepercentage();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseconstant();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseviewPredicate();\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepriority() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c72.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c73); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c72.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c73); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c74(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseconstant() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenumber();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c75(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c43;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c44); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsenumber();\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c76(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s1 = peg$c77;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c78); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumber();\n            if (s2 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c75(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepercentage() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsenumber();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 37) {\n          s2 = peg$c79;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c80); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c81(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s1 = peg$c43;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c44); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsenumber();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 37) {\n              s3 = peg$c79;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c80); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c82(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s1 = peg$c77;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c78); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumber();\n            if (s2 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 37) {\n                s3 = peg$c79;\n                peg$currPos++;\n              } else {\n                s3 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c80); }\n              }\n              if (s3 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c81(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseviewPredicate() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseviewName();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseattribute();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c1;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemultiplier();\n          if (s3 === peg$FAILED) {\n            s3 = peg$c1;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseconstantExpr();\n            if (s4 === peg$FAILED) {\n              s4 = peg$c1;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c83(s1, s2, s3, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseattribute() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c84) {\n        s1 = peg$c84;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c85); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c86();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 6) === peg$c87) {\n          s1 = peg$c87;\n          peg$currPos += 6;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c88); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c89();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 4) === peg$c90) {\n            s1 = peg$c90;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c91); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c92();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 7) === peg$c93) {\n              s1 = peg$c93;\n              peg$currPos += 7;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c94); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c95();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 6) === peg$c96) {\n                s1 = peg$c96;\n                peg$currPos += 6;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c97); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c98();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 7) === peg$c99) {\n                  s1 = peg$c99;\n                  peg$currPos += 7;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c100); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c101();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.substr(peg$currPos, 8) === peg$c102) {\n                    s1 = peg$c102;\n                    peg$currPos += 8;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c103); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c104();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.substr(peg$currPos, 8) === peg$c105) {\n                      s1 = peg$c105;\n                      peg$currPos += 8;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c106); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c107();\n                    }\n                    s0 = s1;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemultiplier() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c108;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c109); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsenumber();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c110(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c111) {\n          s1 = peg$c111;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c112); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsenumber();\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c110(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c113) {\n            s1 = peg$c113;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c114); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumber();\n            if (s2 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c115(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 42) {\n              s1 = peg$c116;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c117); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parsenumber();\n              if (s2 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c118(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c119) {\n                s1 = peg$c119;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c120); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parsenumber();\n                if (s2 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c118(s2);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c121) {\n                  s1 = peg$c121;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c122); }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parsenumber();\n                  if (s2 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c123(s2);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseconstantExpr() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c43;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsenumber();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c123(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s1 = peg$c77;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c78); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsenumber();\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c118(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseviewNameRange() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c124.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c125); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c124.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c125); }\n          }\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        s2 = input.substring(s1, peg$currPos);\n      }\n      s1 = s2;\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        if (peg$c126.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c127); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c126.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c127); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s3 = input.substring(s2, peg$currPos);\n        }\n        s2 = s3;\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parserange();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c128(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        if (peg$c124.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c125); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c124.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c125); }\n            }\n          }\n        } else {\n          s2 = peg$c0;\n        }\n        if (s2 !== peg$FAILED) {\n          s2 = input.substring(s1, peg$currPos);\n        }\n        s1 = s2;\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = [];\n          if (peg$c126.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c127); }\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            if (peg$c126.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c127); }\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            s3 = input.substring(s2, peg$currPos);\n          }\n          s2 = s3;\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c129(s1, s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseviewName() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c124.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c125); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c124.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c125); }\n          }\n        }\n      } else {\n        s2 = peg$c0;\n      }\n      if (s2 !== peg$FAILED) {\n        s2 = input.substring(s1, peg$currPos);\n      }\n      s1 = s2;\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        if (peg$c126.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c127); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c126.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c127); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s3 = input.substring(s2, peg$currPos);\n        }\n        s2 = s3;\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c129(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parserange() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c130) {\n        s1 = peg$c130;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c131); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c72.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c73); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c72.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c73); }\n            }\n          }\n        } else {\n          s2 = peg$c0;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c132(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c72.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c73); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c72.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c73); }\n          }\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c133;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c134); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c72.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c73); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c72.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c73); }\n              }\n            }\n          } else {\n            s3 = peg$c0;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c135(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c72.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c73); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c72.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c73); }\n            }\n          }\n        } else {\n          s1 = peg$c0;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c136(s1);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n\n      function extend(dst) {\n        for (var i = 1; i < arguments.length; i++) {\n          for (var k in arguments[i]) {\n            dst[k] = arguments[i][k];\n          }\n        }\n        return dst;\n      }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();\n\n\n/** WEBPACK FOOTER **\n ** ./src/parser/parserExt.js\n **/","import solver from 'constraint-solver';\nimport Attribute from './Attribute';\nimport Relation from './Relation';\nimport SubView from './SubView';\n\nconst defaultPriorityStrength = process.env.CASSOWARYJS ? new solver.Strength('defaultPriority', 0, 1000, 1000) : solver.Strength.create(0, 1000, 1000);\n\nfunction _getConst(name, value) {\n    if (process.env.CASSOWARYJS) {\n        const vr = new solver.Variable({value: value});\n        this._solver.addConstraint(new solver.StayConstraint(vr, solver.Strength.required, 0));\n        return vr;\n    }\n    else {\n        const vr = new solver.Variable();\n        this._solver.addConstraint(new solver.Constraint(vr, solver.Operator.Eq, value));\n        return vr;\n    }\n}\n\nfunction _getSubView(viewName) {\n    if (!viewName) {\n        return this._parentSubView;\n    }\n    else if (viewName.name) {\n        this._subViews[viewName.name] = this._subViews[viewName.name] || new SubView({\n            name: viewName.name,\n            solver: this._solver\n        });\n        this._subViews[viewName.name]._type = this._subViews[viewName.name]._type || viewName.type;\n        return this._subViews[viewName.name];\n    }\n    else {\n        this._subViews[viewName] = this._subViews[viewName] || new SubView({\n            name: viewName,\n            solver: this._solver\n        });\n        return this._subViews[viewName];\n    }\n}\n\nfunction _getSpacing(constraint) {\n    let index = 4;\n    if (!constraint.view1 && (constraint.attr1 === 'left')) {\n        index = 3;\n    }\n    else if (!constraint.view1 && (constraint.attr1 === 'top')) {\n        index = 0;\n    }\n    else if (!constraint.view2 && (constraint.attr2 === 'right')) {\n        index = 1;\n    }\n    else if (!constraint.view2 && (constraint.attr2 === 'bottom')) {\n        index = 2;\n    }\n    else {\n        switch (constraint.attr1) {\n            case 'left':\n            case 'right':\n            case 'centerX':\n            case 'leading':\n            case 'trailing':\n                index = 4;\n                break;\n            case 'zIndex':\n                index = 6;\n                break;\n            default:\n                index = 5;\n        }\n    }\n    this._spacingVars = this._spacingVars || new Array(7);\n    this._spacingExpr = this._spacingExpr || new Array(7);\n    if (!this._spacingVars[index]) {\n        if (process.env.CASSOWARYJS) {\n            this._spacingVars[index] = new solver.Variable();\n            this._solver.addEditVar(this._spacingVars[index]);\n            this._spacingExpr[index] = solver.minus(0, this._spacingVars[index]);\n        }\n        else {\n            this._spacingVars[index] = new solver.Variable();\n            this._solver.addEditVariable(this._spacingVars[index], solver.Strength.create(999, 1000, 1000));\n            this._spacingExpr[index] = this._spacingVars[index].multiply(-1);\n        }\n        this._solver.suggestValue(this._spacingVars[index], this._spacing[index]);\n    }\n    return this._spacingExpr[index];\n}\n\nfunction _addConstraint(constraint) {\n    //this.constraints.push(constraint);\n    let relation;\n    const multiplier = (constraint.multiplier !== undefined) ? constraint.multiplier : 1;\n    let constant = (constraint.constant !== undefined) ? constraint.constant : 0;\n    if (constant === 'default') {\n        constant = _getSpacing.call(this, constraint);\n    }\n    const attr1 = _getSubView.call(this, constraint.view1)._getAttr(constraint.attr1);\n    let attr2;\n    if (process.env.CASSOWARYJS) {\n        if (constraint.attr2 === Attribute.CONST) {\n            attr2 = _getConst.call(this, undefined, constraint.constant);\n        }\n        else {\n            attr2 = _getSubView.call(this, constraint.view2)._getAttr(constraint.attr2);\n            if ((multiplier !== 1) && constant) {\n                attr2 = solver.plus(solver.times(attr2, multiplier), constant);\n            }\n            else if (constant) {\n                attr2 = solver.plus(attr2, constant);\n            }\n            else if (multiplier !== 1) {\n                attr2 = solver.times(attr2, multiplier);\n            }\n        }\n        const strength = ((constraint.priority !== undefined) && (constraint.priority < 1000)) ? new solver.Strength('priority', 0, constraint.priority, 1000) : defaultPriorityStrength;\n        switch (constraint.relation) {\n            case Relation.EQU:\n                relation = new solver.Equation(attr1, attr2, strength);\n                break;\n            case Relation.GEQ:\n                relation = new solver.Inequality(attr1, solver.GEQ, attr2, strength);\n                break;\n            case Relation.LEQ:\n                relation = new solver.Inequality(attr1, solver.LEQ, attr2, strength);\n                break;\n            default:\n                throw 'Invalid relation specified: ' + constraint.relation;\n        }\n    }\n    else {\n        if (constraint.attr2 === Attribute.CONST) {\n            attr2 = _getConst.call(this, undefined, constraint.constant);\n        }\n        else {\n            attr2 = _getSubView.call(this, constraint.view2)._getAttr(constraint.attr2);\n            if ((multiplier !== 1) && constant) {\n                attr2 = attr2.multiply(multiplier).plus(constant);\n            }\n            else if (constant) {\n                attr2 = attr2.plus(constant);\n            }\n            else if (multiplier !== 1) {\n                attr2 = attr2.multiply(multiplier);\n            }\n        }\n        const strength = ((constraint.priority !== undefined) && (constraint.priority < 1000)) ? solver.Strength.create(0, constraint.priority, 1000) : defaultPriorityStrength;\n        switch (constraint.relation) {\n            case Relation.EQU:\n                relation = new solver.Constraint(attr1, solver.Operator.Eq, attr2, strength);\n                break;\n            case Relation.GEQ:\n                relation = new solver.Constraint(attr1, solver.Operator.Ge, attr2, strength);\n                break;\n            case Relation.LEQ:\n                relation = new solver.Constraint(attr1, solver.Operator.Le, attr2, strength);\n                break;\n            default:\n                throw 'Invalid relation specified: ' + constraint.relation;\n        }\n    }\n    this._solver.addConstraint(relation);\n}\n\nfunction _compareSpacing(old, newz) {\n    if (old === newz) {\n        return true;\n    }\n    if (!old || !newz) {\n        return false;\n    }\n    for (var i = 0; i < 7; i++) {\n        if (old[i] !== newz[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * AutoLayoutJS API reference.\n *\n * ### Index\n *\n * |Entity|Type|Description|\n * |---|---|---|\n * |[AutoLayout](#autolayout)|`namespace`|Top level AutoLayout object.|\n * |[VisualFormat](#autolayoutvisualformat--object)|`namespace`|Parses VFL into constraints.|\n * |[View](#autolayoutview)|`class`|Main entity for adding & evaluating constraints.|\n * |[SubView](#autolayoutsubview--object)|`class`|SubView's are automatically created when constraints are added to views. They give access to the evaluated results.|\n * |[Attribute](#autolayoutattribute--enum)|`enum`|Attribute types that are supported when adding constraints.|\n * |[Relation](#autolayoutrelation--enum)|`enum`|Relationship types that are supported when adding constraints.|\n * |[Priority](#autolayoutpriority--enum)|`enum`|Default priority values for when adding constraints.|\n *\n * ### AutoLayout\n *\n * @module AutoLayout\n */\nclass View {\n\n    /**\n     * @class View\n     * @param {Object} [options] Configuration options.\n     * @param {Number} [options.width] Initial width of the view.\n     * @param {Number} [options.height] Initial height of the view.\n     * @param {Number|Object} [options.spacing] Spacing for the view (default: 8) (see `setSpacing`).\n     * @param {Array} [options.constraints] One or more constraint definitions (see `addConstraints`).\n     */\n    constructor(options) {\n        this._solver = process.env.CASSOWARYJS ? new solver.SimplexSolver() : new solver.Solver();\n        this._subViews = {};\n        //this._spacing = undefined;\n        this._parentSubView = new SubView({\n            solver: this._solver\n        });\n        this.setSpacing((options && (options.spacing !== undefined)) ? options.spacing : 8);\n        //this.constraints = [];\n        if (options) {\n            if ((options.width !== undefined) || (options.height !== undefined)) {\n                this.setSize(options.width, options.height);\n            }\n            if (options.constraints) {\n                this.addConstraints(options.constraints);\n            }\n        }\n    }\n\n    /**\n     * Sets the width and height of the view.\n     *\n     * @param {Number} width Width of the view.\n     * @param {Number} height Height of the view.\n     * @return {View} this\n     */\n    setSize(width, height /*, depth*/) {\n        this._parentSubView.intrinsicWidth = width;\n        this._parentSubView.intrinsicHeight = height;\n        return this;\n    }\n\n    /**\n     * Width that was set using `setSize`.\n     * @readonly\n     * @type {Number}\n     */\n    get width() {\n        return this._parentSubView.intrinsicWidth;\n    }\n\n    /**\n     * Height that was set using `setSize`.\n     * @readonly\n     * @type {Number}\n     */\n    get height() {\n        return this._parentSubView.intrinsicHeight;\n    }\n\n    /**\n     * Width that is calculated from the constraints and the `.intrinsicWidth` of\n     * the sub-views.\n     *\n     * When the width has been explicitely set using `setSize`, the fittingWidth\n     * will **always** be the same as the explicitely set width. To calculate the size\n     * based on the content, use:\n     * ```javascript\n     * var view = new AutoLayout.View({\n     *   constraints: VisualFormat.parse('|-[view1]-[view2]-'),\n     *   spacing: 20\n     * });\n     * view.subViews.view1.intrinsicWidth = 100;\n     * view.subViews.view2.intrinsicWidth = 100;\n     * console.log('fittingWidth: ' + view.fittingWidth); // 260\n     * ```\n     *\n     * @readonly\n     * @type {Number}\n     */\n    get fittingWidth() {\n        return this._parentSubView.width;\n    }\n\n    /**\n     * Height that is calculated from the constraints and the `.intrinsicHeight` of\n     * the sub-views.\n     *\n     * See `.fittingWidth`.\n     *\n     * @readonly\n     * @type {Number}\n     */\n    get fittingHeight() {\n        return this._parentSubView.height;\n    }\n\n    /**\n     * Sets the spacing for the view.\n     *\n     * The spacing can be set for 7 different variables:\n     * `top`, `right`, `bottom`, `left`, `width`, `height` and `zIndex`. The `left`-spacing is\n     * used when a spacer is used between the parent-view and a sub-view (e.g. `|-[subView]`).\n     * The same is true for the `right`, `top` and `bottom` spacers. The `width` and `height` are\n     * used for spacers in between sub-views (e.g. `[view1]-[view2]`).\n     *\n     * Instead of using the full spacing syntax, it is also possible to use shorthand notations:\n     *\n     * |Syntax|Type|Description|\n     * |---|---|---|\n     * |`[top, right, bottom, left, width, height, zIndex]`|Array(7)|Full syntax including z-index **(clockwise order)**.|\n     * |`[top, right, bottom, left, width, height]`|Array(6)|Full horizontal & vertical spacing syntax (no z-index) **(clockwise order)**.|\n     * |`[horizontal, vertical, zIndex]`|Array(3)|Horizontal = left, right, width, vertical = top, bottom, height.|\n     * |`[horizontal, vertical]`|Array(2)|Horizontal = left, right, width, vertical = top, bottom, height, z-index = 1.|\n     * |`spacing`|Number|Horizontal & vertical spacing are all the same, z-index = 1.|\n     *\n     * Examples:\n     * ```javascript\n     * view.setSpacing(10); // horizontal & vertical spacing 10\n     * view.setSpacing([10, 15, 2]); // horizontal spacing 10, vertical spacing 15, z-axis spacing 2\n     * view.setSpacing([10, 20, 10, 20, 5, 5]); // top, right, bottom, left, horizontal, vertical\n     * view.setSpacing([10, 20, 10, 20, 5, 5, 1]); // top, right, bottom, left, horizontal, vertical, z\n     * ```\n     *\n     * @param {Number|Array} spacing\n     * @return {View} this\n     */\n    setSpacing(spacing) {\n        // convert spacing into array: [top, right, bottom, left, horz, vert, z-index]\n        switch (Array.isArray(spacing) ? spacing.length : -1) {\n            case -1: spacing = [spacing, spacing, spacing, spacing, spacing, spacing, 1]; break;\n            case 1: spacing = [spacing[0], spacing[0], spacing[0], spacing[0], spacing[0], spacing[0], 1]; break;\n            case 2: spacing = [spacing[1], spacing[0], spacing[1], spacing[0], spacing[0], spacing[1], 1]; break;\n            case 3: spacing = [spacing[1], spacing[0], spacing[1], spacing[0], spacing[0], spacing[1], spacing[2]]; break;\n            case 6: spacing = [spacing[0], spacing[1], spacing[2], spacing[3], spacing[4], spacing[5], 1]; break;\n            case 7: break;\n            default: throw 'Invalid spacing syntax';\n        }\n        if (!_compareSpacing(this._spacing, spacing)) {\n            this._spacing = spacing;\n            // update spacing variables\n            if (this._spacingVars) {\n                for (var i = 0; i < this._spacingVars.length; i++) {\n                    if (this._spacingVars[i]) {\n                        this._solver.suggestValue(this._spacingVars[i], this._spacing[i]);\n                    }\n                }\n                if (process.env.CASSOWARYJS) {\n                    this._solver.resolve();\n                }\n                else {\n                    this._solver.updateVariables();\n                }\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds a constraint definition.\n     *\n     * A constraint definition has the following format:\n     *\n     * ```javascript\n     * constraint: {\n     *   view1: {String},\n     *   attr1: {AutoLayout.Attribute},\n     *   relation: {AutoLayout.Relation},\n     *   view2: {String},\n     *   attr2: {AutoLayout.Attribute},\n     *   multiplier: {Number},\n     *   constant: {Number},\n     *   priority: {Number}(0..1000)\n     * }\n     * ```\n     * @param {Object} constraint Constraint definition.\n     * @return {View} this\n     */\n    addConstraint(constraint) {\n        _addConstraint.call(this, constraint);\n        if (!process.env.CASSOWARYJS) {\n            this._solver.updateVariables();\n        }\n        return this;\n    }\n\n    /**\n     * Adds one or more constraint definitions.\n     *\n     * A constraint definition has the following format:\n     *\n     * ```javascript\n     * constraint: {\n     *   view1: {String},\n     *   attr1: {AutoLayout.Attribute},\n     *   relation: {AutoLayout.Relation},\n     *   view2: {String},\n     *   attr2: {AutoLayout.Attribute},\n     *   multiplier: {Number},\n     *   constant: {Number},\n     *   priority: {Number}(0..1000)\n     * }\n     * ```\n     * @param {Array} constraints One or more constraint definitions.\n     * @return {View} this\n     */\n    addConstraints(constraints) {\n        for (var j = 0; j < constraints.length; j++) {\n            _addConstraint.call(this, constraints[j]);\n        }\n        if (!process.env.CASSOWARYJS) {\n            this._solver.updateVariables();\n        }\n        return this;\n    }\n\n    /**\n     * Dictionary of `SubView` objects that have been created when adding constraints.\n     * @readonly\n     * @type {Object.SubView}\n     */\n    get subViews() {\n        return this._subViews;\n    }\n\n    /**\n     * Checks whether the constraints incompletely specify the location\n     * of the subViews.\n     * @private\n     */\n    //get hasAmbiguousLayout() {\n        // Todo\n    //}\n}\n\nexport default View;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/View.js\n **/","/**\n * Parts Copyright (C) 2011-2012, Alex Russell (slightlyoff@chromium.org)\n * Parts Copyright (C) Copyright (C) 1998-2000 Greg J. Badros\n *\n * Use of this source code is governed by the LGPL, which can be found in the\n * COPYING.LGPL file.\n *\n * This is a compiled version of Cassowary/JS. For source versions or to\n * contribute, see the github project:\n *\n *  https://github.com/slightlyoff/cassowary-js-refactor\n *\n */\n\n(function() {\n(function(a){\"use strict\";try{(function(){}).bind(a)}catch(b){Object.defineProperty(Function.prototype,\"bind\",{value:function(a){var b=this;return function(){return b.apply(a,arguments)}},enumerable:!1,configurable:!0,writable:!0})}var c=a.HTMLElement!==void 0,d=function(a){for(var b=null;a&&a!=Object.prototype;){if(a.tagName){b=a.tagName;break}a=a.prototype}return b||\"div\"},e=1e-8,f={},g=function(a,b){if(a&&b){if(\"function\"==typeof a[b])return a[b];var c=a.prototype;if(c&&\"function\"==typeof c[b])return c[b];if(c!==Object.prototype&&c!==Function.prototype)return\"function\"==typeof a.__super__?g(a.__super__,b):void 0}},h=a.c={debug:!1,trace:!1,verbose:!1,traceAdded:!1,GC:!1,GEQ:1,LEQ:2,inherit:function(b){var e=null,g=null;b[\"extends\"]&&(g=b[\"extends\"],delete b[\"extends\"]),b.initialize&&(e=b.initialize,delete b.initialize);var h=e||function(){};Object.defineProperty(h,\"__super__\",{value:g?g:Object,enumerable:!1,configurable:!0,writable:!1}),b._t&&(f[b._t]=h);var i=h.prototype=Object.create(g?g.prototype:Object.prototype);if(this.extend(i,b),c&&g&&g.prototype instanceof a.HTMLElement){var j=h,k=d(i),l=function(a){return a.__proto__=i,j.apply(a,arguments),i.created&&a.created(),i.decorate&&a.decorate(),a};this.extend(i,{upgrade:l}),h=function(){return l(a.document.createElement(k))},h.prototype=i,this.extend(h,{ctor:j})}return h},extend:function(a,b){return this.own(b,function(c){var d=Object.getOwnPropertyDescriptor(b,c);try{\"function\"==typeof d.get||\"function\"==typeof d.set?Object.defineProperty(a,c,d):\"function\"==typeof d.value||\"_\"===c.charAt(0)?(d.writable=!0,d.configurable=!0,d.enumerable=!1,Object.defineProperty(a,c,d)):a[c]=b[c]}catch(e){}}),a},own:function(b,c,d){return Object.getOwnPropertyNames(b).forEach(c,d||a),b},traceprint:function(a){h.verbose&&console.log(a)},fnenterprint:function(a){console.log(\"* \"+a)},fnexitprint:function(a){console.log(\"- \"+a)},assert:function(a,b){if(!a)throw new h.InternalError(\"Assertion failed: \"+b)},plus:function(a,b){return a instanceof h.Expression||(a=new h.Expression(a)),b instanceof h.Expression||(b=new h.Expression(b)),a.plus(b)},minus:function(a,b){return a instanceof h.Expression||(a=new h.Expression(a)),b instanceof h.Expression||(b=new h.Expression(b)),a.minus(b)},times:function(a,b){return(\"number\"==typeof a||a instanceof h.Variable)&&(a=new h.Expression(a)),(\"number\"==typeof b||b instanceof h.Variable)&&(b=new h.Expression(b)),a.times(b)},divide:function(a,b){return(\"number\"==typeof a||a instanceof h.Variable)&&(a=new h.Expression(a)),(\"number\"==typeof b||b instanceof h.Variable)&&(b=new h.Expression(b)),a.divide(b)},approx:function(a,b){if(a===b)return!0;var c,d;return c=a instanceof h.Variable?a.value:a,d=b instanceof h.Variable?b.value:b,0==c?e>Math.abs(d):0==d?e>Math.abs(c):Math.abs(c-d)<Math.abs(c)*e},_inc:function(a){return function(){return a++}}(0),parseJSON:function(a){return JSON.parse(a,function(a,b){if(\"object\"!=typeof b||\"string\"!=typeof b._t)return b;var c=b._t,d=f[c];if(c&&d){var e=g(d,\"fromJSON\");if(e)return e(b,d)}return b})}};\"function\"==typeof require&&\"undefined\"!=typeof module&&\"undefined\"==typeof load&&(a.exports=h)})(this),function(a){\"use strict\";var b=function(a){var b=a.hashCode?a.hashCode:\"\"+a;return b},c=function(a,b){Object.keys(a).forEach(function(c){b[c]=a[c]})},d={};a.HashTable=a.inherit({initialize:function(){this.size=0,this._store={},this._keyStrMap={},this._deleted=0},set:function(a,c){var d=b(a);this._store.hasOwnProperty(d)||this.size++,this._store[d]=c,this._keyStrMap[d]=a},get:function(a){if(!this.size)return null;a=b(a);var c=this._store[a];return c!==void 0?this._store[a]:null},clear:function(){this.size=0,this._store={},this._keyStrMap={}},_compact:function(){var a={};c(this._store,a),this._store=a},_compactThreshold:100,_perhapsCompact:function(){this._size>64||this._deleted>this._compactThreshold&&(this._compact(),this._deleted=0)},\"delete\":function(a){a=b(a),this._store.hasOwnProperty(a)&&(this._deleted++,delete this._store[a],this.size>0&&this.size--)},each:function(a,b){if(this.size){this._perhapsCompact();var c=this._store,d=this._keyStrMap;Object.keys(this._store).forEach(function(e){a.call(b||null,d[e],c[e])},this)}},escapingEach:function(a,b){if(this.size){this._perhapsCompact();for(var c=this,e=this._store,f=this._keyStrMap,g=d,h=Object.keys(e),i=0;h.length>i;i++)if(function(d){c._store.hasOwnProperty(d)&&(g=a.call(b||null,f[d],e[d]))}(h[i]),g){if(void 0!==g.retval)return g;if(g.brk)break}}},clone:function(){var b=new a.HashTable;return this.size&&(b.size=this.size,c(this._store,b._store),c(this._keyStrMap,b._keyStrMap)),b},equals:function(b){if(b===this)return!0;if(!(b instanceof a.HashTable)||b._size!==this._size)return!1;for(var c=Object.keys(this._store),d=0;c.length>d;d++){var e=c[d];if(this._keyStrMap[e]!==b._keyStrMap[e]||this._store[e]!==b._store[e])return!1}return!0},toString:function(){var b=\"\";return this.each(function(a,c){b+=a+\" => \"+c+\"\\n\"}),b}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.HashSet=a.inherit({_t:\"c.HashSet\",initialize:function(){this.storage=[],this.size=0},add:function(a){var b=this.storage;b.indexOf(a),-1==b.indexOf(a)&&b.push(a),this.size=this.storage.length},values:function(){return this.storage},has:function(a){var b=this.storage;return-1!=b.indexOf(a)},\"delete\":function(a){var b=this.storage.indexOf(a);return-1==b?null:(this.storage.splice(b,1)[0],this.size=this.storage.length,void 0)},clear:function(){this.storage.length=0},each:function(a,b){this.size&&this.storage.forEach(a,b)},escapingEach:function(a,b){this.size&&this.storage.forEach(a,b)},toString:function(){var a=this.size+\" {\",b=!0;return this.each(function(c){b?b=!1:a+=\", \",a+=c}),a+=\"}\\n\"},toJSON:function(){var a=[];return this.each(function(b){a.push(b.toJSON())}),{_t:\"c.HashSet\",data:a}},fromJSON:function(b){var c=new a.HashSet;return b.data&&(c.size=b.data.length,c.storage=b.data),c}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.Error=a.inherit({initialize:function(a){a&&(this._description=a)},_name:\"c.Error\",_description:\"An error has occured in Cassowary\",set description(a){this._description=a},get description(){return\"(\"+this._name+\") \"+this._description},get message(){return this.description},toString:function(){return this.description}});var b=function(b,c){return a.inherit({\"extends\":a.Error,initialize:function(){a.Error.apply(this,arguments)},_name:b||\"\",_description:c||\"\"})};a.ConstraintNotFound=b(\"c.ConstraintNotFound\",\"Tried to remove a constraint never added to the tableu\"),a.InternalError=b(\"c.InternalError\"),a.NonExpression=b(\"c.NonExpression\",\"The resulting expression would be non\"),a.NotEnoughStays=b(\"c.NotEnoughStays\",\"There are not enough stays to give specific values to every variable\"),a.RequiredFailure=b(\"c.RequiredFailure\",\"A required constraint cannot be satisfied\"),a.TooDifficult=b(\"c.TooDifficult\",\"The constraints are too difficult to solve\")}(this.c||module.parent.exports||{}),function(a){\"use strict\";var b=1e3;a.SymbolicWeight=a.inherit({_t:\"c.SymbolicWeight\",initialize:function(){this.value=0;for(var a=1,c=arguments.length-1;c>=0;--c)this.value+=arguments[c]*a,a*=b},toJSON:function(){return{_t:this._t,value:this.value}}})}(this.c||module.parent.exports||{}),function(a){a.Strength=a.inherit({initialize:function(b,c,d,e){this.name=b,this.symbolicWeight=c instanceof a.SymbolicWeight?c:new a.SymbolicWeight(c,d,e)},get required(){return this===a.Strength.required},toString:function(){return this.name+(this.isRequired?\"\":\":\"+this.symbolicWeight)}}),a.Strength.required=new a.Strength(\"<Required>\",1e3,1e3,1e3),a.Strength.strong=new a.Strength(\"strong\",1,0,0),a.Strength.medium=new a.Strength(\"medium\",0,1,0),a.Strength.weak=new a.Strength(\"weak\",0,0,1)}(this.c||(\"undefined\"!=typeof module?module.parent.exports.c:{})),function(a){\"use strict\";a.AbstractVariable=a.inherit({isDummy:!1,isExternal:!1,isPivotable:!1,isRestricted:!1,_init:function(b,c){this.hashCode=a._inc(),this.name=(c||\"\")+this.hashCode,b&&(b.name!==void 0&&(this.name=b.name),b.value!==void 0&&(this.value=b.value),b.prefix!==void 0&&(this._prefix=b.prefix))},_prefix:\"\",name:\"\",value:0,toJSON:function(){var a={};return this._t&&(a._t=this._t),this.name&&(a.name=this.name),this.value!==void 0&&(a.value=this.value),this._prefix&&(a._prefix=this._prefix),this._t&&(a._t=this._t),a},fromJSON:function(b,c){var d=new c;return a.extend(d,b),d},toString:function(){return this._prefix+\"[\"+this.name+\":\"+this.value+\"]\"}}),a.Variable=a.inherit({_t:\"c.Variable\",\"extends\":a.AbstractVariable,initialize:function(b){this._init(b,\"v\");var c=a.Variable._map;c&&(c[this.name]=this)},isExternal:!0}),a.DummyVariable=a.inherit({_t:\"c.DummyVariable\",\"extends\":a.AbstractVariable,initialize:function(a){this._init(a,\"d\")},isDummy:!0,isRestricted:!0,value:\"dummy\"}),a.ObjectiveVariable=a.inherit({_t:\"c.ObjectiveVariable\",\"extends\":a.AbstractVariable,initialize:function(a){this._init(a,\"o\")},value:\"obj\"}),a.SlackVariable=a.inherit({_t:\"c.SlackVariable\",\"extends\":a.AbstractVariable,initialize:function(a){this._init(a,\"s\")},isPivotable:!0,isRestricted:!0,value:\"slack\"})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.Point=a.inherit({initialize:function(b,c,d){if(b instanceof a.Variable)this._x=b;else{var e={value:b};d&&(e.name=\"x\"+d),this._x=new a.Variable(e)}if(c instanceof a.Variable)this._y=c;else{var f={value:c};d&&(f.name=\"y\"+d),this._y=new a.Variable(f)}},get x(){return this._x},set x(b){b instanceof a.Variable?this._x=b:this._x.value=b},get y(){return this._y},set y(b){b instanceof a.Variable?this._y=b:this._y.value=b},toString:function(){return\"(\"+this.x+\", \"+this.y+\")\"}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.Expression=a.inherit({initialize:function(b,c,d){a.GC&&console.log(\"new c.Expression\"),this.constant=\"number\"!=typeof d||isNaN(d)?0:d,this.terms=new a.HashTable,b instanceof a.AbstractVariable?this.setVariable(b,\"number\"==typeof c?c:1):\"number\"==typeof b&&(isNaN(b)?console.trace():this.constant=b)},initializeFromHash:function(b,c){return a.verbose&&(console.log(\"*******************************\"),console.log(\"clone c.initializeFromHash\"),console.log(\"*******************************\")),a.GC&&console.log(\"clone c.Expression\"),this.constant=b,this.terms=c.clone(),this},multiplyMe:function(a){this.constant*=a;var b=this.terms;return b.each(function(c,d){b.set(c,d*a)}),this},clone:function(){a.verbose&&(console.log(\"*******************************\"),console.log(\"clone c.Expression\"),console.log(\"*******************************\"));var b=new a.Expression;return b.initializeFromHash(this.constant,this.terms),b},times:function(b){if(\"number\"==typeof b)return this.clone().multiplyMe(b);if(this.isConstant)return b.times(this.constant);if(b.isConstant)return this.times(b.constant);throw new a.NonExpression},plus:function(b){return b instanceof a.Expression?this.clone().addExpression(b,1):b instanceof a.Variable?this.clone().addVariable(b,1):void 0},minus:function(b){return b instanceof a.Expression?this.clone().addExpression(b,-1):b instanceof a.Variable?this.clone().addVariable(b,-1):void 0},divide:function(b){if(\"number\"==typeof b){if(a.approx(b,0))throw new a.NonExpression;return this.times(1/b)}if(b instanceof a.Expression){if(!b.isConstant)throw new a.NonExpression;return this.times(1/b.constant)}},addExpression:function(b,c,d,e){return b instanceof a.AbstractVariable&&(b=new a.Expression(b),a.trace&&console.log(\"addExpression: Had to cast a var to an expression\")),c=c||1,this.constant+=c*b.constant,b.terms.each(function(a,b){this.addVariable(a,b*c,d,e)},this),this},addVariable:function(b,c,d,e){null==c&&(c=1),a.trace&&console.log(\"c.Expression::addVariable():\",b,c);var f=this.terms.get(b);if(f){var g=f+c;0==g||a.approx(g,0)?(e&&e.noteRemovedVariable(b,d),this.terms.delete(b)):this.setVariable(b,g)}else a.approx(c,0)||(this.setVariable(b,c),e&&e.noteAddedVariable(b,d));return this},setVariable:function(a,b){return this.terms.set(a,b),this},anyPivotableVariable:function(){if(this.isConstant)throw new a.InternalError(\"anyPivotableVariable called on a constant\");var b=this.terms.escapingEach(function(a){return a.isPivotable?{retval:a}:void 0});return b&&void 0!==b.retval?b.retval:null},substituteOut:function(b,c,d,e){a.trace&&(a.fnenterprint(\"CLE:substituteOut: \"+b+\", \"+c+\", \"+d+\", ...\"),a.traceprint(\"this = \"+this));var f=this.setVariable.bind(this),g=this.terms,h=g.get(b);g.delete(b),this.constant+=h*c.constant,c.terms.each(function(b,c){var i=g.get(b);if(i){var j=i+h*c;a.approx(j,0)?(e.noteRemovedVariable(b,d),g.delete(b)):f(b,j)}else f(b,h*c),e&&e.noteAddedVariable(b,d)}),a.trace&&a.traceprint(\"Now this is \"+this)},changeSubject:function(a,b){this.setVariable(a,this.newSubject(b))},newSubject:function(b){a.trace&&a.fnenterprint(\"newSubject:\"+b);var c=1/this.terms.get(b);return this.terms.delete(b),this.multiplyMe(-c),c},coefficientFor:function(a){return this.terms.get(a)||0},get isConstant(){return 0==this.terms.size},toString:function(){var b=\"\",c=!1;if(!a.approx(this.constant,0)||this.isConstant){if(b+=this.constant,this.isConstant)return b;c=!0}return this.terms.each(function(a,d){c&&(b+=\" + \"),b+=d+\"*\"+a,c=!0}),b},equals:function(b){return b===this?!0:b instanceof a.Expression&&b.constant===this.constant&&b.terms.equals(this.terms)},Plus:function(a,b){return a.plus(b)},Minus:function(a,b){return a.minus(b)},Times:function(a,b){return a.times(b)},Divide:function(a,b){return a.divide(b)}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.AbstractConstraint=a.inherit({initialize:function(b,c){this.hashCode=a._inc(),this.strength=b||a.Strength.required,this.weight=c||1},isEditConstraint:!1,isInequality:!1,isStayConstraint:!1,get required(){return this.strength===a.Strength.required},toString:function(){return this.strength+\" {\"+this.weight+\"} (\"+this.expression+\")\"}});var b=a.AbstractConstraint.prototype.toString,c=function(b,c,d){a.AbstractConstraint.call(this,c||a.Strength.strong,d),this.variable=b,this.expression=new a.Expression(b,-1,b.value)};a.EditConstraint=a.inherit({\"extends\":a.AbstractConstraint,initialize:function(){c.apply(this,arguments)},isEditConstraint:!0,toString:function(){return\"edit:\"+b.call(this)}}),a.StayConstraint=a.inherit({\"extends\":a.AbstractConstraint,initialize:function(){c.apply(this,arguments)},isStayConstraint:!0,toString:function(){return\"stay:\"+b.call(this)}});var d=a.Constraint=a.inherit({\"extends\":a.AbstractConstraint,initialize:function(b,c,d){a.AbstractConstraint.call(this,c,d),this.expression=b}});a.Inequality=a.inherit({\"extends\":a.Constraint,_cloneOrNewCle:function(b){return b.clone?b.clone():new a.Expression(b)},initialize:function(b,c,e,f,g){var h=b instanceof a.Expression,i=e instanceof a.Expression,j=b instanceof a.AbstractVariable,k=e instanceof a.AbstractVariable,l=\"number\"==typeof b,m=\"number\"==typeof e;if((h||l)&&k){var n=b,o=c,p=e,q=f,r=g;if(d.call(this,this._cloneOrNewCle(n),q,r),o==a.LEQ)this.expression.multiplyMe(-1),this.expression.addVariable(p);else{if(o!=a.GEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");this.expression.addVariable(p,-1)}}else if(j&&(i||m)){var n=e,o=c,p=b,q=f,r=g;if(d.call(this,this._cloneOrNewCle(n),q,r),o==a.GEQ)this.expression.multiplyMe(-1),this.expression.addVariable(p);else{if(o!=a.LEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");this.expression.addVariable(p,-1)}}else{if(h&&m){var s=b,o=c,t=e,q=f,r=g;if(d.call(this,this._cloneOrNewCle(s),q,r),o==a.LEQ)this.expression.multiplyMe(-1),this.expression.addExpression(this._cloneOrNewCle(t));else{if(o!=a.GEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");this.expression.addExpression(this._cloneOrNewCle(t),-1)}return this}if(l&&i){var s=e,o=c,t=b,q=f,r=g;if(d.call(this,this._cloneOrNewCle(s),q,r),o==a.GEQ)this.expression.multiplyMe(-1),this.expression.addExpression(this._cloneOrNewCle(t));else{if(o!=a.LEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");this.expression.addExpression(this._cloneOrNewCle(t),-1)}return this}if(h&&i){var s=b,o=c,t=e,q=f,r=g;if(d.call(this,this._cloneOrNewCle(t),q,r),o==a.GEQ)this.expression.multiplyMe(-1),this.expression.addExpression(this._cloneOrNewCle(s));else{if(o!=a.LEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");this.expression.addExpression(this._cloneOrNewCle(s),-1)}}else{if(h)return d.call(this,b,c,e);if(c==a.GEQ)d.call(this,new a.Expression(e),f,g),this.expression.multiplyMe(-1),this.expression.addVariable(b);else{if(c!=a.LEQ)throw new a.InternalError(\"Invalid operator in c.Inequality constructor\");d.call(this,new a.Expression(e),f,g),this.expression.addVariable(b,-1)}}}},isInequality:!0,toString:function(){return d.prototype.toString.call(this)+\" >= 0) id: \"+this.hashCode}}),a.Equation=a.inherit({\"extends\":a.Constraint,initialize:function(b,c,e,f){if(b instanceof a.Expression&&!c||c instanceof a.Strength)d.call(this,b,c,e);else if(b instanceof a.AbstractVariable&&c instanceof a.Expression){var g=b,h=c,i=e,j=f;d.call(this,h.clone(),i,j),this.expression.addVariable(g,-1)}else if(b instanceof a.AbstractVariable&&\"number\"==typeof c){var g=b,k=c,i=e,j=f;d.call(this,new a.Expression(k),i,j),this.expression.addVariable(g,-1)}else if(b instanceof a.Expression&&c instanceof a.AbstractVariable){var h=b,g=c,i=e,j=f;d.call(this,h.clone(),i,j),this.expression.addVariable(g,-1)}else{if(!(b instanceof a.Expression||b instanceof a.AbstractVariable||\"number\"==typeof b)||!(c instanceof a.Expression||c instanceof a.AbstractVariable||\"number\"==typeof c))throw\"Bad initializer to c.Equation\";b=b instanceof a.Expression?b.clone():new a.Expression(b),c=c instanceof a.Expression?c.clone():new a.Expression(c),d.call(this,b,e,f),this.expression.addExpression(c,-1)}a.assert(this.strength instanceof a.Strength,\"_strength not set\")},toString:function(){return d.prototype.toString.call(this)+\" = 0)\"}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.EditInfo=a.inherit({initialize:function(a,b,c,d,e){this.constraint=a,this.editPlus=b,this.editMinus=c,this.prevEditConstant=d,this.index=e},toString:function(){return\"<cn=\"+this.constraint+\", ep=\"+this.editPlus+\", em=\"+this.editMinus+\", pec=\"+this.prevEditConstant+\", index=\"+this.index+\">\"}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.Tableau=a.inherit({initialize:function(){this.columns=new a.HashTable,this.rows=new a.HashTable,this._infeasibleRows=new a.HashSet,this._externalRows=new a.HashSet,this._externalParametricVars=new a.HashSet},noteRemovedVariable:function(b,c){a.trace&&console.log(\"c.Tableau::noteRemovedVariable: \",b,c);var d=this.columns.get(b);c&&d&&d.delete(c)},noteAddedVariable:function(a,b){b&&this.insertColVar(a,b)},getInternalInfo:function(){var a=\"Tableau Information:\\n\";return a+=\"Rows: \"+this.rows.size,a+=\" (= \"+(this.rows.size-1)+\" constraints)\",a+=\"\\nColumns: \"+this.columns.size,a+=\"\\nInfeasible Rows: \"+this._infeasibleRows.size,a+=\"\\nExternal basic variables: \"+this._externalRows.size,a+=\"\\nExternal parametric variables: \",a+=this._externalParametricVars.size,a+=\"\\n\"},toString:function(){var a=\"Tableau:\\n\";return this.rows.each(function(b,c){a+=b,a+=\" <==> \",a+=c,a+=\"\\n\"}),a+=\"\\nColumns:\\n\",a+=this.columns,a+=\"\\nInfeasible rows: \",a+=this._infeasibleRows,a+=\"External basic variables: \",a+=this._externalRows,a+=\"External parametric variables: \",a+=this._externalParametricVars},insertColVar:function(b,c){var d=this.columns.get(b);d||(d=new a.HashSet,this.columns.set(b,d)),d.add(c)},addRow:function(b,c){a.trace&&a.fnenterprint(\"addRow: \"+b+\", \"+c),this.rows.set(b,c),c.terms.each(function(a){this.insertColVar(a,b),a.isExternal&&this._externalParametricVars.add(a)},this),b.isExternal&&this._externalRows.add(b),a.trace&&a.traceprint(\"\"+this)},removeColumn:function(b){a.trace&&a.fnenterprint(\"removeColumn:\"+b);var c=this.columns.get(b);c?(this.columns.delete(b),c.each(function(a){var c=this.rows.get(a);c.terms.delete(b)},this)):a.trace&&console.log(\"Could not find var\",b,\"in columns\"),b.isExternal&&(this._externalRows.delete(b),this._externalParametricVars.delete(b))},removeRow:function(b){a.trace&&a.fnenterprint(\"removeRow:\"+b);var c=this.rows.get(b);return a.assert(null!=c),c.terms.each(function(c){var e=this.columns.get(c);null!=e&&(a.trace&&console.log(\"removing from varset:\",b),e.delete(b))},this),this._infeasibleRows.delete(b),b.isExternal&&this._externalRows.delete(b),this.rows.delete(b),a.trace&&a.fnexitprint(\"returning \"+c),c},substituteOut:function(b,c){a.trace&&a.fnenterprint(\"substituteOut:\"+b+\", \"+c),a.trace&&a.traceprint(\"\"+this);var d=this.columns.get(b);d.each(function(a){var d=this.rows.get(a);d.substituteOut(b,c,a,this),a.isRestricted&&0>d.constant&&this._infeasibleRows.add(a)},this),b.isExternal&&(this._externalRows.add(b),this._externalParametricVars.delete(b)),this.columns.delete(b)},columnsHasKey:function(a){return!!this.columns.get(a)}})}(this.c||module.parent.exports||{}),function(a){var b=a.Tableau,c=b.prototype,d=1e-8,e=a.Strength.weak;a.SimplexSolver=a.inherit({\"extends\":a.Tableau,initialize:function(){a.Tableau.call(this),this._stayMinusErrorVars=[],this._stayPlusErrorVars=[],this._errorVars=new a.HashTable,this._markerVars=new a.HashTable,this._objective=new a.ObjectiveVariable({name:\"Z\"}),this._editVarMap=new a.HashTable,this._editVarList=[],this._slackCounter=0,this._artificialCounter=0,this._dummyCounter=0,this.autoSolve=!0,this._fNeedsSolving=!1,this._optimizeCount=0,this.rows.set(this._objective,new a.Expression),this._stkCedcns=[0],a.trace&&a.traceprint(\"objective expr == \"+this.rows.get(this._objective))},addLowerBound:function(b,c){var d=new a.Inequality(b,a.GEQ,new a.Expression(c));return this.addConstraint(d)},addUpperBound:function(b,c){var d=new a.Inequality(b,a.LEQ,new a.Expression(c));return this.addConstraint(d)},addBounds:function(a,b,c){return this.addLowerBound(a,b),this.addUpperBound(a,c),this},add:function(){for(var a=0;arguments.length>a;a++)this.addConstraint(arguments[a]);return this},addConstraint:function(b){a.trace&&a.fnenterprint(\"addConstraint: \"+b);var c=Array(2),d=Array(1),e=this.newExpression(b,c,d);if(d=d[0],this.tryAddingDirectly(e)||this.addWithArtificialVariable(e),this._fNeedsSolving=!0,b.isEditConstraint){var f=this._editVarMap.size,g=c[0],h=c[1];!g instanceof a.SlackVariable&&console.warn(\"cvEplus not a slack variable =\",g),!h instanceof a.SlackVariable&&console.warn(\"cvEminus not a slack variable =\",h),a.debug&&console.log(\"new c.EditInfo(\"+b+\", \"+g+\", \"+h+\", \"+d+\", \"+f+\")\");var i=new a.EditInfo(b,g,h,d,f);this._editVarMap.set(b.variable,i),this._editVarList[f]={v:b.variable,info:i}}return this.autoSolve&&(this.optimize(this._objective),this._setExternalVariables()),this},addConstraintNoException:function(b){a.trace&&a.fnenterprint(\"addConstraintNoException: \"+b);try{return this.addConstraint(b),!0}catch(c){return!1}},addEditVar:function(b,c){return a.trace&&a.fnenterprint(\"addEditVar: \"+b+\" @ \"+c),this.addConstraint(new a.EditConstraint(b,c||a.Strength.strong))},beginEdit:function(){return a.assert(this._editVarMap.size>0,\"_editVarMap.size > 0\"),this._infeasibleRows.clear(),this._resetStayConstants(),this._stkCedcns.push(this._editVarMap.size),this},endEdit:function(){return a.assert(this._editVarMap.size>0,\"_editVarMap.size > 0\"),this.resolve(),this._stkCedcns.pop(),this.removeEditVarsTo(this._stkCedcns[this._stkCedcns.length-1]),this},removeAllEditVars:function(){return this.removeEditVarsTo(0)},removeEditVarsTo:function(b){try{for(var c=this._editVarList.length,d=b;c>d;d++)this._editVarList[d]&&this.removeConstraint(this._editVarMap.get(this._editVarList[d].v).constraint);return this._editVarList.length=b,a.assert(this._editVarMap.size==b,\"_editVarMap.size == n\"),this}catch(e){throw new a.InternalError(\"Constraint not found in removeEditVarsTo\")}},addPointStays:function(b){return a.trace&&console.log(\"addPointStays\",b),b.forEach(function(a,b){this.addStay(a.x,e,Math.pow(2,b)),this.addStay(a.y,e,Math.pow(2,b))},this),this},addStay:function(b,c,d){var f=new a.StayConstraint(b,c||e,d||1);return this.addConstraint(f)},removeConstraint:function(a){return this.removeConstraintInternal(a),this},removeConstraintInternal:function(b){a.trace&&a.fnenterprint(\"removeConstraintInternal: \"+b),a.trace&&a.traceprint(\"\"+this),this._fNeedsSolving=!0,this._resetStayConstants();var c=this.rows.get(this._objective),d=this._errorVars.get(b);a.trace&&a.traceprint(\"eVars == \"+d),null!=d&&d.each(function(e){var f=this.rows.get(e);null==f?c.addVariable(e,-b.weight*b.strength.symbolicWeight.value,this._objective,this):c.addExpression(f,-b.weight*b.strength.symbolicWeight.value,this._objective,this),a.trace&&a.traceprint(\"now eVars == \"+d)},this);var e=this._markerVars.get(b);if(this._markerVars.delete(b),null==e)throw new a.InternalError(\"Constraint not found in removeConstraintInternal\");if(a.trace&&a.traceprint(\"Looking to remove var \"+e),null==this.rows.get(e)){var f=this.columns.get(e);a.trace&&a.traceprint(\"Must pivot -- columns are \"+f);var g=null,h=0;f.each(function(b){if(b.isRestricted){var c=this.rows.get(b),d=c.coefficientFor(e);if(a.trace&&a.traceprint(\"Marker \"+e+\"'s coefficient in \"+c+\" is \"+d),0>d){var f=-c.constant/d;(null==g||h>f||a.approx(f,h)&&b.hashCode<g.hashCode)&&(h=f,g=b)}}},this),null==g&&(a.trace&&a.traceprint(\"exitVar is still null\"),f.each(function(a){if(a.isRestricted){var b=this.rows.get(a),c=b.coefficientFor(e),d=b.constant/c;(null==g||h>d)&&(h=d,g=a)}},this)),null==g&&(0==f.size?this.removeColumn(e):f.escapingEach(function(a){return a!=this._objective?(g=a,{brk:!0}):void 0},this)),null!=g&&this.pivot(e,g)}if(null!=this.rows.get(e)&&this.removeRow(e),null!=d&&d.each(function(a){a!=e&&this.removeColumn(a)},this),b.isStayConstraint){if(null!=d)for(var j=0;this._stayPlusErrorVars.length>j;j++)d.delete(this._stayPlusErrorVars[j]),d.delete(this._stayMinusErrorVars[j])}else if(b.isEditConstraint){a.assert(null!=d,\"eVars != null\");var k=this._editVarMap.get(b.variable);this.removeColumn(k.editMinus),this._editVarMap.delete(b.variable)}return null!=d&&this._errorVars.delete(d),this.autoSolve&&(this.optimize(this._objective),this._setExternalVariables()),this},reset:function(){throw a.trace&&a.fnenterprint(\"reset\"),new a.InternalError(\"reset not implemented\")},resolveArray:function(b){a.trace&&a.fnenterprint(\"resolveArray\"+b);var c=b.length;this._editVarMap.each(function(a,d){var e=d.index;c>e&&this.suggestValue(a,b[e])},this),this.resolve()},resolvePair:function(a,b){this.suggestValue(this._editVarList[0].v,a),this.suggestValue(this._editVarList[1].v,b),this.resolve()},resolve:function(){a.trace&&a.fnenterprint(\"resolve()\"),this.dualOptimize(),this._setExternalVariables(),this._infeasibleRows.clear(),this._resetStayConstants()},suggestValue:function(b,c){a.trace&&console.log(\"suggestValue(\"+b+\", \"+c+\")\");var d=this._editVarMap.get(b);if(!d)throw new a.Error(\"suggestValue for variable \"+b+\", but var is not an edit variable\");var e=c-d.prevEditConstant;return d.prevEditConstant=c,this.deltaEditConstant(e,d.editPlus,d.editMinus),this},solve:function(){return this._fNeedsSolving&&(this.optimize(this._objective),this._setExternalVariables()),this},setEditedValue:function(b,c){if(!this.columnsHasKey(b)&&null==this.rows.get(b))return b.value=c,this;if(!a.approx(c,b.value)){this.addEditVar(b),this.beginEdit();try{this.suggestValue(b,c)}catch(d){throw new a.InternalError(\"Error in setEditedValue\")}this.endEdit()}return this},addVar:function(b){if(!this.columnsHasKey(b)&&null==this.rows.get(b)){try{this.addStay(b)}catch(c){throw new a.InternalError(\"Error in addVar -- required failure is impossible\")}a.trace&&a.traceprint(\"added initial stay on \"+b)}return this},getInternalInfo:function(){var a=c.getInternalInfo.call(this);return a+=\"\\nSolver info:\\n\",a+=\"Stay Error Variables: \",a+=this._stayPlusErrorVars.length+this._stayMinusErrorVars.length,a+=\" (\"+this._stayPlusErrorVars.length+\" +, \",a+=this._stayMinusErrorVars.length+\" -)\\n\",a+=\"Edit Variables: \"+this._editVarMap.size,a+=\"\\n\"},getDebugInfo:function(){return\"\"+this+this.getInternalInfo()+\"\\n\"},toString:function(){var a=c.getInternalInfo.call(this);return a+=\"\\n_stayPlusErrorVars: \",a+=\"[\"+this._stayPlusErrorVars+\"]\",a+=\"\\n_stayMinusErrorVars: \",a+=\"[\"+this._stayMinusErrorVars+\"]\",a+=\"\\n\",a+=\"_editVarMap:\\n\"+this._editVarMap,a+=\"\\n\"},getConstraintMap:function(){return this._markerVars},addWithArtificialVariable:function(b){a.trace&&a.fnenterprint(\"addWithArtificialVariable: \"+b);var c=new a.SlackVariable({value:++this._artificialCounter,prefix:\"a\"}),d=new a.ObjectiveVariable({name:\"az\"}),e=b.clone();a.trace&&a.traceprint(\"before addRows:\\n\"+this),this.addRow(d,e),this.addRow(c,b),a.trace&&a.traceprint(\"after addRows:\\n\"+this),this.optimize(d);var f=this.rows.get(d);if(a.trace&&a.traceprint(\"azTableauRow.constant == \"+f.constant),!a.approx(f.constant,0))throw this.removeRow(d),this.removeColumn(c),new a.RequiredFailure;var g=this.rows.get(c);if(null!=g){if(g.isConstant)return this.removeRow(c),this.removeRow(d),void 0;var h=g.anyPivotableVariable();this.pivot(h,c)}a.assert(null==this.rows.get(c),\"rowExpression(av) == null\"),this.removeColumn(c),this.removeRow(d)},tryAddingDirectly:function(b){a.trace&&a.fnenterprint(\"tryAddingDirectly: \"+b);var c=this.chooseSubject(b);return null==c?(a.trace&&a.fnexitprint(\"returning false\"),!1):(b.newSubject(c),this.columnsHasKey(c)&&this.substituteOut(c,b),this.addRow(c,b),a.trace&&a.fnexitprint(\"returning true\"),!0)},chooseSubject:function(b){a.trace&&a.fnenterprint(\"chooseSubject: \"+b);var c=null,d=!1,e=!1,f=b.terms,g=f.escapingEach(function(a,b){if(d){if(!a.isRestricted&&!this.columnsHasKey(a))return{retval:a}}else if(a.isRestricted){if(!e&&!a.isDummy&&0>b){var f=this.columns.get(a);(null==f||1==f.size&&this.columnsHasKey(this._objective))&&(c=a,e=!0)}}else c=a,d=!0},this);if(g&&void 0!==g.retval)return g.retval;if(null!=c)return c;var h=0,g=f.escapingEach(function(a,b){return a.isDummy?(this.columnsHasKey(a)||(c=a,h=b),void 0):{retval:null}},this);if(g&&void 0!==g.retval)return g.retval;if(!a.approx(b.constant,0))throw new a.RequiredFailure;return h>0&&b.multiplyMe(-1),c},deltaEditConstant:function(b,c,d){a.trace&&a.fnenterprint(\"deltaEditConstant :\"+b+\", \"+c+\", \"+d);var e=this.rows.get(c);if(null!=e)return e.constant+=b,0>e.constant&&this._infeasibleRows.add(c),void 0;var f=this.rows.get(d);if(null!=f)return f.constant+=-b,0>f.constant&&this._infeasibleRows.add(d),void 0;var g=this.columns.get(d);g||console.log(\"columnVars is null -- tableau is:\\n\"+this),g.each(function(a){var c=this.rows.get(a),e=c.coefficientFor(d);c.constant+=e*b,a.isRestricted&&0>c.constant&&this._infeasibleRows.add(a)},this)},dualOptimize:function(){a.trace&&a.fnenterprint(\"dualOptimize:\");for(var b=this.rows.get(this._objective);this._infeasibleRows.size;){var c=this._infeasibleRows.values()[0];this._infeasibleRows.delete(c);var d=null,e=this.rows.get(c);if(e&&0>e.constant){var g,f=Number.MAX_VALUE,h=e.terms;if(h.each(function(c,e){if(e>0&&c.isPivotable){var h=b.coefficientFor(c);g=h/e,(f>g||a.approx(g,f)&&c.hashCode<d.hashCode)&&(d=c,f=g)}}),f==Number.MAX_VALUE)throw new a.InternalError(\"ratio == nil (MAX_VALUE) in dualOptimize\");this.pivot(d,c)}}},newExpression:function(b,c,d){a.trace&&(a.fnenterprint(\"newExpression: \"+b),a.traceprint(\"cn.isInequality == \"+b.isInequality),a.traceprint(\"cn.required == \"+b.required));var e=b.expression,f=new a.Expression(e.constant),g=new a.SlackVariable,h=new a.DummyVariable,i=new a.SlackVariable,j=new a.SlackVariable,k=e.terms;if(k.each(function(a,b){var c=this.rows.get(a);c?f.addExpression(c,b):f.addVariable(a,b)},this),b.isInequality){if(a.trace&&a.traceprint(\"Inequality, adding slack\"),++this._slackCounter,g=new a.SlackVariable({value:this._slackCounter,prefix:\"s\"}),f.setVariable(g,-1),this._markerVars.set(b,g),!b.required){++this._slackCounter,i=new a.SlackVariable({value:this._slackCounter,prefix:\"em\"}),f.setVariable(i,1);\nvar l=this.rows.get(this._objective);l.setVariable(i,b.strength.symbolicWeight.value*b.weight),this.insertErrorVar(b,i),this.noteAddedVariable(i,this._objective)}}else if(b.required)a.trace&&a.traceprint(\"Equality, required\"),++this._dummyCounter,h=new a.DummyVariable({value:this._dummyCounter,prefix:\"d\"}),f.setVariable(h,1),this._markerVars.set(b,h),a.trace&&a.traceprint(\"Adding dummyVar == d\"+this._dummyCounter);else{a.trace&&a.traceprint(\"Equality, not required\"),++this._slackCounter,j=new a.SlackVariable({value:this._slackCounter,prefix:\"ep\"}),i=new a.SlackVariable({value:this._slackCounter,prefix:\"em\"}),f.setVariable(j,-1),f.setVariable(i,1),this._markerVars.set(b,j);var l=this.rows.get(this._objective);a.trace&&console.log(l);var m=b.strength.symbolicWeight.value*b.weight;0==m&&(a.trace&&a.traceprint(\"cn == \"+b),a.trace&&a.traceprint(\"adding \"+j+\" and \"+i+\" with swCoeff == \"+m)),l.setVariable(j,m),this.noteAddedVariable(j,this._objective),l.setVariable(i,m),this.noteAddedVariable(i,this._objective),this.insertErrorVar(b,i),this.insertErrorVar(b,j),b.isStayConstraint?(this._stayPlusErrorVars.push(j),this._stayMinusErrorVars.push(i)):b.isEditConstraint&&(c[0]=j,c[1]=i,d[0]=e.constant)}return 0>f.constant&&f.multiplyMe(-1),a.trace&&a.fnexitprint(\"returning \"+f),f},optimize:function(b){a.trace&&a.fnenterprint(\"optimize: \"+b),a.trace&&a.traceprint(\"\"+this),this._optimizeCount++;var c=this.rows.get(b);a.assert(null!=c,\"zRow != null\");for(var g,h,e=null,f=null;;){if(g=0,h=c.terms,h.escapingEach(function(a,b){return a.isPivotable&&g>b?(g=b,e=a,{brk:1}):void 0},this),g>=-d)return;a.trace&&console.log(\"entryVar:\",e,\"objectiveCoeff:\",g);var i=Number.MAX_VALUE,j=this.columns.get(e),k=0;if(j.each(function(b){if(a.trace&&a.traceprint(\"Checking \"+b),b.isPivotable){var c=this.rows.get(b),d=c.coefficientFor(e);a.trace&&a.traceprint(\"pivotable, coeff = \"+d),0>d&&(k=-c.constant/d,(i>k||a.approx(k,i)&&b.hashCode<f.hashCode)&&(i=k,f=b))}},this),i==Number.MAX_VALUE)throw new a.InternalError(\"Objective function is unbounded in optimize\");this.pivot(e,f),a.trace&&a.traceprint(\"\"+this)}},pivot:function(b,c){a.trace&&console.log(\"pivot: \",b,c);var d=!1;d&&console.time(\" SimplexSolver::pivot\"),null==b&&console.warn(\"pivot: entryVar == null\"),null==c&&console.warn(\"pivot: exitVar == null\"),d&&console.time(\"  removeRow\");var e=this.removeRow(c);d&&console.timeEnd(\"  removeRow\"),d&&console.time(\"  changeSubject\"),e.changeSubject(c,b),d&&console.timeEnd(\"  changeSubject\"),d&&console.time(\"  substituteOut\"),this.substituteOut(b,e),d&&console.timeEnd(\"  substituteOut\"),d&&console.time(\"  addRow\"),this.addRow(b,e),d&&console.timeEnd(\"  addRow\"),d&&console.timeEnd(\" SimplexSolver::pivot\")},_resetStayConstants:function(){a.trace&&console.log(\"_resetStayConstants\");for(var b=0;this._stayPlusErrorVars.length>b;b++){var c=this.rows.get(this._stayPlusErrorVars[b]);null==c&&(c=this.rows.get(this._stayMinusErrorVars[b])),null!=c&&(c.constant=0)}},_setExternalVariables:function(){a.trace&&a.fnenterprint(\"_setExternalVariables:\"),a.trace&&a.traceprint(\"\"+this),this._externalParametricVars.each(function(b){null!=this.rows.get(b)?a.trace&&console.log(\"Error: variable\"+b+\" in _externalParametricVars is basic\"):b.value=0},this),this._externalRows.each(function(a){var b=this.rows.get(a);a.value!=b.constant&&(a.value=b.constant)},this),this._fNeedsSolving=!1,this.onsolved()},onsolved:function(){},insertErrorVar:function(b,c){a.trace&&a.fnenterprint(\"insertErrorVar:\"+b+\", \"+c);var d=this._errorVars.get(c);d||(d=new a.HashSet,this._errorVars.set(b,d)),d.add(c)}})}(this.c||module.parent.exports||{}),function(a){\"use strict\";a.Timer=a.inherit({initialize:function(){this.isRunning=!1,this._elapsedMs=0},start:function(){return this.isRunning=!0,this._startReading=new Date,this},stop:function(){return this.isRunning=!1,this._elapsedMs+=new Date-this._startReading,this},reset:function(){return this.isRunning=!1,this._elapsedMs=0,this},elapsedTime:function(){return this.isRunning?(this._elapsedMs+(new Date-this._startReading))/1e3:this._elapsedMs/1e3}})}(this.c||module.parent.exports||{}),__cassowary_parser=function(){function a(a){return'\"'+a.replace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"').replace(/\\x08/g,\"\\\\b\").replace(/\\t/g,\"\\\\t\").replace(/\\n/g,\"\\\\n\").replace(/\\f/g,\"\\\\f\").replace(/\\r/g,\"\\\\r\").replace(/[\\x00-\\x07\\x0B\\x0E-\\x1F\\x80-\\uFFFF]/g,escape)+'\"'}var b={parse:function(b,c){function k(a){g>e||(e>g&&(g=e,h=[]),h.push(a))}function l(){var a,b,c,d,f;if(d=e,f=e,a=z(),null!==a){if(c=m(),null!==c)for(b=[];null!==c;)b.push(c),c=m();else b=null;null!==b?(c=z(),null!==c?a=[a,b,c]:(a=null,e=f)):(a=null,e=f)}else a=null,e=f;return null!==a&&(a=function(a,b){return b}(d,a[1])),null===a&&(e=d),a}function m(){var a,b,c,d;return c=e,d=e,a=P(),null!==a?(b=s(),null!==b?a=[a,b]:(a=null,e=d)):(a=null,e=d),null!==a&&(a=function(a,b){return b}(c,a[0])),null===a&&(e=c),a}function n(){var a;return b.length>e?(a=b.charAt(e),e++):(a=null,0===f&&k(\"any character\")),a}function o(){var a;return/^[a-zA-Z]/.test(b.charAt(e))?(a=b.charAt(e),e++):(a=null,0===f&&k(\"[a-zA-Z]\")),null===a&&(36===b.charCodeAt(e)?(a=\"$\",e++):(a=null,0===f&&k('\"$\"')),null===a&&(95===b.charCodeAt(e)?(a=\"_\",e++):(a=null,0===f&&k('\"_\"')))),a}function p(){var a;return f++,/^[\\t\\x0B\\f \\xA0\\uFEFF]/.test(b.charAt(e))?(a=b.charAt(e),e++):(a=null,0===f&&k(\"[\\\\t\\\\x0B\\\\f \\\\xA0\\\\uFEFF]\")),f--,0===f&&null===a&&k(\"whitespace\"),a}function q(){var a;return/^[\\n\\r\\u2028\\u2029]/.test(b.charAt(e))?(a=b.charAt(e),e++):(a=null,0===f&&k(\"[\\\\n\\\\r\\\\u2028\\\\u2029]\")),a}function r(){var a;return f++,10===b.charCodeAt(e)?(a=\"\\n\",e++):(a=null,0===f&&k('\"\\\\n\"')),null===a&&(\"\\r\\n\"===b.substr(e,2)?(a=\"\\r\\n\",e+=2):(a=null,0===f&&k('\"\\\\r\\\\n\"')),null===a&&(13===b.charCodeAt(e)?(a=\"\\r\",e++):(a=null,0===f&&k('\"\\\\r\"')),null===a&&(8232===b.charCodeAt(e)?(a=\"\\u2028\",e++):(a=null,0===f&&k('\"\\\\u2028\"')),null===a&&(8233===b.charCodeAt(e)?(a=\"\\u2029\",e++):(a=null,0===f&&k('\"\\\\u2029\"')))))),f--,0===f&&null===a&&k(\"end of line\"),a}function s(){var a,c,d;return d=e,a=z(),null!==a?(59===b.charCodeAt(e)?(c=\";\",e++):(c=null,0===f&&k('\";\"')),null!==c?a=[a,c]:(a=null,e=d)):(a=null,e=d),null===a&&(d=e,a=y(),null!==a?(c=r(),null!==c?a=[a,c]:(a=null,e=d)):(a=null,e=d),null===a&&(d=e,a=z(),null!==a?(c=t(),null!==c?a=[a,c]:(a=null,e=d)):(a=null,e=d))),a}function t(){var a,c;return c=e,f++,b.length>e?(a=b.charAt(e),e++):(a=null,0===f&&k(\"any character\")),f--,null===a?a=\"\":(a=null,e=c),a}function u(){var a;return f++,a=v(),null===a&&(a=x()),f--,0===f&&null===a&&k(\"comment\"),a}function v(){var a,c,d,g,h,i,j;if(h=e,\"/*\"===b.substr(e,2)?(a=\"/*\",e+=2):(a=null,0===f&&k('\"/*\"')),null!==a){for(c=[],i=e,j=e,f++,\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==d;)c.push(d),i=e,j=e,f++,\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==c?(\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),null!==d?a=[a,c,d]:(a=null,e=h)):(a=null,e=h)}else a=null,e=h;return a}function w(){var a,c,d,g,h,i,j;if(h=e,\"/*\"===b.substr(e,2)?(a=\"/*\",e+=2):(a=null,0===f&&k('\"/*\"')),null!==a){for(c=[],i=e,j=e,f++,\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),null===d&&(d=q()),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==d;)c.push(d),i=e,j=e,f++,\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),null===d&&(d=q()),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==c?(\"*/\"===b.substr(e,2)?(d=\"*/\",e+=2):(d=null,0===f&&k('\"*/\"')),null!==d?a=[a,c,d]:(a=null,e=h)):(a=null,e=h)}else a=null,e=h;return a}function x(){var a,c,d,g,h,i,j;if(h=e,\"//\"===b.substr(e,2)?(a=\"//\",e+=2):(a=null,0===f&&k('\"//\"')),null!==a){for(c=[],i=e,j=e,f++,d=q(),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==d;)c.push(d),i=e,j=e,f++,d=q(),f--,null===d?d=\"\":(d=null,e=j),null!==d?(g=n(),null!==g?d=[d,g]:(d=null,e=i)):(d=null,e=i);null!==c?a=[a,c]:(a=null,e=h)}else a=null,e=h;return a}function y(){var a,b;for(a=[],b=p(),null===b&&(b=w(),null===b&&(b=x()));null!==b;)a.push(b),b=p(),null===b&&(b=w(),null===b&&(b=x()));return a}function z(){var a,b;for(a=[],b=p(),null===b&&(b=r(),null===b&&(b=u()));null!==b;)a.push(b),b=p(),null===b&&(b=r(),null===b&&(b=u()));return a}function A(){var a,b;return b=e,a=C(),null===a&&(a=B()),null!==a&&(a=function(a,b){return{type:\"NumericLiteral\",value:b}}(b,a)),null===a&&(e=b),a}function B(){var a,c,d;if(d=e,/^[0-9]/.test(b.charAt(e))?(c=b.charAt(e),e++):(c=null,0===f&&k(\"[0-9]\")),null!==c)for(a=[];null!==c;)a.push(c),/^[0-9]/.test(b.charAt(e))?(c=b.charAt(e),e++):(c=null,0===f&&k(\"[0-9]\"));else a=null;return null!==a&&(a=function(a,b){return parseInt(b.join(\"\"))}(d,a)),null===a&&(e=d),a}function C(){var a,c,d,g,h;return g=e,h=e,a=B(),null!==a?(46===b.charCodeAt(e)?(c=\".\",e++):(c=null,0===f&&k('\".\"')),null!==c?(d=B(),null!==d?a=[a,c,d]:(a=null,e=h)):(a=null,e=h)):(a=null,e=h),null!==a&&(a=function(a,b){return parseFloat(b.join(\"\"))}(g,a)),null===a&&(e=g),a}function D(){var a,c,d,g;if(g=e,/^[\\-+]/.test(b.charAt(e))?(a=b.charAt(e),e++):(a=null,0===f&&k(\"[\\\\-+]\")),a=null!==a?a:\"\",null!==a){if(/^[0-9]/.test(b.charAt(e))?(d=b.charAt(e),e++):(d=null,0===f&&k(\"[0-9]\")),null!==d)for(c=[];null!==d;)c.push(d),/^[0-9]/.test(b.charAt(e))?(d=b.charAt(e),e++):(d=null,0===f&&k(\"[0-9]\"));else c=null;null!==c?a=[a,c]:(a=null,e=g)}else a=null,e=g;return a}function E(){var a,b;return f++,b=e,a=F(),null!==a&&(a=function(a,b){return b}(b,a)),null===a&&(e=b),f--,0===f&&null===a&&k(\"identifier\"),a}function F(){var a,b,c,d,g;if(f++,d=e,g=e,a=o(),null!==a){for(b=[],c=o();null!==c;)b.push(c),c=o();null!==b?a=[a,b]:(a=null,e=g)}else a=null,e=g;return null!==a&&(a=function(a,b,c){return b+c.join(\"\")}(d,a[0],a[1])),null===a&&(e=d),f--,0===f&&null===a&&k(\"identifier\"),a}function G(){var a,c,d,g,h,i,j;return i=e,a=E(),null!==a&&(a=function(a,b){return{type:\"Variable\",name:b}}(i,a)),null===a&&(e=i),null===a&&(a=A(),null===a&&(i=e,j=e,40===b.charCodeAt(e)?(a=\"(\",e++):(a=null,0===f&&k('\"(\"')),null!==a?(c=z(),null!==c?(d=P(),null!==d?(g=z(),null!==g?(41===b.charCodeAt(e)?(h=\")\",e++):(h=null,0===f&&k('\")\"')),null!==h?a=[a,c,d,g,h]:(a=null,e=j)):(a=null,e=j)):(a=null,e=j)):(a=null,e=j)):(a=null,e=j),null!==a&&(a=function(a,b){return b}(i,a[2])),null===a&&(e=i))),a}function H(){var a,b,c,d,f;return a=G(),null===a&&(d=e,f=e,a=I(),null!==a?(b=z(),null!==b?(c=H(),null!==c?a=[a,b,c]:(a=null,e=f)):(a=null,e=f)):(a=null,e=f),null!==a&&(a=function(a,b,c){return{type:\"UnaryExpression\",operator:b,expression:c}}(d,a[0],a[2])),null===a&&(e=d)),a}function I(){var a;return 43===b.charCodeAt(e)?(a=\"+\",e++):(a=null,0===f&&k('\"+\"')),null===a&&(45===b.charCodeAt(e)?(a=\"-\",e++):(a=null,0===f&&k('\"-\"')),null===a&&(33===b.charCodeAt(e)?(a=\"!\",e++):(a=null,0===f&&k('\"!\"')))),a}function J(){var a,b,c,d,f,g,h,i,j;if(h=e,i=e,a=H(),null!==a){for(b=[],j=e,c=z(),null!==c?(d=K(),null!==d?(f=z(),null!==f?(g=H(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==c;)b.push(c),j=e,c=z(),null!==c?(d=K(),null!==d?(f=z(),null!==f?(g=H(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==b?a=[a,b]:(a=null,e=i)}else a=null,e=i;return null!==a&&(a=function(a,b,c){for(var d=b,e=0;c.length>e;e++)d={type:\"MultiplicativeExpression\",operator:c[e][1],left:d,right:c[e][3]};return d}(h,a[0],a[1])),null===a&&(e=h),a}function K(){var a;return 42===b.charCodeAt(e)?(a=\"*\",e++):(a=null,0===f&&k('\"*\"')),null===a&&(47===b.charCodeAt(e)?(a=\"/\",e++):(a=null,0===f&&k('\"/\"'))),a}function L(){var a,b,c,d,f,g,h,i,j;if(h=e,i=e,a=J(),null!==a){for(b=[],j=e,c=z(),null!==c?(d=M(),null!==d?(f=z(),null!==f?(g=J(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==c;)b.push(c),j=e,c=z(),null!==c?(d=M(),null!==d?(f=z(),null!==f?(g=J(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==b?a=[a,b]:(a=null,e=i)}else a=null,e=i;return null!==a&&(a=function(a,b,c){for(var d=b,e=0;c.length>e;e++)d={type:\"AdditiveExpression\",operator:c[e][1],left:d,right:c[e][3]};return d}(h,a[0],a[1])),null===a&&(e=h),a}function M(){var a;return 43===b.charCodeAt(e)?(a=\"+\",e++):(a=null,0===f&&k('\"+\"')),null===a&&(45===b.charCodeAt(e)?(a=\"-\",e++):(a=null,0===f&&k('\"-\"'))),a}function N(){var a,b,c,d,f,g,h,i,j;if(h=e,i=e,a=L(),null!==a){for(b=[],j=e,c=z(),null!==c?(d=O(),null!==d?(f=z(),null!==f?(g=L(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==c;)b.push(c),j=e,c=z(),null!==c?(d=O(),null!==d?(f=z(),null!==f?(g=L(),null!==g?c=[c,d,f,g]:(c=null,e=j)):(c=null,e=j)):(c=null,e=j)):(c=null,e=j);null!==b?a=[a,b]:(a=null,e=i)}else a=null,e=i;return null!==a&&(a=function(a,b,c){for(var d=b,e=0;c.length>e;e++)d={type:\"Inequality\",operator:c[e][1],left:d,right:c[e][3]};return d}(h,a[0],a[1])),null===a&&(e=h),a}function O(){var a;return\"<=\"===b.substr(e,2)?(a=\"<=\",e+=2):(a=null,0===f&&k('\"<=\"')),null===a&&(\">=\"===b.substr(e,2)?(a=\">=\",e+=2):(a=null,0===f&&k('\">=\"')),null===a&&(60===b.charCodeAt(e)?(a=\"<\",e++):(a=null,0===f&&k('\"<\"')),null===a&&(62===b.charCodeAt(e)?(a=\">\",e++):(a=null,0===f&&k('\">\"'))))),a}function P(){var a,c,d,g,h,i,j,l,m;if(j=e,l=e,a=N(),null!==a){for(c=[],m=e,d=z(),null!==d?(\"==\"===b.substr(e,2)?(g=\"==\",e+=2):(g=null,0===f&&k('\"==\"')),null!==g?(h=z(),null!==h?(i=N(),null!==i?d=[d,g,h,i]:(d=null,e=m)):(d=null,e=m)):(d=null,e=m)):(d=null,e=m);null!==d;)c.push(d),m=e,d=z(),null!==d?(\"==\"===b.substr(e,2)?(g=\"==\",e+=2):(g=null,0===f&&k('\"==\"')),null!==g?(h=z(),null!==h?(i=N(),null!==i?d=[d,g,h,i]:(d=null,e=m)):(d=null,e=m)):(d=null,e=m)):(d=null,e=m);null!==c?a=[a,c]:(a=null,e=l)}else a=null,e=l;return null!==a&&(a=function(a,b,c){for(var d=b,e=0;c.length>e;e++)d={type:\"Equality\",operator:c[e][1],left:d,right:c[e][3]};return d}(j,a[0],a[1])),null===a&&(e=j),a}function Q(a){a.sort();for(var b=null,c=[],d=0;a.length>d;d++)a[d]!==b&&(c.push(a[d]),b=a[d]);return c}function R(){for(var a=1,c=1,d=!1,f=0;Math.max(e,g)>f;f++){var h=b.charAt(f);\"\\n\"===h?(d||a++,c=1,d=!1):\"\\r\"===h||\"\\u2028\"===h||\"\\u2029\"===h?(a++,c=1,d=!0):(c++,d=!1)}return{line:a,column:c}}var d={start:l,Statement:m,SourceCharacter:n,IdentifierStart:o,WhiteSpace:p,LineTerminator:q,LineTerminatorSequence:r,EOS:s,EOF:t,Comment:u,MultiLineComment:v,MultiLineCommentNoLineTerminator:w,SingleLineComment:x,_:y,__:z,Literal:A,Integer:B,Real:C,SignedInteger:D,Identifier:E,IdentifierName:F,PrimaryExpression:G,UnaryExpression:H,UnaryOperator:I,MultiplicativeExpression:J,MultiplicativeOperator:K,AdditiveExpression:L,AdditiveOperator:M,InequalityExpression:N,InequalityOperator:O,LinearExpression:P};if(void 0!==c){if(void 0===d[c])throw Error(\"Invalid rule name: \"+a(c)+\".\")}else c=\"start\";var e=0,f=0,g=0,h=[],S=d[c]();if(null===S||e!==b.length){var T=Math.max(e,g),U=b.length>T?b.charAt(T):null,V=R();throw new this.SyntaxError(Q(h),U,T,V.line,V.column)}return S},toSource:function(){return this._source}};return b.SyntaxError=function(b,c,d,e,f){function g(b,c){var d,e;switch(b.length){case 0:d=\"end of input\";break;case 1:d=b[0];break;default:d=b.slice(0,b.length-1).join(\", \")+\" or \"+b[b.length-1]}return e=c?a(c):\"end of input\",\"Expected \"+d+\" but \"+e+\" found.\"}this.name=\"SyntaxError\",this.expected=b,this.found=c,this.message=g(b,c),this.offset=d,this.line=e,this.column=f},b.SyntaxError.prototype=Error.prototype,b}();\n}).call(\n  (typeof module != \"undefined\") ?\n      (module.compiled = true && module) : this\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/cassowary/bin/c.js\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 9\n ** module chunks = 0\n **/","import solver from 'constraint-solver';\nimport Attribute from './Attribute';\n\n/**\n * A SubView is automatically generated when constraints are added to a View.\n *\n * @namespace SubView\n */\nclass SubView {\n    constructor(options) {\n        this._name = options.name;\n        this._type = options.type;\n        this._solver = options.solver;\n        this._attr = {};\n        if (!options.name) {\n            if (process.env.CASSOWARYJS) {\n                this._attr[Attribute.LEFT] = new solver.Variable();\n                this._solver.addConstraint(new solver.StayConstraint(this._attr[Attribute.LEFT], solver.Strength.required));\n                this._attr[Attribute.TOP] = new solver.Variable();\n                this._solver.addConstraint(new solver.StayConstraint(this._attr[Attribute.TOP], solver.Strength.required));\n                this._attr[Attribute.ZINDEX] = new solver.Variable();\n                this._solver.addConstraint(new solver.StayConstraint(this._attr[Attribute.ZINDEX], solver.Strength.required));\n            }\n            else {\n                this._attr[Attribute.LEFT] = new solver.Variable();\n                this._solver.addConstraint(new solver.Constraint(this._attr[Attribute.LEFT], solver.Operator.Eq, 0));\n                this._attr[Attribute.TOP] = new solver.Variable();\n                this._solver.addConstraint(new solver.Constraint(this._attr[Attribute.TOP], solver.Operator.Eq, 0));\n                this._attr[Attribute.ZINDEX] = new solver.Variable();\n                this._solver.addConstraint(new solver.Constraint(this._attr[Attribute.ZINDEX], solver.Operator.Eq, 0));\n            }\n        }\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            left: this.left,\n            top: this.top,\n            width: this.width,\n            height: this.height\n        };\n    }\n    toString() {\n        JSON.stringify(this.toJSON(), undefined, 2);\n    }\n\n    /**\n     * Name of the sub-view.\n     * @readonly\n     * @type {String}\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * Left value (`Attribute.LEFT`).\n     * @readonly\n     * @type {Number}\n     */\n    get left() {\n        return this._getAttrValue(Attribute.LEFT);\n    }\n\n    /**\n     * Right value (`Attribute.RIGHT`).\n     * @readonly\n     * @type {Number}\n     */\n    get right() {\n        return this._getAttrValue(Attribute.RIGHT);\n    }\n\n    /**\n     * Width value (`Attribute.WIDTH`).\n     * @type {Number}\n     */\n    get width() {\n        return this._getAttrValue(Attribute.WIDTH);\n    }\n\n    /**\n     * Height value (`Attribute.HEIGHT`).\n     * @readonly\n     * @type {Number}\n     */\n    get height() {\n        return this._getAttrValue(Attribute.HEIGHT);\n    }\n\n    /**\n     * Intrinsic width of the sub-view.\n     *\n     * Use this property to explicitely set the width of the sub-view, e.g.:\n     * ```javascript\n     * var view = new AutoLayout.View(AutoLayout.VisualFormat.parse('|[child1][child2]|'), {\n     *   width: 500\n     * });\n     * view.subViews.child1.intrinsicWidth = 100;\n     * console.log('child2 width: ' + view.subViews.child2.width); // 400\n     * ```\n     *\n     * @type {Number}\n     */\n    get intrinsicWidth() {\n        return this._intrinsicWidth;\n    }\n    set intrinsicWidth(value) {\n        if ((value !== undefined) && (value !== this._intrinsicWidth)) {\n            const attr = this._getAttr(Attribute.WIDTH);\n            if (this._intrinsicWidth === undefined) {\n                if (process.env.CASSOWARYJS) {\n                    this._solver.addEditVar(attr, new solver.Strength('required', this._name ? 998 : 999, 1000, 1000));\n                }\n                else {\n                    this._solver.addEditVariable(attr, solver.Strength.create(this._name ? 998 : 999, 1000, 1000));\n                }\n            }\n            this._intrinsicWidth = value;\n            this._solver.suggestValue(attr, value);\n            if (process.env.CASSOWARYJS) {\n                this._solver.resolve();\n            }\n            else {\n                this._solver.updateVariables();\n            }\n        }\n    }\n\n    /**\n     * Intrinsic height of the sub-view.\n     *\n     * See `intrinsicWidth`.\n     *\n     * @type {Number}\n     */\n    get intrinsicHeight() {\n        return this._intrinsicHeight;\n    }\n    set intrinsicHeight(value) {\n        if ((value !== undefined) && (value !== this._intrinsicHeight)) {\n            const attr = this._getAttr(Attribute.HEIGHT);\n            if (this._intrinsicHeight === undefined) {\n                if (process.env.CASSOWARYJS) {\n                    this._solver.addEditVar(attr, new solver.Strength('required', this._name ? 998 : 999, 1000, 1000));\n                }\n                else {\n                    this._solver.addEditVariable(attr, solver.Strength.create(this._name ? 998 : 999, 1000, 1000));\n                }\n            }\n            this._intrinsicHeight = value;\n            this._solver.suggestValue(attr, value);\n            if (process.env.CASSOWARYJS) {\n                this._solver.resolve();\n            }\n            else {\n                this._solver.updateVariables();\n            }\n        }\n    }\n\n    /**\n     * Top value (`Attribute.TOP`).\n     * @readonly\n     * @type {Number}\n     */\n    get top() {\n        return this._getAttrValue(Attribute.TOP);\n    }\n\n    /**\n     * Bottom value (`Attribute.BOTTOM`).\n     * @readonly\n     * @type {Number}\n     */\n    get bottom() {\n        return this._getAttrValue(Attribute.BOTTOM);\n    }\n\n    /**\n     * Horizontal center (`Attribute.CENTERX`).\n     * @readonly\n     * @type {Number}\n     */\n    get centerX() {\n        return this._getAttrValue(Attribute.CENTERX);\n    }\n\n    /**\n     * Vertical center (`Attribute.CENTERY`).\n     * @readonly\n     * @type {Number}\n     */\n    get centerY() {\n        return this._getAttrValue(Attribute.CENTERY);\n    }\n\n    /**\n     * Z-index (`Attribute.ZINDEX`).\n     * @readonly\n     * @type {Number}\n     */\n    get zIndex() {\n        return this._getAttrValue(Attribute.ZINDEX);\n    }\n\n    /**\n     * Returns the type of the sub-view.\n     * @readonly\n     * @type {String}\n     */\n    get type() {\n        return this._type;\n    }\n\n    /**\n     * Gets the value of one of the attributes.\n     *\n     * @param {String|Attribute} attr Attribute name (e.g. 'right', 'centerY', Attribute.TOP).\n     * @return {Number} value or `undefined`\n     */\n    getValue(attr) {\n        return this._attr[attr] ? this._attr[attr].value() : undefined;\n    }\n\n    /**\n     * @private\n     */\n    _getAttr(attr) {\n        if (this._attr[attr]) {\n            return this._attr[attr];\n        }\n        this._attr[attr] = process.env.CASSOWARYJS ? new solver.Variable() : new solver.Variable();\n        switch (attr) {\n            case Attribute.RIGHT:\n                this._getAttr(Attribute.LEFT);\n                this._getAttr(Attribute.WIDTH);\n                if (process.env.CASSOWARYJS) {\n                    this._solver.addConstraint(new solver.Equation(this._attr[attr], solver.plus(this._attr[Attribute.LEFT], this._attr[Attribute.WIDTH])));\n                }\n                else {\n                    this._solver.addConstraint(new solver.Constraint(this._attr[attr], solver.Operator.Eq, this._attr[Attribute.LEFT].plus(this._attr[Attribute.WIDTH])));\n                }\n                break;\n            case Attribute.BOTTOM:\n                this._getAttr(Attribute.TOP);\n                this._getAttr(Attribute.HEIGHT);\n                if (process.env.CASSOWARYJS) {\n                    this._solver.addConstraint(new solver.Equation(this._attr[attr], solver.plus(this._attr[Attribute.TOP], this._attr[Attribute.HEIGHT])));\n                }\n                else {\n                    this._solver.addConstraint(new solver.Constraint(this._attr[attr], solver.Operator.Eq, this._attr[Attribute.TOP].plus(this._attr[Attribute.HEIGHT])));\n                }\n                break;\n            case Attribute.CENTERX:\n                this._getAttr(Attribute.LEFT);\n                this._getAttr(Attribute.WIDTH);\n                if (process.env.CASSOWARYJS) {\n                    this._solver.addConstraint(new solver.Equation(this._attr[attr], solver.plus(this._attr[Attribute.LEFT], solver.divide(this._attr[Attribute.WIDTH], 2))));\n                }\n                else {\n                    this._solver.addConstraint(new solver.Constraint(this._attr[attr], solver.Operator.Eq, this._attr[Attribute.LEFT].plus(this._attr[Attribute.WIDTH].divide(2))));\n                }\n                break;\n            case Attribute.CENTERY:\n                this._getAttr(Attribute.TOP);\n                this._getAttr(Attribute.HEIGHT);\n                if (process.env.CASSOWARYJS) {\n                    this._solver.addConstraint(new solver.Equation(this._attr[attr], solver.plus(this._attr[Attribute.TOP], solver.divide(this._attr[Attribute.HEIGHT], 2))));\n                }\n                else {\n                    this._solver.addConstraint(new solver.Constraint(this._attr[attr], solver.Operator.Eq, this._attr[Attribute.TOP].plus(this._attr[Attribute.HEIGHT].divide(2))));\n                }\n                break;\n        }\n        if (!process.env.CASSOWARYJS) {\n            this._solver.updateVariables();\n        }\n        return this._attr[attr];\n    }\n\n    /**\n     * @private\n     */\n    _getAttrValue(attr) {\n        if (process.env.CASSOWARYJS) {\n            return this._getAttr(attr).value;\n        }\n        else {\n            return this._getAttr(attr).value();\n        }\n    }\n}\n\nexport default SubView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/SubView.js\n **/"],"sourceRoot":""}